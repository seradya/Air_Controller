ARM GAS  /tmp/ccshOR3o.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"ssd1306.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	__aeabi_f2d
  18              		.global	__aeabi_dmul
  19              		.global	__aeabi_ddiv
  20              		.global	__aeabi_d2f
  21              		.section	.text.ssd1306_DegToRad,"ax",%progbits
  22              		.align	1
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	ssd1306_DegToRad:
  28              	.LVL0:
  29              	.LFB79:
  30              		.file 1 "Core/Src/ssd1306.c"
   1:Core/Src/ssd1306.c **** #include "ssd1306.h"
   2:Core/Src/ssd1306.c **** #include <math.h>
   3:Core/Src/ssd1306.c **** #include <stdlib.h>
   4:Core/Src/ssd1306.c **** #include <string.h>  // For memcpy
   5:Core/Src/ssd1306.c **** 
   6:Core/Src/ssd1306.c **** #if defined(SSD1306_USE_I2C)
   7:Core/Src/ssd1306.c **** 
   8:Core/Src/ssd1306.c **** void ssd1306_Reset(void) {
   9:Core/Src/ssd1306.c ****     /* for I2C - do nothing */
  10:Core/Src/ssd1306.c **** }
  11:Core/Src/ssd1306.c **** 
  12:Core/Src/ssd1306.c **** // Send a byte to the command register
  13:Core/Src/ssd1306.c **** void ssd1306_WriteCommand(uint8_t byte) {
  14:Core/Src/ssd1306.c ****     HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
  15:Core/Src/ssd1306.c **** }
  16:Core/Src/ssd1306.c **** 
  17:Core/Src/ssd1306.c **** // Send data
  18:Core/Src/ssd1306.c **** void ssd1306_WriteData(uint8_t* buffer, size_t buff_size) {
  19:Core/Src/ssd1306.c ****     HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x40, 1, buffer, buff_size, HAL_MAX_DELA
  20:Core/Src/ssd1306.c **** }
  21:Core/Src/ssd1306.c **** 
  22:Core/Src/ssd1306.c **** #elif defined(SSD1306_USE_SPI)
  23:Core/Src/ssd1306.c **** 
  24:Core/Src/ssd1306.c **** void ssd1306_Reset(void) {
  25:Core/Src/ssd1306.c ****     // CS = High (not selected)
  26:Core/Src/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_CS_Port, SSD1306_CS_Pin, GPIO_PIN_SET);
  27:Core/Src/ssd1306.c **** 
  28:Core/Src/ssd1306.c ****     // Reset the OLED
ARM GAS  /tmp/ccshOR3o.s 			page 2


  29:Core/Src/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_Reset_Port, SSD1306_Reset_Pin, GPIO_PIN_RESET);
  30:Core/Src/ssd1306.c ****     HAL_Delay(10);
  31:Core/Src/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_Reset_Port, SSD1306_Reset_Pin, GPIO_PIN_SET);
  32:Core/Src/ssd1306.c ****     HAL_Delay(10);
  33:Core/Src/ssd1306.c **** }
  34:Core/Src/ssd1306.c **** 
  35:Core/Src/ssd1306.c **** // Send a byte to the command register
  36:Core/Src/ssd1306.c **** void ssd1306_WriteCommand(uint8_t byte) {
  37:Core/Src/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_CS_Port, SSD1306_CS_Pin, GPIO_PIN_RESET); // select OLED
  38:Core/Src/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_DC_Port, SSD1306_DC_Pin, GPIO_PIN_RESET); // command
  39:Core/Src/ssd1306.c ****     HAL_SPI_Transmit(&SSD1306_SPI_PORT, (uint8_t *) &byte, 1, HAL_MAX_DELAY);
  40:Core/Src/ssd1306.c ****     //HAL_SPI_Transmit_DMA(&SSD1306_SPI_PORT, (uint8_t *) &byte, 1);
  41:Core/Src/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_CS_Port, SSD1306_CS_Pin, GPIO_PIN_SET); // un-select OLED
  42:Core/Src/ssd1306.c **** }
  43:Core/Src/ssd1306.c **** 
  44:Core/Src/ssd1306.c **** // Send data
  45:Core/Src/ssd1306.c **** void ssd1306_WriteData(uint8_t* buffer, size_t buff_size) {
  46:Core/Src/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_CS_Port, SSD1306_CS_Pin, GPIO_PIN_RESET); // select OLED
  47:Core/Src/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_DC_Port, SSD1306_DC_Pin, GPIO_PIN_SET); // data
  48:Core/Src/ssd1306.c ****     HAL_SPI_Transmit(&SSD1306_SPI_PORT, buffer, buff_size, HAL_MAX_DELAY);
  49:Core/Src/ssd1306.c ****     //HAL_SPI_Transmit_DMA(&SSD1306_SPI_PORT, buffer, buff_size);
  50:Core/Src/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_CS_Port, SSD1306_CS_Pin, GPIO_PIN_SET); // un-select OLED
  51:Core/Src/ssd1306.c **** }
  52:Core/Src/ssd1306.c **** 
  53:Core/Src/ssd1306.c **** void ssd1306_WriteData_DMA(uint8_t* buffer, size_t buff_size) {
  54:Core/Src/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_CS_Port, SSD1306_CS_Pin, GPIO_PIN_RESET); // select OLED
  55:Core/Src/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_DC_Port, SSD1306_DC_Pin, GPIO_PIN_SET); // data
  56:Core/Src/ssd1306.c ****     //HAL_SPI_Transmit(&SSD1306_SPI_PORT, buffer, buff_size, HAL_MAX_DELAY);
  57:Core/Src/ssd1306.c ****     HAL_SPI_Transmit_DMA(&SSD1306_SPI_PORT, buffer, buff_size);
  58:Core/Src/ssd1306.c ****     //HAL_GPIO_WritePin(SSD1306_CS_Port, SSD1306_CS_Pin, GPIO_PIN_SET); // un-select OLED
  59:Core/Src/ssd1306.c **** }
  60:Core/Src/ssd1306.c **** 
  61:Core/Src/ssd1306.c **** #else
  62:Core/Src/ssd1306.c **** #error "You should define SSD1306_USE_SPI or SSD1306_USE_I2C macro"
  63:Core/Src/ssd1306.c **** #endif
  64:Core/Src/ssd1306.c **** 
  65:Core/Src/ssd1306.c **** 
  66:Core/Src/ssd1306.c **** // Screenbuffer
  67:Core/Src/ssd1306.c **** static uint8_t SSD1306_Buffer[SSD1306_BUFFER_SIZE];
  68:Core/Src/ssd1306.c **** 
  69:Core/Src/ssd1306.c **** // Screen object
  70:Core/Src/ssd1306.c **** static SSD1306_t SSD1306;
  71:Core/Src/ssd1306.c **** 
  72:Core/Src/ssd1306.c **** /* Fills the Screenbuffer with values from a given buffer of a fixed length */
  73:Core/Src/ssd1306.c **** SSD1306_Error_t ssd1306_FillBuffer(uint8_t* buf, uint32_t len) {
  74:Core/Src/ssd1306.c ****     SSD1306_Error_t ret = SSD1306_ERR;
  75:Core/Src/ssd1306.c ****     if (len <= SSD1306_BUFFER_SIZE) {
  76:Core/Src/ssd1306.c ****         memcpy(SSD1306_Buffer,buf,len);
  77:Core/Src/ssd1306.c ****         ret = SSD1306_OK;
  78:Core/Src/ssd1306.c ****     }
  79:Core/Src/ssd1306.c ****     return ret;
  80:Core/Src/ssd1306.c **** }
  81:Core/Src/ssd1306.c **** 
  82:Core/Src/ssd1306.c **** // Initialize the oled screen
  83:Core/Src/ssd1306.c **** void ssd1306_Init(void) {
  84:Core/Src/ssd1306.c ****     // Reset OLED
  85:Core/Src/ssd1306.c ****     ssd1306_Reset();
ARM GAS  /tmp/ccshOR3o.s 			page 3


  86:Core/Src/ssd1306.c **** 
  87:Core/Src/ssd1306.c ****     // Wait for the screen to boot
  88:Core/Src/ssd1306.c ****     HAL_Delay(100);
  89:Core/Src/ssd1306.c **** 
  90:Core/Src/ssd1306.c ****     // Init OLED
  91:Core/Src/ssd1306.c ****     ssd1306_SetDisplayOn(0); //display off
  92:Core/Src/ssd1306.c **** 
  93:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0x20); //Set Memory Addressing Mode
  94:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0x00); // 00b,Horizontal Addressing Mode; 01b,Vertical Addressing Mode;
  95:Core/Src/ssd1306.c ****                                 // 10b,Page Addressing Mode (RESET); 11b,Invalid
  96:Core/Src/ssd1306.c **** 
  97:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0xB0); //Set Page Start Address for Page Addressing Mode,0-7
  98:Core/Src/ssd1306.c **** 
  99:Core/Src/ssd1306.c **** #ifdef SSD1306_MIRROR_VERT
 100:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0xC0); // Mirror vertically
 101:Core/Src/ssd1306.c **** #else
 102:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0xC8); //Set COM Output Scan Direction
 103:Core/Src/ssd1306.c **** #endif
 104:Core/Src/ssd1306.c **** 
 105:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0x00); //---set low column address
 106:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0x10); //---set high column address
 107:Core/Src/ssd1306.c **** 
 108:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0x40); //--set start line address - CHECK
 109:Core/Src/ssd1306.c **** 
 110:Core/Src/ssd1306.c ****     ssd1306_SetContrast(0xFF);
 111:Core/Src/ssd1306.c **** 
 112:Core/Src/ssd1306.c **** #ifdef SSD1306_MIRROR_HORIZ
 113:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0xA0); // Mirror horizontally
 114:Core/Src/ssd1306.c **** #else
 115:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0xA1); //--set segment re-map 0 to 127 - CHECK
 116:Core/Src/ssd1306.c **** #endif
 117:Core/Src/ssd1306.c **** 
 118:Core/Src/ssd1306.c **** #ifdef SSD1306_INVERSE_COLOR
 119:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0xA7); //--set inverse color
 120:Core/Src/ssd1306.c **** #else
 121:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0xA6); //--set normal color
 122:Core/Src/ssd1306.c **** #endif
 123:Core/Src/ssd1306.c **** 
 124:Core/Src/ssd1306.c **** // Set multiplex ratio.
 125:Core/Src/ssd1306.c **** #if (SSD1306_HEIGHT == 128)
 126:Core/Src/ssd1306.c ****     // Found in the Luma Python lib for SH1106.
 127:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0xFF);
 128:Core/Src/ssd1306.c **** #else
 129:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0xA8); //--set multiplex ratio(1 to 64) - CHECK
 130:Core/Src/ssd1306.c **** #endif
 131:Core/Src/ssd1306.c **** 
 132:Core/Src/ssd1306.c **** #if (SSD1306_HEIGHT == 32)
 133:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0x1F); //
 134:Core/Src/ssd1306.c **** #elif (SSD1306_HEIGHT == 64)
 135:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0x3F); //
 136:Core/Src/ssd1306.c **** #elif (SSD1306_HEIGHT == 128)
 137:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0x3F); // Seems to work for 128px high displays too.
 138:Core/Src/ssd1306.c **** #else
 139:Core/Src/ssd1306.c **** #error "Only 32, 64, or 128 lines of height are supported!"
 140:Core/Src/ssd1306.c **** #endif
 141:Core/Src/ssd1306.c **** 
 142:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0xA4); //0xa4,Output follows RAM content;0xa5,Output ignores RAM content
ARM GAS  /tmp/ccshOR3o.s 			page 4


 143:Core/Src/ssd1306.c **** 
 144:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0xD3); //-set display offset - CHECK
 145:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0x00); //-not offset
 146:Core/Src/ssd1306.c **** 
 147:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0xD5); //--set display clock divide ratio/oscillator frequency
 148:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0xF0); //--set divide ratio
 149:Core/Src/ssd1306.c **** 
 150:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0xD9); //--set pre-charge period
 151:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0x22); //
 152:Core/Src/ssd1306.c **** 
 153:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0xDA); //--set com pins hardware configuration - CHECK
 154:Core/Src/ssd1306.c **** #if (SSD1306_HEIGHT == 32)
 155:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0x02);
 156:Core/Src/ssd1306.c **** #elif (SSD1306_HEIGHT == 64)
 157:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0x12);
 158:Core/Src/ssd1306.c **** #elif (SSD1306_HEIGHT == 128)
 159:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0x12);
 160:Core/Src/ssd1306.c **** #else
 161:Core/Src/ssd1306.c **** #error "Only 32, 64, or 128 lines of height are supported!"
 162:Core/Src/ssd1306.c **** #endif
 163:Core/Src/ssd1306.c **** 
 164:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0xDB); //--set vcomh
 165:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0x20); //0x20,0.77xVcc
 166:Core/Src/ssd1306.c **** 
 167:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0x8D); //--set DC-DC enable
 168:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0x14); //
 169:Core/Src/ssd1306.c ****     ssd1306_SetDisplayOn(1); //--turn on SSD1306 panel
 170:Core/Src/ssd1306.c **** 
 171:Core/Src/ssd1306.c ****     // Clear screen
 172:Core/Src/ssd1306.c ****     ssd1306_Fill(Black);
 173:Core/Src/ssd1306.c ****     
 174:Core/Src/ssd1306.c ****     // Flush buffer to screen
 175:Core/Src/ssd1306.c ****     ssd1306_UpdateScreen();
 176:Core/Src/ssd1306.c ****     
 177:Core/Src/ssd1306.c ****     // Set default values for screen object
 178:Core/Src/ssd1306.c ****     SSD1306.CurrentX = 0;
 179:Core/Src/ssd1306.c ****     SSD1306.CurrentY = 0;
 180:Core/Src/ssd1306.c ****     
 181:Core/Src/ssd1306.c ****     SSD1306.Initialized = 1;
 182:Core/Src/ssd1306.c **** }
 183:Core/Src/ssd1306.c **** 
 184:Core/Src/ssd1306.c **** // Fill the whole screen with the given color
 185:Core/Src/ssd1306.c **** void ssd1306_Fill(SSD1306_COLOR color) {
 186:Core/Src/ssd1306.c ****     /* Set memory */
 187:Core/Src/ssd1306.c ****     uint32_t i;
 188:Core/Src/ssd1306.c **** 
 189:Core/Src/ssd1306.c ****     for(i = 0; i < sizeof(SSD1306_Buffer); i++) {
 190:Core/Src/ssd1306.c ****         SSD1306_Buffer[i] = (color == Black) ? 0x00 : 0xFF;
 191:Core/Src/ssd1306.c ****     }
 192:Core/Src/ssd1306.c **** }
 193:Core/Src/ssd1306.c **** 
 194:Core/Src/ssd1306.c **** // Write the screenbuffer with changed to the screen
 195:Core/Src/ssd1306.c **** void ssd1306_UpdateScreen(void) {
 196:Core/Src/ssd1306.c ****     // Write data to each page of RAM. Number of pages
 197:Core/Src/ssd1306.c ****     // depends on the screen height:
 198:Core/Src/ssd1306.c ****     //
 199:Core/Src/ssd1306.c ****     //  * 32px   ==  4 pages
ARM GAS  /tmp/ccshOR3o.s 			page 5


 200:Core/Src/ssd1306.c ****     //  * 64px   ==  8 pages
 201:Core/Src/ssd1306.c ****     //  * 128px  ==  16 pages
 202:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0xB0);
 203:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0x00 + SSD1306_X_OFFSET_LOWER);
 204:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0x10 + SSD1306_X_OFFSET_UPPER);
 205:Core/Src/ssd1306.c ****     ssd1306_WriteData_DMA(SSD1306_Buffer,SSD1306_WIDTH*8);
 206:Core/Src/ssd1306.c ****     //for(uint8_t i = 0; i < SSD1306_HEIGHT/8; i++) {
 207:Core/Src/ssd1306.c ****         //ssd1306_WriteCommand(0xB0 + i); // Set the current RAM page address.
 208:Core/Src/ssd1306.c ****         //ssd1306_WriteCommand(0x00 + SSD1306_X_OFFSET_LOWER);
 209:Core/Src/ssd1306.c ****         //ssd1306_WriteCommand(0x10 + SSD1306_X_OFFSET_UPPER);
 210:Core/Src/ssd1306.c ****         //ssd1306_WriteData(&SSD1306_Buffer[SSD1306_WIDTH*i],SSD1306_WIDTH);
 211:Core/Src/ssd1306.c ****     //}
 212:Core/Src/ssd1306.c **** }
 213:Core/Src/ssd1306.c **** 
 214:Core/Src/ssd1306.c **** //    Draw one pixel in the screenbuffer
 215:Core/Src/ssd1306.c **** //    X => X Coordinate
 216:Core/Src/ssd1306.c **** //    Y => Y Coordinate
 217:Core/Src/ssd1306.c **** //    color => Pixel color
 218:Core/Src/ssd1306.c **** void ssd1306_DrawPixel(uint8_t x, uint8_t y, SSD1306_COLOR color) {
 219:Core/Src/ssd1306.c ****     if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 220:Core/Src/ssd1306.c ****         // Don't write outside the buffer
 221:Core/Src/ssd1306.c ****         return;
 222:Core/Src/ssd1306.c ****     }
 223:Core/Src/ssd1306.c ****    
 224:Core/Src/ssd1306.c ****     // Draw in the right color
 225:Core/Src/ssd1306.c ****     if(color == White) {
 226:Core/Src/ssd1306.c ****         SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 227:Core/Src/ssd1306.c ****     } else { 
 228:Core/Src/ssd1306.c ****         SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 229:Core/Src/ssd1306.c ****     }
 230:Core/Src/ssd1306.c **** }
 231:Core/Src/ssd1306.c **** 
 232:Core/Src/ssd1306.c **** // Draw 1 char to the screen buffer
 233:Core/Src/ssd1306.c **** // ch       => char om weg te schrijven
 234:Core/Src/ssd1306.c **** // Font     => Font waarmee we gaan schrijven
 235:Core/Src/ssd1306.c **** // color    => Black or White
 236:Core/Src/ssd1306.c **** char ssd1306_WriteChar(char ch, FontDef Font, SSD1306_COLOR color) {
 237:Core/Src/ssd1306.c ****     uint32_t i, b, j;
 238:Core/Src/ssd1306.c ****     
 239:Core/Src/ssd1306.c ****     // Check if character is valid
 240:Core/Src/ssd1306.c ****     if (ch < 32 || ch > 126)
 241:Core/Src/ssd1306.c ****         return 0;
 242:Core/Src/ssd1306.c ****     
 243:Core/Src/ssd1306.c ****     // Check remaining space on current line
 244:Core/Src/ssd1306.c ****     if (SSD1306_WIDTH < (SSD1306.CurrentX + Font.FontWidth) ||
 245:Core/Src/ssd1306.c ****         SSD1306_HEIGHT < (SSD1306.CurrentY + Font.FontHeight))
 246:Core/Src/ssd1306.c ****     {
 247:Core/Src/ssd1306.c ****         // Not enough space on current line
 248:Core/Src/ssd1306.c ****         return 0;
 249:Core/Src/ssd1306.c ****     }
 250:Core/Src/ssd1306.c ****     
 251:Core/Src/ssd1306.c ****     // Use the font to write
 252:Core/Src/ssd1306.c ****     for(i = 0; i < Font.FontHeight; i++) {
 253:Core/Src/ssd1306.c ****         b = Font.data[(ch - 32) * Font.FontHeight + i];
 254:Core/Src/ssd1306.c ****         for(j = 0; j < Font.FontWidth; j++) {
 255:Core/Src/ssd1306.c ****             if((b << j) & 0x8000)  {
 256:Core/Src/ssd1306.c ****                 ssd1306_DrawPixel(SSD1306.CurrentX + j, (SSD1306.CurrentY + i), (SSD1306_COLOR) col
ARM GAS  /tmp/ccshOR3o.s 			page 6


 257:Core/Src/ssd1306.c ****             } else {
 258:Core/Src/ssd1306.c ****                 ssd1306_DrawPixel(SSD1306.CurrentX + j, (SSD1306.CurrentY + i), (SSD1306_COLOR)!col
 259:Core/Src/ssd1306.c ****             }
 260:Core/Src/ssd1306.c ****         }
 261:Core/Src/ssd1306.c ****     }
 262:Core/Src/ssd1306.c ****     
 263:Core/Src/ssd1306.c ****     // The current space is now taken
 264:Core/Src/ssd1306.c ****     SSD1306.CurrentX += Font.FontWidth;
 265:Core/Src/ssd1306.c ****     
 266:Core/Src/ssd1306.c ****     // Return written char for validation
 267:Core/Src/ssd1306.c ****     return ch;
 268:Core/Src/ssd1306.c **** }
 269:Core/Src/ssd1306.c **** 
 270:Core/Src/ssd1306.c **** // Write full string to screenbuffer
 271:Core/Src/ssd1306.c **** char ssd1306_WriteString(char* str, FontDef Font, SSD1306_COLOR color) {
 272:Core/Src/ssd1306.c ****     // Write until null-byte
 273:Core/Src/ssd1306.c ****     while (*str) {
 274:Core/Src/ssd1306.c ****         if (ssd1306_WriteChar(*str, Font, color) != *str) {
 275:Core/Src/ssd1306.c ****             // Char could not be written
 276:Core/Src/ssd1306.c ****             return *str;
 277:Core/Src/ssd1306.c ****         }
 278:Core/Src/ssd1306.c ****         
 279:Core/Src/ssd1306.c ****         // Next char
 280:Core/Src/ssd1306.c ****         str++;
 281:Core/Src/ssd1306.c ****     }
 282:Core/Src/ssd1306.c ****     
 283:Core/Src/ssd1306.c ****     // Everything ok
 284:Core/Src/ssd1306.c ****     return *str;
 285:Core/Src/ssd1306.c **** }
 286:Core/Src/ssd1306.c **** 
 287:Core/Src/ssd1306.c **** // Position the cursor
 288:Core/Src/ssd1306.c **** void ssd1306_SetCursor(uint8_t x, uint8_t y) {
 289:Core/Src/ssd1306.c ****     SSD1306.CurrentX = x;
 290:Core/Src/ssd1306.c ****     SSD1306.CurrentY = y;
 291:Core/Src/ssd1306.c **** }
 292:Core/Src/ssd1306.c **** 
 293:Core/Src/ssd1306.c **** // Draw line by Bresenhem's algorithm
 294:Core/Src/ssd1306.c **** void ssd1306_Line(uint8_t x1, uint8_t y1, uint8_t x2, uint8_t y2, SSD1306_COLOR color) {
 295:Core/Src/ssd1306.c ****   int32_t deltaX = abs(x2 - x1);
 296:Core/Src/ssd1306.c ****   int32_t deltaY = abs(y2 - y1);
 297:Core/Src/ssd1306.c ****   int32_t signX = ((x1 < x2) ? 1 : -1);
 298:Core/Src/ssd1306.c ****   int32_t signY = ((y1 < y2) ? 1 : -1);
 299:Core/Src/ssd1306.c ****   int32_t error = deltaX - deltaY;
 300:Core/Src/ssd1306.c ****   int32_t error2;
 301:Core/Src/ssd1306.c ****     
 302:Core/Src/ssd1306.c ****   ssd1306_DrawPixel(x2, y2, color);
 303:Core/Src/ssd1306.c ****     while((x1 != x2) || (y1 != y2))
 304:Core/Src/ssd1306.c ****     {
 305:Core/Src/ssd1306.c ****     ssd1306_DrawPixel(x1, y1, color);
 306:Core/Src/ssd1306.c ****     error2 = error * 2;
 307:Core/Src/ssd1306.c ****     if(error2 > -deltaY)
 308:Core/Src/ssd1306.c ****     {
 309:Core/Src/ssd1306.c ****       error -= deltaY;
 310:Core/Src/ssd1306.c ****       x1 += signX;
 311:Core/Src/ssd1306.c ****     }
 312:Core/Src/ssd1306.c ****     else
 313:Core/Src/ssd1306.c ****     {
ARM GAS  /tmp/ccshOR3o.s 			page 7


 314:Core/Src/ssd1306.c ****     /*nothing to do*/
 315:Core/Src/ssd1306.c ****     }
 316:Core/Src/ssd1306.c ****         
 317:Core/Src/ssd1306.c ****     if(error2 < deltaX)
 318:Core/Src/ssd1306.c ****     {
 319:Core/Src/ssd1306.c ****       error += deltaX;
 320:Core/Src/ssd1306.c ****       y1 += signY;
 321:Core/Src/ssd1306.c ****     }
 322:Core/Src/ssd1306.c ****     else
 323:Core/Src/ssd1306.c ****     {
 324:Core/Src/ssd1306.c ****     /*nothing to do*/
 325:Core/Src/ssd1306.c ****     }
 326:Core/Src/ssd1306.c ****   }
 327:Core/Src/ssd1306.c ****   return;
 328:Core/Src/ssd1306.c **** }
 329:Core/Src/ssd1306.c **** //Draw polyline
 330:Core/Src/ssd1306.c **** void ssd1306_Polyline(const SSD1306_VERTEX *par_vertex, uint16_t par_size, SSD1306_COLOR color) {
 331:Core/Src/ssd1306.c ****   uint16_t i;
 332:Core/Src/ssd1306.c ****   if(par_vertex != 0){
 333:Core/Src/ssd1306.c ****     for(i = 1; i < par_size; i++){
 334:Core/Src/ssd1306.c ****       ssd1306_Line(par_vertex[i - 1].x, par_vertex[i - 1].y, par_vertex[i].x, par_vertex[i].y, colo
 335:Core/Src/ssd1306.c ****     }
 336:Core/Src/ssd1306.c ****   }
 337:Core/Src/ssd1306.c ****   else
 338:Core/Src/ssd1306.c ****   {
 339:Core/Src/ssd1306.c ****     /*nothing to do*/
 340:Core/Src/ssd1306.c ****   }
 341:Core/Src/ssd1306.c ****   return;
 342:Core/Src/ssd1306.c **** }
 343:Core/Src/ssd1306.c **** /*Convert Degrees to Radians*/
 344:Core/Src/ssd1306.c **** static float ssd1306_DegToRad(float par_deg) {
  31              		.loc 1 344 46 view -0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 0
  34              		@ frame_needed = 0, uses_anonymous_args = 0
  35              		.loc 1 344 46 is_stmt 0 view .LVU1
  36 0000 08B5     		push	{r3, lr}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 3, -8
  40              		.cfi_offset 14, -4
 345:Core/Src/ssd1306.c ****     return par_deg * 3.14 / 180.0;
  41              		.loc 1 345 5 is_stmt 1 view .LVU2
  42              		.loc 1 345 20 is_stmt 0 view .LVU3
  43 0002 FFF7FEFF 		bl	__aeabi_f2d
  44              	.LVL1:
  45              		.loc 1 345 20 view .LVU4
  46 0006 06A3     		adr	r3, .L3
  47 0008 D3E90023 		ldrd	r2, [r3]
  48 000c FFF7FEFF 		bl	__aeabi_dmul
  49              	.LVL2:
  50              		.loc 1 345 27 view .LVU5
  51 0010 0022     		movs	r2, #0
  52 0012 054B     		ldr	r3, .L3+8
  53 0014 FFF7FEFF 		bl	__aeabi_ddiv
  54              	.LVL3:
  55 0018 FFF7FEFF 		bl	__aeabi_d2f
ARM GAS  /tmp/ccshOR3o.s 			page 8


  56              	.LVL4:
 346:Core/Src/ssd1306.c **** }
  57              		.loc 1 346 1 view .LVU6
  58 001c 08BD     		pop	{r3, pc}
  59              	.L4:
  60 001e 00BF     		.align	3
  61              	.L3:
  62 0020 1F85EB51 		.word	1374389535
  63 0024 B81E0940 		.word	1074339512
  64 0028 00806640 		.word	1080459264
  65              		.cfi_endproc
  66              	.LFE79:
  68              		.section	.text.ssd1306_NormalizeTo0_360,"ax",%progbits
  69              		.align	1
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  74              	ssd1306_NormalizeTo0_360:
  75              	.LVL5:
  76              	.LFB80:
 347:Core/Src/ssd1306.c **** /*Normalize degree to [0;360]*/
 348:Core/Src/ssd1306.c **** static uint16_t ssd1306_NormalizeTo0_360(uint16_t par_deg) {
  77              		.loc 1 348 60 is_stmt 1 view -0
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 0
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81              		@ link register save eliminated.
 349:Core/Src/ssd1306.c ****   uint16_t loc_angle;
  82              		.loc 1 349 3 view .LVU8
 350:Core/Src/ssd1306.c ****   if(par_deg <= 360)
  83              		.loc 1 350 3 view .LVU9
  84              		.loc 1 350 5 is_stmt 0 view .LVU10
  85 0000 B0F5B47F 		cmp	r0, #360
  86 0004 00D9     		bls	.L6
 351:Core/Src/ssd1306.c ****   {
 352:Core/Src/ssd1306.c ****     loc_angle = par_deg;
 353:Core/Src/ssd1306.c ****   }
 354:Core/Src/ssd1306.c ****   else
 355:Core/Src/ssd1306.c ****   {
 356:Core/Src/ssd1306.c ****     loc_angle = par_deg % 360;
  87              		.loc 1 356 5 is_stmt 1 view .LVU11
  88              	.LVL6:
 357:Core/Src/ssd1306.c ****     loc_angle = ((par_deg != 0)?par_deg:360);
  89              		.loc 1 357 5 view .LVU12
  90              		.loc 1 357 15 is_stmt 0 view .LVU13
  91 0006 00B1     		cbz	r0, .L8
  92              	.LVL7:
  93              	.L6:
 358:Core/Src/ssd1306.c ****   }
 359:Core/Src/ssd1306.c ****   return loc_angle;
  94              		.loc 1 359 3 is_stmt 1 view .LVU14
 360:Core/Src/ssd1306.c **** }
  95              		.loc 1 360 1 is_stmt 0 view .LVU15
  96 0008 7047     		bx	lr
  97              	.LVL8:
  98              	.L8:
 357:Core/Src/ssd1306.c ****     loc_angle = ((par_deg != 0)?par_deg:360);
ARM GAS  /tmp/ccshOR3o.s 			page 9


  99              		.loc 1 357 15 view .LVU16
 100 000a 4FF4B470 		mov	r0, #360
 101              	.LVL9:
 357:Core/Src/ssd1306.c ****     loc_angle = ((par_deg != 0)?par_deg:360);
 102              		.loc 1 357 15 view .LVU17
 103 000e FBE7     		b	.L6
 104              		.cfi_endproc
 105              	.LFE80:
 107              		.section	.text.ssd1306_Reset,"ax",%progbits
 108              		.align	1
 109              		.global	ssd1306_Reset
 110              		.syntax unified
 111              		.thumb
 112              		.thumb_func
 114              	ssd1306_Reset:
 115              	.LFB65:
  24:Core/Src/ssd1306.c ****     // CS = High (not selected)
 116              		.loc 1 24 26 is_stmt 1 view -0
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 0
 119              		@ frame_needed = 0, uses_anonymous_args = 0
 120 0000 10B5     		push	{r4, lr}
 121              	.LCFI1:
 122              		.cfi_def_cfa_offset 8
 123              		.cfi_offset 4, -8
 124              		.cfi_offset 14, -4
  26:Core/Src/ssd1306.c **** 
 125              		.loc 1 26 5 view .LVU19
 126 0002 0D4C     		ldr	r4, .L11
 127 0004 0122     		movs	r2, #1
 128 0006 4FF48071 		mov	r1, #256
 129 000a 2046     		mov	r0, r4
 130 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 131              	.LVL10:
  29:Core/Src/ssd1306.c ****     HAL_Delay(10);
 132              		.loc 1 29 5 view .LVU20
 133 0010 0022     		movs	r2, #0
 134 0012 4FF48051 		mov	r1, #4096
 135 0016 2046     		mov	r0, r4
 136 0018 FFF7FEFF 		bl	HAL_GPIO_WritePin
 137              	.LVL11:
  30:Core/Src/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_Reset_Port, SSD1306_Reset_Pin, GPIO_PIN_SET);
 138              		.loc 1 30 5 view .LVU21
 139 001c 0A20     		movs	r0, #10
 140 001e FFF7FEFF 		bl	HAL_Delay
 141              	.LVL12:
  31:Core/Src/ssd1306.c ****     HAL_Delay(10);
 142              		.loc 1 31 5 view .LVU22
 143 0022 0122     		movs	r2, #1
 144 0024 4FF48051 		mov	r1, #4096
 145 0028 2046     		mov	r0, r4
 146 002a FFF7FEFF 		bl	HAL_GPIO_WritePin
 147              	.LVL13:
  32:Core/Src/ssd1306.c **** }
 148              		.loc 1 32 5 view .LVU23
 149 002e 0A20     		movs	r0, #10
 150 0030 FFF7FEFF 		bl	HAL_Delay
ARM GAS  /tmp/ccshOR3o.s 			page 10


 151              	.LVL14:
  33:Core/Src/ssd1306.c **** 
 152              		.loc 1 33 1 is_stmt 0 view .LVU24
 153 0034 10BD     		pop	{r4, pc}
 154              	.L12:
 155 0036 00BF     		.align	2
 156              	.L11:
 157 0038 000C0140 		.word	1073810432
 158              		.cfi_endproc
 159              	.LFE65:
 161              		.section	.text.ssd1306_WriteCommand,"ax",%progbits
 162              		.align	1
 163              		.global	ssd1306_WriteCommand
 164              		.syntax unified
 165              		.thumb
 166              		.thumb_func
 168              	ssd1306_WriteCommand:
 169              	.LVL15:
 170              	.LFB66:
  36:Core/Src/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_CS_Port, SSD1306_CS_Pin, GPIO_PIN_RESET); // select OLED
 171              		.loc 1 36 41 is_stmt 1 view -0
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 8
 174              		@ frame_needed = 0, uses_anonymous_args = 0
  36:Core/Src/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_CS_Port, SSD1306_CS_Pin, GPIO_PIN_RESET); // select OLED
 175              		.loc 1 36 41 is_stmt 0 view .LVU26
 176 0000 10B5     		push	{r4, lr}
 177              	.LCFI2:
 178              		.cfi_def_cfa_offset 8
 179              		.cfi_offset 4, -8
 180              		.cfi_offset 14, -4
 181 0002 82B0     		sub	sp, sp, #8
 182              	.LCFI3:
 183              		.cfi_def_cfa_offset 16
 184 0004 8DF80700 		strb	r0, [sp, #7]
  37:Core/Src/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_DC_Port, SSD1306_DC_Pin, GPIO_PIN_RESET); // command
 185              		.loc 1 37 5 is_stmt 1 view .LVU27
 186 0008 0E4C     		ldr	r4, .L15
 187 000a 0022     		movs	r2, #0
 188 000c 4FF48071 		mov	r1, #256
 189 0010 2046     		mov	r0, r4
 190              	.LVL16:
  37:Core/Src/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_DC_Port, SSD1306_DC_Pin, GPIO_PIN_RESET); // command
 191              		.loc 1 37 5 is_stmt 0 view .LVU28
 192 0012 FFF7FEFF 		bl	HAL_GPIO_WritePin
 193              	.LVL17:
  38:Core/Src/ssd1306.c ****     HAL_SPI_Transmit(&SSD1306_SPI_PORT, (uint8_t *) &byte, 1, HAL_MAX_DELAY);
 194              		.loc 1 38 5 is_stmt 1 view .LVU29
 195 0016 0022     		movs	r2, #0
 196 0018 4FF40071 		mov	r1, #512
 197 001c 2046     		mov	r0, r4
 198 001e FFF7FEFF 		bl	HAL_GPIO_WritePin
 199              	.LVL18:
  39:Core/Src/ssd1306.c ****     //HAL_SPI_Transmit_DMA(&SSD1306_SPI_PORT, (uint8_t *) &byte, 1);
 200              		.loc 1 39 5 view .LVU30
 201 0022 4FF0FF33 		mov	r3, #-1
 202 0026 0122     		movs	r2, #1
ARM GAS  /tmp/ccshOR3o.s 			page 11


 203 0028 0DF10701 		add	r1, sp, #7
 204 002c 0648     		ldr	r0, .L15+4
 205 002e FFF7FEFF 		bl	HAL_SPI_Transmit
 206              	.LVL19:
  41:Core/Src/ssd1306.c **** }
 207              		.loc 1 41 5 view .LVU31
 208 0032 0122     		movs	r2, #1
 209 0034 4FF48071 		mov	r1, #256
 210 0038 2046     		mov	r0, r4
 211 003a FFF7FEFF 		bl	HAL_GPIO_WritePin
 212              	.LVL20:
  42:Core/Src/ssd1306.c **** 
 213              		.loc 1 42 1 is_stmt 0 view .LVU32
 214 003e 02B0     		add	sp, sp, #8
 215              	.LCFI4:
 216              		.cfi_def_cfa_offset 8
 217              		@ sp needed
 218 0040 10BD     		pop	{r4, pc}
 219              	.L16:
 220 0042 00BF     		.align	2
 221              	.L15:
 222 0044 000C0140 		.word	1073810432
 223 0048 00000000 		.word	hspi2
 224              		.cfi_endproc
 225              	.LFE66:
 227              		.section	.text.ssd1306_WriteData,"ax",%progbits
 228              		.align	1
 229              		.global	ssd1306_WriteData
 230              		.syntax unified
 231              		.thumb
 232              		.thumb_func
 234              	ssd1306_WriteData:
 235              	.LVL21:
 236              	.LFB67:
  45:Core/Src/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_CS_Port, SSD1306_CS_Pin, GPIO_PIN_RESET); // select OLED
 237              		.loc 1 45 59 is_stmt 1 view -0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 0
 240              		@ frame_needed = 0, uses_anonymous_args = 0
  45:Core/Src/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_CS_Port, SSD1306_CS_Pin, GPIO_PIN_RESET); // select OLED
 241              		.loc 1 45 59 is_stmt 0 view .LVU34
 242 0000 70B5     		push	{r4, r5, r6, lr}
 243              	.LCFI5:
 244              		.cfi_def_cfa_offset 16
 245              		.cfi_offset 4, -16
 246              		.cfi_offset 5, -12
 247              		.cfi_offset 6, -8
 248              		.cfi_offset 14, -4
 249 0002 0546     		mov	r5, r0
 250 0004 0E46     		mov	r6, r1
  46:Core/Src/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_DC_Port, SSD1306_DC_Pin, GPIO_PIN_SET); // data
 251              		.loc 1 46 5 is_stmt 1 view .LVU35
 252 0006 0D4C     		ldr	r4, .L19
 253 0008 0022     		movs	r2, #0
 254 000a 4FF48071 		mov	r1, #256
 255              	.LVL22:
  46:Core/Src/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_DC_Port, SSD1306_DC_Pin, GPIO_PIN_SET); // data
ARM GAS  /tmp/ccshOR3o.s 			page 12


 256              		.loc 1 46 5 is_stmt 0 view .LVU36
 257 000e 2046     		mov	r0, r4
 258              	.LVL23:
  46:Core/Src/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_DC_Port, SSD1306_DC_Pin, GPIO_PIN_SET); // data
 259              		.loc 1 46 5 view .LVU37
 260 0010 FFF7FEFF 		bl	HAL_GPIO_WritePin
 261              	.LVL24:
  47:Core/Src/ssd1306.c ****     HAL_SPI_Transmit(&SSD1306_SPI_PORT, buffer, buff_size, HAL_MAX_DELAY);
 262              		.loc 1 47 5 is_stmt 1 view .LVU38
 263 0014 0122     		movs	r2, #1
 264 0016 4FF40071 		mov	r1, #512
 265 001a 2046     		mov	r0, r4
 266 001c FFF7FEFF 		bl	HAL_GPIO_WritePin
 267              	.LVL25:
  48:Core/Src/ssd1306.c ****     //HAL_SPI_Transmit_DMA(&SSD1306_SPI_PORT, buffer, buff_size);
 268              		.loc 1 48 5 view .LVU39
 269 0020 4FF0FF33 		mov	r3, #-1
 270 0024 B2B2     		uxth	r2, r6
 271 0026 2946     		mov	r1, r5
 272 0028 0548     		ldr	r0, .L19+4
 273 002a FFF7FEFF 		bl	HAL_SPI_Transmit
 274              	.LVL26:
  50:Core/Src/ssd1306.c **** }
 275              		.loc 1 50 5 view .LVU40
 276 002e 0122     		movs	r2, #1
 277 0030 4FF48071 		mov	r1, #256
 278 0034 2046     		mov	r0, r4
 279 0036 FFF7FEFF 		bl	HAL_GPIO_WritePin
 280              	.LVL27:
  51:Core/Src/ssd1306.c **** 
 281              		.loc 1 51 1 is_stmt 0 view .LVU41
 282 003a 70BD     		pop	{r4, r5, r6, pc}
 283              	.LVL28:
 284              	.L20:
  51:Core/Src/ssd1306.c **** 
 285              		.loc 1 51 1 view .LVU42
 286              		.align	2
 287              	.L19:
 288 003c 000C0140 		.word	1073810432
 289 0040 00000000 		.word	hspi2
 290              		.cfi_endproc
 291              	.LFE67:
 293              		.section	.text.ssd1306_WriteData_DMA,"ax",%progbits
 294              		.align	1
 295              		.global	ssd1306_WriteData_DMA
 296              		.syntax unified
 297              		.thumb
 298              		.thumb_func
 300              	ssd1306_WriteData_DMA:
 301              	.LVL29:
 302              	.LFB68:
  53:Core/Src/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_CS_Port, SSD1306_CS_Pin, GPIO_PIN_RESET); // select OLED
 303              		.loc 1 53 63 is_stmt 1 view -0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 0
 306              		@ frame_needed = 0, uses_anonymous_args = 0
  53:Core/Src/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_CS_Port, SSD1306_CS_Pin, GPIO_PIN_RESET); // select OLED
ARM GAS  /tmp/ccshOR3o.s 			page 13


 307              		.loc 1 53 63 is_stmt 0 view .LVU44
 308 0000 70B5     		push	{r4, r5, r6, lr}
 309              	.LCFI6:
 310              		.cfi_def_cfa_offset 16
 311              		.cfi_offset 4, -16
 312              		.cfi_offset 5, -12
 313              		.cfi_offset 6, -8
 314              		.cfi_offset 14, -4
 315 0002 0446     		mov	r4, r0
 316 0004 0D46     		mov	r5, r1
  54:Core/Src/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_DC_Port, SSD1306_DC_Pin, GPIO_PIN_SET); // data
 317              		.loc 1 54 5 is_stmt 1 view .LVU45
 318 0006 094E     		ldr	r6, .L23
 319 0008 0022     		movs	r2, #0
 320 000a 4FF48071 		mov	r1, #256
 321              	.LVL30:
  54:Core/Src/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_DC_Port, SSD1306_DC_Pin, GPIO_PIN_SET); // data
 322              		.loc 1 54 5 is_stmt 0 view .LVU46
 323 000e 3046     		mov	r0, r6
 324              	.LVL31:
  54:Core/Src/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_DC_Port, SSD1306_DC_Pin, GPIO_PIN_SET); // data
 325              		.loc 1 54 5 view .LVU47
 326 0010 FFF7FEFF 		bl	HAL_GPIO_WritePin
 327              	.LVL32:
  55:Core/Src/ssd1306.c ****     //HAL_SPI_Transmit(&SSD1306_SPI_PORT, buffer, buff_size, HAL_MAX_DELAY);
 328              		.loc 1 55 5 is_stmt 1 view .LVU48
 329 0014 0122     		movs	r2, #1
 330 0016 4FF40071 		mov	r1, #512
 331 001a 3046     		mov	r0, r6
 332 001c FFF7FEFF 		bl	HAL_GPIO_WritePin
 333              	.LVL33:
  57:Core/Src/ssd1306.c ****     //HAL_GPIO_WritePin(SSD1306_CS_Port, SSD1306_CS_Pin, GPIO_PIN_SET); // un-select OLED
 334              		.loc 1 57 5 view .LVU49
 335 0020 AAB2     		uxth	r2, r5
 336 0022 2146     		mov	r1, r4
 337 0024 0248     		ldr	r0, .L23+4
 338 0026 FFF7FEFF 		bl	HAL_SPI_Transmit_DMA
 339              	.LVL34:
  59:Core/Src/ssd1306.c **** 
 340              		.loc 1 59 1 is_stmt 0 view .LVU50
 341 002a 70BD     		pop	{r4, r5, r6, pc}
 342              	.LVL35:
 343              	.L24:
  59:Core/Src/ssd1306.c **** 
 344              		.loc 1 59 1 view .LVU51
 345              		.align	2
 346              	.L23:
 347 002c 000C0140 		.word	1073810432
 348 0030 00000000 		.word	hspi2
 349              		.cfi_endproc
 350              	.LFE68:
 352              		.section	.text.ssd1306_FillBuffer,"ax",%progbits
 353              		.align	1
 354              		.global	ssd1306_FillBuffer
 355              		.syntax unified
 356              		.thumb
 357              		.thumb_func
ARM GAS  /tmp/ccshOR3o.s 			page 14


 359              	ssd1306_FillBuffer:
 360              	.LVL36:
 361              	.LFB69:
  73:Core/Src/ssd1306.c ****     SSD1306_Error_t ret = SSD1306_ERR;
 362              		.loc 1 73 64 is_stmt 1 view -0
 363              		.cfi_startproc
 364              		@ args = 0, pretend = 0, frame = 0
 365              		@ frame_needed = 0, uses_anonymous_args = 0
  74:Core/Src/ssd1306.c ****     if (len <= SSD1306_BUFFER_SIZE) {
 366              		.loc 1 74 5 view .LVU53
  75:Core/Src/ssd1306.c ****         memcpy(SSD1306_Buffer,buf,len);
 367              		.loc 1 75 5 view .LVU54
  75:Core/Src/ssd1306.c ****         memcpy(SSD1306_Buffer,buf,len);
 368              		.loc 1 75 8 is_stmt 0 view .LVU55
 369 0000 B1F5806F 		cmp	r1, #1024
 370 0004 01D9     		bls	.L32
  74:Core/Src/ssd1306.c ****     if (len <= SSD1306_BUFFER_SIZE) {
 371              		.loc 1 74 21 view .LVU56
 372 0006 0120     		movs	r0, #1
 373              	.LVL37:
  79:Core/Src/ssd1306.c **** }
 374              		.loc 1 79 5 is_stmt 1 view .LVU57
  80:Core/Src/ssd1306.c **** 
 375              		.loc 1 80 1 is_stmt 0 view .LVU58
 376 0008 7047     		bx	lr
 377              	.LVL38:
 378              	.L32:
  73:Core/Src/ssd1306.c ****     SSD1306_Error_t ret = SSD1306_ERR;
 379              		.loc 1 73 64 view .LVU59
 380 000a 08B5     		push	{r3, lr}
 381              	.LCFI7:
 382              		.cfi_def_cfa_offset 8
 383              		.cfi_offset 3, -8
 384              		.cfi_offset 14, -4
  76:Core/Src/ssd1306.c ****         ret = SSD1306_OK;
 385              		.loc 1 76 9 is_stmt 1 view .LVU60
 386 000c 0A46     		mov	r2, r1
 387 000e 0146     		mov	r1, r0
 388              	.LVL39:
  76:Core/Src/ssd1306.c ****         ret = SSD1306_OK;
 389              		.loc 1 76 9 is_stmt 0 view .LVU61
 390 0010 0248     		ldr	r0, .L33
 391              	.LVL40:
  76:Core/Src/ssd1306.c ****         ret = SSD1306_OK;
 392              		.loc 1 76 9 view .LVU62
 393 0012 FFF7FEFF 		bl	memcpy
 394              	.LVL41:
  77:Core/Src/ssd1306.c ****     }
 395              		.loc 1 77 9 is_stmt 1 view .LVU63
  77:Core/Src/ssd1306.c ****     }
 396              		.loc 1 77 13 is_stmt 0 view .LVU64
 397 0016 0020     		movs	r0, #0
 398              	.LVL42:
  79:Core/Src/ssd1306.c **** }
 399              		.loc 1 79 5 is_stmt 1 view .LVU65
  80:Core/Src/ssd1306.c **** 
 400              		.loc 1 80 1 is_stmt 0 view .LVU66
ARM GAS  /tmp/ccshOR3o.s 			page 15


 401 0018 08BD     		pop	{r3, pc}
 402              	.L34:
 403 001a 00BF     		.align	2
 404              	.L33:
 405 001c 00000000 		.word	.LANCHOR0
 406              		.cfi_endproc
 407              	.LFE69:
 409              		.section	.text.ssd1306_Fill,"ax",%progbits
 410              		.align	1
 411              		.global	ssd1306_Fill
 412              		.syntax unified
 413              		.thumb
 414              		.thumb_func
 416              	ssd1306_Fill:
 417              	.LVL43:
 418              	.LFB71:
 185:Core/Src/ssd1306.c ****     /* Set memory */
 419              		.loc 1 185 40 is_stmt 1 view -0
 420              		.cfi_startproc
 421              		@ args = 0, pretend = 0, frame = 0
 422              		@ frame_needed = 0, uses_anonymous_args = 0
 423              		@ link register save eliminated.
 187:Core/Src/ssd1306.c **** 
 424              		.loc 1 187 5 view .LVU68
 189:Core/Src/ssd1306.c ****         SSD1306_Buffer[i] = (color == Black) ? 0x00 : 0xFF;
 425              		.loc 1 189 5 view .LVU69
 189:Core/Src/ssd1306.c ****         SSD1306_Buffer[i] = (color == Black) ? 0x00 : 0xFF;
 426              		.loc 1 189 11 is_stmt 0 view .LVU70
 427 0000 0023     		movs	r3, #0
 189:Core/Src/ssd1306.c ****         SSD1306_Buffer[i] = (color == Black) ? 0x00 : 0xFF;
 428              		.loc 1 189 5 view .LVU71
 429 0002 03E0     		b	.L36
 430              	.LVL44:
 431              	.L39:
 190:Core/Src/ssd1306.c ****     }
 432              		.loc 1 190 27 view .LVU72
 433 0004 FF21     		movs	r1, #255
 434              	.L37:
 190:Core/Src/ssd1306.c ****     }
 435              		.loc 1 190 27 discriminator 4 view .LVU73
 436 0006 054A     		ldr	r2, .L41
 437 0008 D154     		strb	r1, [r2, r3]
 189:Core/Src/ssd1306.c ****         SSD1306_Buffer[i] = (color == Black) ? 0x00 : 0xFF;
 438              		.loc 1 189 44 is_stmt 1 discriminator 4 view .LVU74
 189:Core/Src/ssd1306.c ****         SSD1306_Buffer[i] = (color == Black) ? 0x00 : 0xFF;
 439              		.loc 1 189 45 is_stmt 0 discriminator 4 view .LVU75
 440 000a 0133     		adds	r3, r3, #1
 441              	.LVL45:
 442              	.L36:
 189:Core/Src/ssd1306.c ****         SSD1306_Buffer[i] = (color == Black) ? 0x00 : 0xFF;
 443              		.loc 1 189 16 is_stmt 1 discriminator 2 view .LVU76
 189:Core/Src/ssd1306.c ****         SSD1306_Buffer[i] = (color == Black) ? 0x00 : 0xFF;
 444              		.loc 1 189 5 is_stmt 0 discriminator 2 view .LVU77
 445 000c B3F5806F 		cmp	r3, #1024
 446 0010 03D2     		bcs	.L40
 190:Core/Src/ssd1306.c ****     }
 447              		.loc 1 190 9 is_stmt 1 view .LVU78
ARM GAS  /tmp/ccshOR3o.s 			page 16


 190:Core/Src/ssd1306.c ****     }
 448              		.loc 1 190 27 is_stmt 0 view .LVU79
 449 0012 0028     		cmp	r0, #0
 450 0014 F6D1     		bne	.L39
 451 0016 0146     		mov	r1, r0
 452 0018 F5E7     		b	.L37
 453              	.L40:
 192:Core/Src/ssd1306.c **** 
 454              		.loc 1 192 1 view .LVU80
 455 001a 7047     		bx	lr
 456              	.L42:
 457              		.align	2
 458              	.L41:
 459 001c 00000000 		.word	.LANCHOR0
 460              		.cfi_endproc
 461              	.LFE71:
 463              		.section	.text.ssd1306_UpdateScreen,"ax",%progbits
 464              		.align	1
 465              		.global	ssd1306_UpdateScreen
 466              		.syntax unified
 467              		.thumb
 468              		.thumb_func
 470              	ssd1306_UpdateScreen:
 471              	.LFB72:
 195:Core/Src/ssd1306.c ****     // Write data to each page of RAM. Number of pages
 472              		.loc 1 195 33 is_stmt 1 view -0
 473              		.cfi_startproc
 474              		@ args = 0, pretend = 0, frame = 0
 475              		@ frame_needed = 0, uses_anonymous_args = 0
 476 0000 08B5     		push	{r3, lr}
 477              	.LCFI8:
 478              		.cfi_def_cfa_offset 8
 479              		.cfi_offset 3, -8
 480              		.cfi_offset 14, -4
 202:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0x00 + SSD1306_X_OFFSET_LOWER);
 481              		.loc 1 202 5 view .LVU82
 482 0002 B020     		movs	r0, #176
 483 0004 FFF7FEFF 		bl	ssd1306_WriteCommand
 484              	.LVL46:
 203:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0x10 + SSD1306_X_OFFSET_UPPER);
 485              		.loc 1 203 5 view .LVU83
 486 0008 0020     		movs	r0, #0
 487 000a FFF7FEFF 		bl	ssd1306_WriteCommand
 488              	.LVL47:
 204:Core/Src/ssd1306.c ****     ssd1306_WriteData_DMA(SSD1306_Buffer,SSD1306_WIDTH*8);
 489              		.loc 1 204 5 view .LVU84
 490 000e 1020     		movs	r0, #16
 491 0010 FFF7FEFF 		bl	ssd1306_WriteCommand
 492              	.LVL48:
 205:Core/Src/ssd1306.c ****     //for(uint8_t i = 0; i < SSD1306_HEIGHT/8; i++) {
 493              		.loc 1 205 5 view .LVU85
 494 0014 4FF48061 		mov	r1, #1024
 495 0018 0148     		ldr	r0, .L45
 496 001a FFF7FEFF 		bl	ssd1306_WriteData_DMA
 497              	.LVL49:
 212:Core/Src/ssd1306.c **** 
 498              		.loc 1 212 1 is_stmt 0 view .LVU86
ARM GAS  /tmp/ccshOR3o.s 			page 17


 499 001e 08BD     		pop	{r3, pc}
 500              	.L46:
 501              		.align	2
 502              	.L45:
 503 0020 00000000 		.word	.LANCHOR0
 504              		.cfi_endproc
 505              	.LFE72:
 507              		.section	.text.ssd1306_DrawPixel,"ax",%progbits
 508              		.align	1
 509              		.global	ssd1306_DrawPixel
 510              		.syntax unified
 511              		.thumb
 512              		.thumb_func
 514              	ssd1306_DrawPixel:
 515              	.LVL50:
 516              	.LFB73:
 218:Core/Src/ssd1306.c ****     if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 517              		.loc 1 218 67 is_stmt 1 view -0
 518              		.cfi_startproc
 519              		@ args = 0, pretend = 0, frame = 0
 520              		@ frame_needed = 0, uses_anonymous_args = 0
 521              		@ link register save eliminated.
 219:Core/Src/ssd1306.c ****         // Don't write outside the buffer
 522              		.loc 1 219 5 view .LVU88
 219:Core/Src/ssd1306.c ****         // Don't write outside the buffer
 523              		.loc 1 219 7 is_stmt 0 view .LVU89
 524 0000 10F0800F 		tst	r0, #128
 525 0004 0FD1     		bne	.L47
 219:Core/Src/ssd1306.c ****         // Don't write outside the buffer
 526              		.loc 1 219 27 discriminator 1 view .LVU90
 527 0006 3F29     		cmp	r1, #63
 528 0008 0DD8     		bhi	.L47
 225:Core/Src/ssd1306.c ****         SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 529              		.loc 1 225 5 is_stmt 1 view .LVU91
 225:Core/Src/ssd1306.c ****         SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 530              		.loc 1 225 7 is_stmt 0 view .LVU92
 531 000a 012A     		cmp	r2, #1
 532 000c 0CD0     		beq	.L50
 228:Core/Src/ssd1306.c ****     }
 533              		.loc 1 228 9 is_stmt 1 view .LVU93
 228:Core/Src/ssd1306.c ****     }
 534              		.loc 1 228 53 is_stmt 0 view .LVU94
 535 000e CB08     		lsrs	r3, r1, #3
 536 0010 00EBC310 		add	r0, r0, r3, lsl #7
 537              	.LVL51:
 228:Core/Src/ssd1306.c ****     }
 538              		.loc 1 228 66 view .LVU95
 539 0014 01F00701 		and	r1, r1, #7
 540              	.LVL52:
 228:Core/Src/ssd1306.c ****     }
 541              		.loc 1 228 60 view .LVU96
 542 0018 0123     		movs	r3, #1
 543 001a 8B40     		lsls	r3, r3, r1
 228:Core/Src/ssd1306.c ****     }
 544              		.loc 1 228 53 view .LVU97
 545 001c 084A     		ldr	r2, .L51
 546              	.LVL53:
ARM GAS  /tmp/ccshOR3o.s 			page 18


 228:Core/Src/ssd1306.c ****     }
 547              		.loc 1 228 53 view .LVU98
 548 001e 115C     		ldrb	r1, [r2, r0]	@ zero_extendqisi2
 549 0020 21EA0301 		bic	r1, r1, r3
 550 0024 1154     		strb	r1, [r2, r0]
 551              	.L47:
 230:Core/Src/ssd1306.c **** 
 552              		.loc 1 230 1 view .LVU99
 553 0026 7047     		bx	lr
 554              	.LVL54:
 555              	.L50:
 226:Core/Src/ssd1306.c ****     } else { 
 556              		.loc 1 226 9 is_stmt 1 view .LVU100
 226:Core/Src/ssd1306.c ****     } else { 
 557              		.loc 1 226 53 is_stmt 0 view .LVU101
 558 0028 CB08     		lsrs	r3, r1, #3
 559 002a 00EBC310 		add	r0, r0, r3, lsl #7
 560              	.LVL55:
 226:Core/Src/ssd1306.c ****     } else { 
 561              		.loc 1 226 64 view .LVU102
 562 002e 01F00701 		and	r1, r1, #7
 563              	.LVL56:
 226:Core/Src/ssd1306.c ****     } else { 
 564              		.loc 1 226 58 view .LVU103
 565 0032 0123     		movs	r3, #1
 566 0034 8B40     		lsls	r3, r3, r1
 226:Core/Src/ssd1306.c ****     } else { 
 567              		.loc 1 226 53 view .LVU104
 568 0036 024A     		ldr	r2, .L51
 569              	.LVL57:
 226:Core/Src/ssd1306.c ****     } else { 
 570              		.loc 1 226 53 view .LVU105
 571 0038 115C     		ldrb	r1, [r2, r0]	@ zero_extendqisi2
 572 003a 1943     		orrs	r1, r1, r3
 573 003c 1154     		strb	r1, [r2, r0]
 574 003e 7047     		bx	lr
 575              	.L52:
 576              		.align	2
 577              	.L51:
 578 0040 00000000 		.word	.LANCHOR0
 579              		.cfi_endproc
 580              	.LFE73:
 582              		.section	.text.ssd1306_WriteChar,"ax",%progbits
 583              		.align	1
 584              		.global	ssd1306_WriteChar
 585              		.syntax unified
 586              		.thumb
 587              		.thumb_func
 589              	ssd1306_WriteChar:
 590              	.LVL58:
 591              	.LFB74:
 236:Core/Src/ssd1306.c ****     uint32_t i, b, j;
 592              		.loc 1 236 68 is_stmt 1 view -0
 593              		.cfi_startproc
 594              		@ args = 0, pretend = 0, frame = 8
 595              		@ frame_needed = 0, uses_anonymous_args = 0
 236:Core/Src/ssd1306.c ****     uint32_t i, b, j;
ARM GAS  /tmp/ccshOR3o.s 			page 19


 596              		.loc 1 236 68 is_stmt 0 view .LVU107
 597 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 598              	.LCFI9:
 599              		.cfi_def_cfa_offset 32
 600              		.cfi_offset 4, -32
 601              		.cfi_offset 5, -28
 602              		.cfi_offset 6, -24
 603              		.cfi_offset 7, -20
 604              		.cfi_offset 8, -16
 605              		.cfi_offset 9, -12
 606              		.cfi_offset 10, -8
 607              		.cfi_offset 14, -4
 608 0004 82B0     		sub	sp, sp, #8
 609              	.LCFI10:
 610              		.cfi_def_cfa_offset 40
 611 0006 8146     		mov	r9, r0
 612 0008 02A8     		add	r0, sp, #8
 613              	.LVL59:
 236:Core/Src/ssd1306.c ****     uint32_t i, b, j;
 614              		.loc 1 236 68 view .LVU108
 615 000a 00E90600 		stmdb	r0, {r1, r2}
 616 000e 1F46     		mov	r7, r3
 237:Core/Src/ssd1306.c ****     
 617              		.loc 1 237 5 is_stmt 1 view .LVU109
 240:Core/Src/ssd1306.c ****         return 0;
 618              		.loc 1 240 5 view .LVU110
 240:Core/Src/ssd1306.c ****         return 0;
 619              		.loc 1 240 17 is_stmt 0 view .LVU111
 620 0010 A9F12003 		sub	r3, r9, #32
 621              	.LVL60:
 240:Core/Src/ssd1306.c ****         return 0;
 622              		.loc 1 240 17 view .LVU112
 623 0014 DBB2     		uxtb	r3, r3
 240:Core/Src/ssd1306.c ****         return 0;
 624              		.loc 1 240 8 view .LVU113
 625 0016 5E2B     		cmp	r3, #94
 626 0018 40D8     		bhi	.L61
 244:Core/Src/ssd1306.c ****         SSD1306_HEIGHT < (SSD1306.CurrentY + Font.FontHeight))
 627              		.loc 1 244 5 is_stmt 1 view .LVU114
 244:Core/Src/ssd1306.c ****         SSD1306_HEIGHT < (SSD1306.CurrentY + Font.FontHeight))
 628              		.loc 1 244 33 is_stmt 0 view .LVU115
 629 001a 244B     		ldr	r3, .L67
 630 001c 1B88     		ldrh	r3, [r3]
 244:Core/Src/ssd1306.c ****         SSD1306_HEIGHT < (SSD1306.CurrentY + Font.FontHeight))
 631              		.loc 1 244 49 view .LVU116
 632 001e 9DF80060 		ldrb	r6, [sp]	@ zero_extendqisi2
 244:Core/Src/ssd1306.c ****         SSD1306_HEIGHT < (SSD1306.CurrentY + Font.FontHeight))
 633              		.loc 1 244 43 view .LVU117
 634 0022 3344     		add	r3, r3, r6
 244:Core/Src/ssd1306.c ****         SSD1306_HEIGHT < (SSD1306.CurrentY + Font.FontHeight))
 635              		.loc 1 244 8 view .LVU118
 636 0024 802B     		cmp	r3, #128
 637 0026 3DDC     		bgt	.L62
 245:Core/Src/ssd1306.c ****     {
 638              		.loc 1 245 34 discriminator 1 view .LVU119
 639 0028 204B     		ldr	r3, .L67
 640 002a 5B88     		ldrh	r3, [r3, #2]
ARM GAS  /tmp/ccshOR3o.s 			page 20


 245:Core/Src/ssd1306.c ****     {
 641              		.loc 1 245 50 discriminator 1 view .LVU120
 642 002c 9DF801A0 		ldrb	r10, [sp, #1]	@ zero_extendqisi2
 245:Core/Src/ssd1306.c ****     {
 643              		.loc 1 245 44 discriminator 1 view .LVU121
 644 0030 5344     		add	r3, r3, r10
 244:Core/Src/ssd1306.c ****         SSD1306_HEIGHT < (SSD1306.CurrentY + Font.FontHeight))
 645              		.loc 1 244 61 discriminator 1 view .LVU122
 646 0032 402B     		cmp	r3, #64
 647 0034 38DC     		bgt	.L63
 252:Core/Src/ssd1306.c ****         b = Font.data[(ch - 32) * Font.FontHeight + i];
 648              		.loc 1 252 11 view .LVU123
 649 0036 0025     		movs	r5, #0
 650 0038 1FE0     		b	.L55
 651              	.LVL61:
 652              	.L57:
 258:Core/Src/ssd1306.c ****             }
 653              		.loc 1 258 17 is_stmt 1 view .LVU124
 258:Core/Src/ssd1306.c ****             }
 654              		.loc 1 258 42 is_stmt 0 view .LVU125
 655 003a 1C4B     		ldr	r3, .L67
 656 003c 1888     		ldrh	r0, [r3]
 258:Core/Src/ssd1306.c ****             }
 657              		.loc 1 258 65 view .LVU126
 658 003e 5988     		ldrh	r1, [r3, #2]
 258:Core/Src/ssd1306.c ****             }
 659              		.loc 1 258 17 view .LVU127
 660 0040 2944     		add	r1, r1, r5
 661 0042 2044     		add	r0, r0, r4
 662 0044 B7FA87F2 		clz	r2, r7
 663 0048 5209     		lsrs	r2, r2, #5
 664 004a C9B2     		uxtb	r1, r1
 665 004c C0B2     		uxtb	r0, r0
 666 004e FFF7FEFF 		bl	ssd1306_DrawPixel
 667              	.LVL62:
 668              	.L58:
 254:Core/Src/ssd1306.c ****             if((b << j) & 0x8000)  {
 669              		.loc 1 254 40 is_stmt 1 discriminator 2 view .LVU128
 254:Core/Src/ssd1306.c ****             if((b << j) & 0x8000)  {
 670              		.loc 1 254 41 is_stmt 0 discriminator 2 view .LVU129
 671 0052 0134     		adds	r4, r4, #1
 672              	.LVL63:
 673              	.L56:
 254:Core/Src/ssd1306.c ****             if((b << j) & 0x8000)  {
 674              		.loc 1 254 20 is_stmt 1 discriminator 1 view .LVU130
 254:Core/Src/ssd1306.c ****             if((b << j) & 0x8000)  {
 675              		.loc 1 254 9 is_stmt 0 discriminator 1 view .LVU131
 676 0054 A642     		cmp	r6, r4
 677 0056 0FD9     		bls	.L65
 255:Core/Src/ssd1306.c ****                 ssd1306_DrawPixel(SSD1306.CurrentX + j, (SSD1306.CurrentY + i), (SSD1306_COLOR) col
 678              		.loc 1 255 13 is_stmt 1 view .LVU132
 255:Core/Src/ssd1306.c ****                 ssd1306_DrawPixel(SSD1306.CurrentX + j, (SSD1306.CurrentY + i), (SSD1306_COLOR) col
 679              		.loc 1 255 19 is_stmt 0 view .LVU133
 680 0058 08FA04F3 		lsl	r3, r8, r4
 255:Core/Src/ssd1306.c ****                 ssd1306_DrawPixel(SSD1306.CurrentX + j, (SSD1306.CurrentY + i), (SSD1306_COLOR) col
 681              		.loc 1 255 15 view .LVU134
 682 005c 13F4004F 		tst	r3, #32768
ARM GAS  /tmp/ccshOR3o.s 			page 21


 683 0060 EBD0     		beq	.L57
 256:Core/Src/ssd1306.c ****             } else {
 684              		.loc 1 256 17 is_stmt 1 view .LVU135
 256:Core/Src/ssd1306.c ****             } else {
 685              		.loc 1 256 42 is_stmt 0 view .LVU136
 686 0062 124B     		ldr	r3, .L67
 687 0064 1888     		ldrh	r0, [r3]
 256:Core/Src/ssd1306.c ****             } else {
 688              		.loc 1 256 65 view .LVU137
 689 0066 5988     		ldrh	r1, [r3, #2]
 256:Core/Src/ssd1306.c ****             } else {
 690              		.loc 1 256 17 view .LVU138
 691 0068 2944     		add	r1, r1, r5
 692 006a 2044     		add	r0, r0, r4
 693 006c 3A46     		mov	r2, r7
 694 006e C9B2     		uxtb	r1, r1
 695 0070 C0B2     		uxtb	r0, r0
 696 0072 FFF7FEFF 		bl	ssd1306_DrawPixel
 697              	.LVL64:
 698 0076 ECE7     		b	.L58
 699              	.L65:
 252:Core/Src/ssd1306.c ****         b = Font.data[(ch - 32) * Font.FontHeight + i];
 700              		.loc 1 252 37 is_stmt 1 discriminator 2 view .LVU139
 252:Core/Src/ssd1306.c ****         b = Font.data[(ch - 32) * Font.FontHeight + i];
 701              		.loc 1 252 38 is_stmt 0 discriminator 2 view .LVU140
 702 0078 0135     		adds	r5, r5, #1
 703              	.LVL65:
 704              	.L55:
 252:Core/Src/ssd1306.c ****         b = Font.data[(ch - 32) * Font.FontHeight + i];
 705              		.loc 1 252 16 is_stmt 1 discriminator 1 view .LVU141
 252:Core/Src/ssd1306.c ****         b = Font.data[(ch - 32) * Font.FontHeight + i];
 706              		.loc 1 252 5 is_stmt 0 discriminator 1 view .LVU142
 707 007a AA45     		cmp	r10, r5
 708 007c 08D9     		bls	.L66
 253:Core/Src/ssd1306.c ****         for(j = 0; j < Font.FontWidth; j++) {
 709              		.loc 1 253 9 is_stmt 1 view .LVU143
 253:Core/Src/ssd1306.c ****         for(j = 0; j < Font.FontWidth; j++) {
 710              		.loc 1 253 27 is_stmt 0 view .LVU144
 711 007e A9F12003 		sub	r3, r9, #32
 253:Core/Src/ssd1306.c ****         for(j = 0; j < Font.FontWidth; j++) {
 712              		.loc 1 253 51 view .LVU145
 713 0082 03FB0A53 		mla	r3, r3, r10, r5
 253:Core/Src/ssd1306.c ****         for(j = 0; j < Font.FontWidth; j++) {
 714              		.loc 1 253 22 view .LVU146
 715 0086 019A     		ldr	r2, [sp, #4]
 716 0088 32F81380 		ldrh	r8, [r2, r3, lsl #1]
 717              	.LVL66:
 254:Core/Src/ssd1306.c ****             if((b << j) & 0x8000)  {
 718              		.loc 1 254 9 is_stmt 1 view .LVU147
 254:Core/Src/ssd1306.c ****             if((b << j) & 0x8000)  {
 719              		.loc 1 254 15 is_stmt 0 view .LVU148
 720 008c 0024     		movs	r4, #0
 254:Core/Src/ssd1306.c ****             if((b << j) & 0x8000)  {
 721              		.loc 1 254 9 view .LVU149
 722 008e E1E7     		b	.L56
 723              	.LVL67:
 724              	.L66:
ARM GAS  /tmp/ccshOR3o.s 			page 22


 264:Core/Src/ssd1306.c ****     
 725              		.loc 1 264 5 is_stmt 1 view .LVU150
 264:Core/Src/ssd1306.c ****     
 726              		.loc 1 264 22 is_stmt 0 view .LVU151
 727 0090 064B     		ldr	r3, .L67
 728 0092 1A88     		ldrh	r2, [r3]
 729 0094 1644     		add	r6, r6, r2
 730 0096 1E80     		strh	r6, [r3]	@ movhi
 267:Core/Src/ssd1306.c **** }
 731              		.loc 1 267 5 is_stmt 1 view .LVU152
 267:Core/Src/ssd1306.c **** }
 732              		.loc 1 267 12 is_stmt 0 view .LVU153
 733 0098 4846     		mov	r0, r9
 734 009a 00E0     		b	.L54
 735              	.LVL68:
 736              	.L61:
 241:Core/Src/ssd1306.c ****     
 737              		.loc 1 241 16 view .LVU154
 738 009c 0020     		movs	r0, #0
 739              	.L54:
 268:Core/Src/ssd1306.c **** 
 740              		.loc 1 268 1 view .LVU155
 741 009e 02B0     		add	sp, sp, #8
 742              	.LCFI11:
 743              		.cfi_remember_state
 744              		.cfi_def_cfa_offset 32
 745              		@ sp needed
 746 00a0 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 747              	.L62:
 748              	.LCFI12:
 749              		.cfi_restore_state
 248:Core/Src/ssd1306.c ****     }
 750              		.loc 1 248 16 view .LVU156
 751 00a4 0020     		movs	r0, #0
 752 00a6 FAE7     		b	.L54
 753              	.L63:
 754 00a8 0020     		movs	r0, #0
 755 00aa F8E7     		b	.L54
 756              	.L68:
 757              		.align	2
 758              	.L67:
 759 00ac 00000000 		.word	.LANCHOR1
 760              		.cfi_endproc
 761              	.LFE74:
 763              		.section	.text.ssd1306_WriteString,"ax",%progbits
 764              		.align	1
 765              		.global	ssd1306_WriteString
 766              		.syntax unified
 767              		.thumb
 768              		.thumb_func
 770              	ssd1306_WriteString:
 771              	.LVL69:
 772              	.LFB75:
 271:Core/Src/ssd1306.c ****     // Write until null-byte
 773              		.loc 1 271 72 is_stmt 1 view -0
 774              		.cfi_startproc
 775              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccshOR3o.s 			page 23


 776              		@ frame_needed = 0, uses_anonymous_args = 0
 271:Core/Src/ssd1306.c ****     // Write until null-byte
 777              		.loc 1 271 72 is_stmt 0 view .LVU158
 778 0000 30B5     		push	{r4, r5, lr}
 779              	.LCFI13:
 780              		.cfi_def_cfa_offset 12
 781              		.cfi_offset 4, -12
 782              		.cfi_offset 5, -8
 783              		.cfi_offset 14, -4
 784 0002 83B0     		sub	sp, sp, #12
 785              	.LCFI14:
 786              		.cfi_def_cfa_offset 24
 787 0004 0446     		mov	r4, r0
 788 0006 02A8     		add	r0, sp, #8
 789              	.LVL70:
 271:Core/Src/ssd1306.c ****     // Write until null-byte
 790              		.loc 1 271 72 view .LVU159
 791 0008 00E90600 		stmdb	r0, {r1, r2}
 792 000c 1D46     		mov	r5, r3
 273:Core/Src/ssd1306.c ****         if (ssd1306_WriteChar(*str, Font, color) != *str) {
 793              		.loc 1 273 5 is_stmt 1 view .LVU160
 273:Core/Src/ssd1306.c ****         if (ssd1306_WriteChar(*str, Font, color) != *str) {
 794              		.loc 1 273 11 is_stmt 0 view .LVU161
 795 000e 00E0     		b	.L70
 796              	.LVL71:
 797              	.L74:
 280:Core/Src/ssd1306.c ****     }
 798              		.loc 1 280 9 is_stmt 1 view .LVU162
 280:Core/Src/ssd1306.c ****     }
 799              		.loc 1 280 12 is_stmt 0 view .LVU163
 800 0010 0134     		adds	r4, r4, #1
 801              	.LVL72:
 802              	.L70:
 273:Core/Src/ssd1306.c ****         if (ssd1306_WriteChar(*str, Font, color) != *str) {
 803              		.loc 1 273 11 is_stmt 1 view .LVU164
 273:Core/Src/ssd1306.c ****         if (ssd1306_WriteChar(*str, Font, color) != *str) {
 804              		.loc 1 273 12 is_stmt 0 view .LVU165
 805 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 273:Core/Src/ssd1306.c ****         if (ssd1306_WriteChar(*str, Font, color) != *str) {
 806              		.loc 1 273 11 view .LVU166
 807 0014 48B1     		cbz	r0, .L71
 274:Core/Src/ssd1306.c ****             // Char could not be written
 808              		.loc 1 274 9 is_stmt 1 view .LVU167
 274:Core/Src/ssd1306.c ****             // Char could not be written
 809              		.loc 1 274 13 is_stmt 0 view .LVU168
 810 0016 2B46     		mov	r3, r5
 811 0018 02AA     		add	r2, sp, #8
 812 001a 12E90600 		ldmdb	r2, {r1, r2}
 813 001e FFF7FEFF 		bl	ssd1306_WriteChar
 814              	.LVL73:
 815 0022 0246     		mov	r2, r0
 274:Core/Src/ssd1306.c ****             // Char could not be written
 816              		.loc 1 274 53 view .LVU169
 817 0024 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 274:Core/Src/ssd1306.c ****             // Char could not be written
 818              		.loc 1 274 12 view .LVU170
 819 0026 8242     		cmp	r2, r0
ARM GAS  /tmp/ccshOR3o.s 			page 24


 820 0028 F2D0     		beq	.L74
 821              	.L71:
 285:Core/Src/ssd1306.c **** 
 822              		.loc 1 285 1 view .LVU171
 823 002a 03B0     		add	sp, sp, #12
 824              	.LCFI15:
 825              		.cfi_def_cfa_offset 12
 826              		@ sp needed
 827 002c 30BD     		pop	{r4, r5, pc}
 285:Core/Src/ssd1306.c **** 
 828              		.loc 1 285 1 view .LVU172
 829              		.cfi_endproc
 830              	.LFE75:
 832              		.section	.text.ssd1306_SetCursor,"ax",%progbits
 833              		.align	1
 834              		.global	ssd1306_SetCursor
 835              		.syntax unified
 836              		.thumb
 837              		.thumb_func
 839              	ssd1306_SetCursor:
 840              	.LVL74:
 841              	.LFB76:
 288:Core/Src/ssd1306.c ****     SSD1306.CurrentX = x;
 842              		.loc 1 288 46 is_stmt 1 view -0
 843              		.cfi_startproc
 844              		@ args = 0, pretend = 0, frame = 0
 845              		@ frame_needed = 0, uses_anonymous_args = 0
 846              		@ link register save eliminated.
 289:Core/Src/ssd1306.c ****     SSD1306.CurrentY = y;
 847              		.loc 1 289 5 view .LVU174
 289:Core/Src/ssd1306.c ****     SSD1306.CurrentY = y;
 848              		.loc 1 289 22 is_stmt 0 view .LVU175
 849 0000 014B     		ldr	r3, .L76
 850 0002 1880     		strh	r0, [r3]	@ movhi
 290:Core/Src/ssd1306.c **** }
 851              		.loc 1 290 5 is_stmt 1 view .LVU176
 290:Core/Src/ssd1306.c **** }
 852              		.loc 1 290 22 is_stmt 0 view .LVU177
 853 0004 5980     		strh	r1, [r3, #2]	@ movhi
 291:Core/Src/ssd1306.c **** 
 854              		.loc 1 291 1 view .LVU178
 855 0006 7047     		bx	lr
 856              	.L77:
 857              		.align	2
 858              	.L76:
 859 0008 00000000 		.word	.LANCHOR1
 860              		.cfi_endproc
 861              	.LFE76:
 863              		.section	.text.ssd1306_Line,"ax",%progbits
 864              		.align	1
 865              		.global	ssd1306_Line
 866              		.syntax unified
 867              		.thumb
 868              		.thumb_func
 870              	ssd1306_Line:
 871              	.LVL75:
 872              	.LFB77:
ARM GAS  /tmp/ccshOR3o.s 			page 25


 294:Core/Src/ssd1306.c ****   int32_t deltaX = abs(x2 - x1);
 873              		.loc 1 294 88 is_stmt 1 view -0
 874              		.cfi_startproc
 875              		@ args = 4, pretend = 0, frame = 8
 876              		@ frame_needed = 0, uses_anonymous_args = 0
 294:Core/Src/ssd1306.c ****   int32_t deltaX = abs(x2 - x1);
 877              		.loc 1 294 88 is_stmt 0 view .LVU180
 878 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 879              	.LCFI16:
 880              		.cfi_def_cfa_offset 36
 881              		.cfi_offset 4, -36
 882              		.cfi_offset 5, -32
 883              		.cfi_offset 6, -28
 884              		.cfi_offset 7, -24
 885              		.cfi_offset 8, -20
 886              		.cfi_offset 9, -16
 887              		.cfi_offset 10, -12
 888              		.cfi_offset 11, -8
 889              		.cfi_offset 14, -4
 890 0004 83B0     		sub	sp, sp, #12
 891              	.LCFI17:
 892              		.cfi_def_cfa_offset 48
 893 0006 0446     		mov	r4, r0
 894 0008 0E46     		mov	r6, r1
 895 000a 9146     		mov	r9, r2
 896 000c 9B46     		mov	fp, r3
 897 000e 9DF830A0 		ldrb	r10, [sp, #48]	@ zero_extendqisi2
 295:Core/Src/ssd1306.c ****   int32_t deltaY = abs(y2 - y1);
 898              		.loc 1 295 3 is_stmt 1 view .LVU181
 295:Core/Src/ssd1306.c ****   int32_t deltaY = abs(y2 - y1);
 899              		.loc 1 295 27 is_stmt 0 view .LVU182
 900 0012 A2EB0008 		sub	r8, r2, r0
 295:Core/Src/ssd1306.c ****   int32_t deltaY = abs(y2 - y1);
 901              		.loc 1 295 11 view .LVU183
 902 0016 B8F1000F 		cmp	r8, #0
 903 001a B8BF     		it	lt
 904 001c C8F10008 		rsblt	r8, r8, #0
 905              	.LVL76:
 296:Core/Src/ssd1306.c ****   int32_t signX = ((x1 < x2) ? 1 : -1);
 906              		.loc 1 296 3 is_stmt 1 view .LVU184
 296:Core/Src/ssd1306.c ****   int32_t signX = ((x1 < x2) ? 1 : -1);
 907              		.loc 1 296 27 is_stmt 0 view .LVU185
 908 0020 5F1A     		subs	r7, r3, r1
 296:Core/Src/ssd1306.c ****   int32_t signX = ((x1 < x2) ? 1 : -1);
 909              		.loc 1 296 11 view .LVU186
 910 0022 002F     		cmp	r7, #0
 911 0024 B8BF     		it	lt
 912 0026 7F42     		rsblt	r7, r7, #0
 913              	.LVL77:
 297:Core/Src/ssd1306.c ****   int32_t signY = ((y1 < y2) ? 1 : -1);
 914              		.loc 1 297 3 is_stmt 1 view .LVU187
 297:Core/Src/ssd1306.c ****   int32_t signY = ((y1 < y2) ? 1 : -1);
 915              		.loc 1 297 34 is_stmt 0 view .LVU188
 916 0028 8242     		cmp	r2, r0
 917 002a 0DD9     		bls	.L85
 918 002c 0123     		movs	r3, #1
 919              	.LVL78:
ARM GAS  /tmp/ccshOR3o.s 			page 26


 297:Core/Src/ssd1306.c ****   int32_t signY = ((y1 < y2) ? 1 : -1);
 920              		.loc 1 297 34 view .LVU189
 921 002e 0093     		str	r3, [sp]
 922              	.L79:
 923              	.LVL79:
 298:Core/Src/ssd1306.c ****   int32_t error = deltaX - deltaY;
 924              		.loc 1 298 3 is_stmt 1 discriminator 4 view .LVU190
 298:Core/Src/ssd1306.c ****   int32_t error = deltaX - deltaY;
 925              		.loc 1 298 34 is_stmt 0 discriminator 4 view .LVU191
 926 0030 B345     		cmp	fp, r6
 927 0032 0DD9     		bls	.L86
 298:Core/Src/ssd1306.c ****   int32_t error = deltaX - deltaY;
 928              		.loc 1 298 34 view .LVU192
 929 0034 0123     		movs	r3, #1
 930 0036 0193     		str	r3, [sp, #4]
 931              	.L80:
 932              	.LVL80:
 299:Core/Src/ssd1306.c ****   int32_t error2;
 933              		.loc 1 299 3 is_stmt 1 discriminator 4 view .LVU193
 299:Core/Src/ssd1306.c ****   int32_t error2;
 934              		.loc 1 299 11 is_stmt 0 discriminator 4 view .LVU194
 935 0038 A8EB0705 		sub	r5, r8, r7
 936              	.LVL81:
 300:Core/Src/ssd1306.c ****     
 937              		.loc 1 300 3 is_stmt 1 discriminator 4 view .LVU195
 302:Core/Src/ssd1306.c ****     while((x1 != x2) || (y1 != y2))
 938              		.loc 1 302 3 discriminator 4 view .LVU196
 939 003c 5246     		mov	r2, r10
 940              	.LVL82:
 302:Core/Src/ssd1306.c ****     while((x1 != x2) || (y1 != y2))
 941              		.loc 1 302 3 is_stmt 0 discriminator 4 view .LVU197
 942 003e 5946     		mov	r1, fp
 943              	.LVL83:
 302:Core/Src/ssd1306.c ****     while((x1 != x2) || (y1 != y2))
 944              		.loc 1 302 3 discriminator 4 view .LVU198
 945 0040 4846     		mov	r0, r9
 946              	.LVL84:
 302:Core/Src/ssd1306.c ****     while((x1 != x2) || (y1 != y2))
 947              		.loc 1 302 3 discriminator 4 view .LVU199
 948 0042 FFF7FEFF 		bl	ssd1306_DrawPixel
 949              	.LVL85:
 303:Core/Src/ssd1306.c ****     {
 950              		.loc 1 303 5 is_stmt 1 discriminator 4 view .LVU200
 303:Core/Src/ssd1306.c ****     {
 951              		.loc 1 303 10 is_stmt 0 discriminator 4 view .LVU201
 952 0046 1BE0     		b	.L81
 953              	.LVL86:
 954              	.L85:
 297:Core/Src/ssd1306.c ****   int32_t signY = ((y1 < y2) ? 1 : -1);
 955              		.loc 1 297 34 view .LVU202
 956 0048 4FF0FF33 		mov	r3, #-1
 957              	.LVL87:
 297:Core/Src/ssd1306.c ****   int32_t signY = ((y1 < y2) ? 1 : -1);
 958              		.loc 1 297 34 view .LVU203
 959 004c 0093     		str	r3, [sp]
 960 004e EFE7     		b	.L79
 961              	.LVL88:
ARM GAS  /tmp/ccshOR3o.s 			page 27


 962              	.L86:
 298:Core/Src/ssd1306.c ****   int32_t error = deltaX - deltaY;
 963              		.loc 1 298 34 view .LVU204
 964 0050 4FF0FF33 		mov	r3, #-1
 965 0054 0193     		str	r3, [sp, #4]
 966 0056 EFE7     		b	.L80
 967              	.LVL89:
 968              	.L84:
 305:Core/Src/ssd1306.c ****     error2 = error * 2;
 969              		.loc 1 305 5 is_stmt 1 view .LVU205
 970 0058 5246     		mov	r2, r10
 971 005a 3146     		mov	r1, r6
 972 005c 2046     		mov	r0, r4
 973 005e FFF7FEFF 		bl	ssd1306_DrawPixel
 974              	.LVL90:
 306:Core/Src/ssd1306.c ****     if(error2 > -deltaY)
 975              		.loc 1 306 5 view .LVU206
 306:Core/Src/ssd1306.c ****     if(error2 > -deltaY)
 976              		.loc 1 306 12 is_stmt 0 view .LVU207
 977 0062 6B00     		lsls	r3, r5, #1
 978              	.LVL91:
 307:Core/Src/ssd1306.c ****     {
 979              		.loc 1 307 5 is_stmt 1 view .LVU208
 307:Core/Src/ssd1306.c ****     {
 980              		.loc 1 307 17 is_stmt 0 view .LVU209
 981 0064 7A42     		rsbs	r2, r7, #0
 307:Core/Src/ssd1306.c ****     {
 982              		.loc 1 307 7 view .LVU210
 983 0066 B2EB450F 		cmp	r2, r5, lsl #1
 984 006a 03DA     		bge	.L82
 309:Core/Src/ssd1306.c ****       x1 += signX;
 985              		.loc 1 309 7 is_stmt 1 view .LVU211
 309:Core/Src/ssd1306.c ****       x1 += signX;
 986              		.loc 1 309 13 is_stmt 0 view .LVU212
 987 006c ED1B     		subs	r5, r5, r7
 988              	.LVL92:
 310:Core/Src/ssd1306.c ****     }
 989              		.loc 1 310 7 is_stmt 1 view .LVU213
 310:Core/Src/ssd1306.c ****     }
 990              		.loc 1 310 10 is_stmt 0 view .LVU214
 991 006e 009A     		ldr	r2, [sp]
 992 0070 1444     		add	r4, r4, r2
 993              	.LVL93:
 310:Core/Src/ssd1306.c ****     }
 994              		.loc 1 310 10 view .LVU215
 995 0072 E4B2     		uxtb	r4, r4
 996              	.LVL94:
 997              	.L82:
 315:Core/Src/ssd1306.c ****         
 998              		.loc 1 315 5 is_stmt 1 view .LVU216
 317:Core/Src/ssd1306.c ****     {
 999              		.loc 1 317 5 view .LVU217
 317:Core/Src/ssd1306.c ****     {
 1000              		.loc 1 317 7 is_stmt 0 view .LVU218
 1001 0074 9845     		cmp	r8, r3
 1002 0076 03DD     		ble	.L81
 319:Core/Src/ssd1306.c ****       y1 += signY;
ARM GAS  /tmp/ccshOR3o.s 			page 28


 1003              		.loc 1 319 7 is_stmt 1 view .LVU219
 319:Core/Src/ssd1306.c ****       y1 += signY;
 1004              		.loc 1 319 13 is_stmt 0 view .LVU220
 1005 0078 4544     		add	r5, r5, r8
 1006              	.LVL95:
 320:Core/Src/ssd1306.c ****     }
 1007              		.loc 1 320 7 is_stmt 1 view .LVU221
 320:Core/Src/ssd1306.c ****     }
 1008              		.loc 1 320 10 is_stmt 0 view .LVU222
 1009 007a 019B     		ldr	r3, [sp, #4]
 1010              	.LVL96:
 320:Core/Src/ssd1306.c ****     }
 1011              		.loc 1 320 10 view .LVU223
 1012 007c 1E44     		add	r6, r6, r3
 1013              	.LVL97:
 320:Core/Src/ssd1306.c ****     }
 1014              		.loc 1 320 10 view .LVU224
 1015 007e F6B2     		uxtb	r6, r6
 1016              	.LVL98:
 1017              	.L81:
 325:Core/Src/ssd1306.c ****   }
 1018              		.loc 1 325 5 is_stmt 1 view .LVU225
 303:Core/Src/ssd1306.c ****     {
 1019              		.loc 1 303 10 view .LVU226
 1020 0080 4C45     		cmp	r4, r9
 1021 0082 E9D1     		bne	.L84
 303:Core/Src/ssd1306.c ****     {
 1022              		.loc 1 303 22 is_stmt 0 discriminator 1 view .LVU227
 1023 0084 5E45     		cmp	r6, fp
 1024 0086 E7D1     		bne	.L84
 328:Core/Src/ssd1306.c **** //Draw polyline
 1025              		.loc 1 328 1 view .LVU228
 1026 0088 03B0     		add	sp, sp, #12
 1027              	.LCFI18:
 1028              		.cfi_def_cfa_offset 36
 1029              	.LVL99:
 328:Core/Src/ssd1306.c **** //Draw polyline
 1030              		.loc 1 328 1 view .LVU229
 1031              		@ sp needed
 1032 008a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 328:Core/Src/ssd1306.c **** //Draw polyline
 1033              		.loc 1 328 1 view .LVU230
 1034              		.cfi_endproc
 1035              	.LFE77:
 1037              		.section	.text.ssd1306_Polyline,"ax",%progbits
 1038              		.align	1
 1039              		.global	ssd1306_Polyline
 1040              		.syntax unified
 1041              		.thumb
 1042              		.thumb_func
 1044              	ssd1306_Polyline:
 1045              	.LVL100:
 1046              	.LFB78:
 330:Core/Src/ssd1306.c ****   uint16_t i;
 1047              		.loc 1 330 97 is_stmt 1 view -0
 1048              		.cfi_startproc
 1049              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccshOR3o.s 			page 29


 1050              		@ frame_needed = 0, uses_anonymous_args = 0
 331:Core/Src/ssd1306.c ****   if(par_vertex != 0){
 1051              		.loc 1 331 3 view .LVU232
 332:Core/Src/ssd1306.c ****     for(i = 1; i < par_size; i++){
 1052              		.loc 1 332 3 view .LVU233
 332:Core/Src/ssd1306.c ****     for(i = 1; i < par_size; i++){
 1053              		.loc 1 332 5 is_stmt 0 view .LVU234
 1054 0000 30B1     		cbz	r0, .L96
 330:Core/Src/ssd1306.c ****   uint16_t i;
 1055              		.loc 1 330 97 view .LVU235
 1056 0002 F0B5     		push	{r4, r5, r6, r7, lr}
 1057              	.LCFI19:
 1058              		.cfi_def_cfa_offset 20
 1059              		.cfi_offset 4, -20
 1060              		.cfi_offset 5, -16
 1061              		.cfi_offset 6, -12
 1062              		.cfi_offset 7, -8
 1063              		.cfi_offset 14, -4
 1064 0004 83B0     		sub	sp, sp, #12
 1065              	.LCFI20:
 1066              		.cfi_def_cfa_offset 32
 1067 0006 0E46     		mov	r6, r1
 1068 0008 1746     		mov	r7, r2
 1069 000a 0546     		mov	r5, r0
 333:Core/Src/ssd1306.c ****       ssd1306_Line(par_vertex[i - 1].x, par_vertex[i - 1].y, par_vertex[i].x, par_vertex[i].y, colo
 1070              		.loc 1 333 11 view .LVU236
 1071 000c 0124     		movs	r4, #1
 1072 000e 13E0     		b	.L89
 1073              	.L96:
 1074              	.LCFI21:
 1075              		.cfi_def_cfa_offset 0
 1076              		.cfi_restore 4
 1077              		.cfi_restore 5
 1078              		.cfi_restore 6
 1079              		.cfi_restore 7
 1080              		.cfi_restore 14
 333:Core/Src/ssd1306.c ****       ssd1306_Line(par_vertex[i - 1].x, par_vertex[i - 1].y, par_vertex[i].x, par_vertex[i].y, colo
 1081              		.loc 1 333 11 view .LVU237
 1082 0010 7047     		bx	lr
 1083              	.LVL101:
 1084              	.L91:
 1085              	.LCFI22:
 1086              		.cfi_def_cfa_offset 32
 1087              		.cfi_offset 4, -20
 1088              		.cfi_offset 5, -16
 1089              		.cfi_offset 6, -12
 1090              		.cfi_offset 7, -8
 1091              		.cfi_offset 14, -4
 334:Core/Src/ssd1306.c ****     }
 1092              		.loc 1 334 7 is_stmt 1 discriminator 3 view .LVU238
 334:Core/Src/ssd1306.c ****     }
 1093              		.loc 1 334 30 is_stmt 0 discriminator 3 view .LVU239
 1094 0012 04F10040 		add	r0, r4, #-2147483648
 1095 0016 0138     		subs	r0, r0, #1
 1096 0018 05EB400C 		add	ip, r5, r0, lsl #1
 334:Core/Src/ssd1306.c ****     }
 1097              		.loc 1 334 72 discriminator 3 view .LVU240
ARM GAS  /tmp/ccshOR3o.s 			page 30


 1098 001c 05EB4403 		add	r3, r5, r4, lsl #1
 334:Core/Src/ssd1306.c ****     }
 1099              		.loc 1 334 7 discriminator 3 view .LVU241
 1100 0020 0097     		str	r7, [sp]
 1101 0022 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1102 0024 15F81420 		ldrb	r2, [r5, r4, lsl #1]	@ zero_extendqisi2
 1103 0028 9CF80110 		ldrb	r1, [ip, #1]	@ zero_extendqisi2
 1104 002c 15F81000 		ldrb	r0, [r5, r0, lsl #1]	@ zero_extendqisi2
 1105 0030 FFF7FEFF 		bl	ssd1306_Line
 1106              	.LVL102:
 333:Core/Src/ssd1306.c ****       ssd1306_Line(par_vertex[i - 1].x, par_vertex[i - 1].y, par_vertex[i].x, par_vertex[i].y, colo
 1107              		.loc 1 333 30 is_stmt 1 discriminator 3 view .LVU242
 333:Core/Src/ssd1306.c ****       ssd1306_Line(par_vertex[i - 1].x, par_vertex[i - 1].y, par_vertex[i].x, par_vertex[i].y, colo
 1108              		.loc 1 333 31 is_stmt 0 discriminator 3 view .LVU243
 1109 0034 0134     		adds	r4, r4, #1
 1110              	.LVL103:
 333:Core/Src/ssd1306.c ****       ssd1306_Line(par_vertex[i - 1].x, par_vertex[i - 1].y, par_vertex[i].x, par_vertex[i].y, colo
 1111              		.loc 1 333 31 discriminator 3 view .LVU244
 1112 0036 A4B2     		uxth	r4, r4
 1113              	.LVL104:
 1114              	.L89:
 333:Core/Src/ssd1306.c ****       ssd1306_Line(par_vertex[i - 1].x, par_vertex[i - 1].y, par_vertex[i].x, par_vertex[i].y, colo
 1115              		.loc 1 333 16 is_stmt 1 discriminator 1 view .LVU245
 333:Core/Src/ssd1306.c ****       ssd1306_Line(par_vertex[i - 1].x, par_vertex[i - 1].y, par_vertex[i].x, par_vertex[i].y, colo
 1116              		.loc 1 333 5 is_stmt 0 discriminator 1 view .LVU246
 1117 0038 B442     		cmp	r4, r6
 1118 003a EAD3     		bcc	.L91
 342:Core/Src/ssd1306.c **** /*Convert Degrees to Radians*/
 1119              		.loc 1 342 1 view .LVU247
 1120 003c 03B0     		add	sp, sp, #12
 1121              	.LCFI23:
 1122              		.cfi_def_cfa_offset 20
 1123              		@ sp needed
 1124 003e F0BD     		pop	{r4, r5, r6, r7, pc}
 342:Core/Src/ssd1306.c **** /*Convert Degrees to Radians*/
 1125              		.loc 1 342 1 view .LVU248
 1126              		.cfi_endproc
 1127              	.LFE78:
 1129              		.global	__aeabi_ui2f
 1130              		.global	__aeabi_fdiv
 1131              		.global	__aeabi_fmul
 1132              		.global	__aeabi_i2d
 1133              		.global	__aeabi_d2iz
 1134              		.section	.text.ssd1306_DrawArc,"ax",%progbits
 1135              		.align	1
 1136              		.global	ssd1306_DrawArc
 1137              		.syntax unified
 1138              		.thumb
 1139              		.thumb_func
 1141              	ssd1306_DrawArc:
 1142              	.LVL105:
 1143              	.LFB81:
 361:Core/Src/ssd1306.c **** /*DrawArc. Draw angle is beginning from 4 quart of trigonometric circle (3pi/2)
 362:Core/Src/ssd1306.c ****  * start_angle in degree
 363:Core/Src/ssd1306.c ****  * sweep in degree
 364:Core/Src/ssd1306.c ****  */
 365:Core/Src/ssd1306.c **** void ssd1306_DrawArc(uint8_t x, uint8_t y, uint8_t radius, uint16_t start_angle, uint16_t sweep, SS
ARM GAS  /tmp/ccshOR3o.s 			page 31


 1144              		.loc 1 365 119 is_stmt 1 view -0
 1145              		.cfi_startproc
 1146              		@ args = 8, pretend = 0, frame = 32
 1147              		@ frame_needed = 0, uses_anonymous_args = 0
 1148              		.loc 1 365 119 is_stmt 0 view .LVU250
 1149 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1150              	.LCFI24:
 1151              		.cfi_def_cfa_offset 36
 1152              		.cfi_offset 4, -36
 1153              		.cfi_offset 5, -32
 1154              		.cfi_offset 6, -28
 1155              		.cfi_offset 7, -24
 1156              		.cfi_offset 8, -20
 1157              		.cfi_offset 9, -16
 1158              		.cfi_offset 10, -12
 1159              		.cfi_offset 11, -8
 1160              		.cfi_offset 14, -4
 1161 0004 8BB0     		sub	sp, sp, #44
 1162              	.LCFI25:
 1163              		.cfi_def_cfa_offset 80
 1164 0006 8146     		mov	r9, r0
 1165 0008 8B46     		mov	fp, r1
 1166 000a 0792     		str	r2, [sp, #28]
 1167 000c 1D46     		mov	r5, r3
 1168 000e 9DF85430 		ldrb	r3, [sp, #84]	@ zero_extendqisi2
 1169              	.LVL106:
 1170              		.loc 1 365 119 view .LVU251
 1171 0012 0893     		str	r3, [sp, #32]
 366:Core/Src/ssd1306.c ****     #define CIRCLE_APPROXIMATION_SEGMENTS 36
 367:Core/Src/ssd1306.c ****     float approx_degree;
 1172              		.loc 1 367 5 is_stmt 1 view .LVU252
 368:Core/Src/ssd1306.c ****     uint32_t approx_segments;
 1173              		.loc 1 368 5 view .LVU253
 369:Core/Src/ssd1306.c ****     uint8_t xp1,xp2;
 1174              		.loc 1 369 5 view .LVU254
 370:Core/Src/ssd1306.c ****     uint8_t yp1,yp2;
 1175              		.loc 1 370 5 view .LVU255
 371:Core/Src/ssd1306.c ****     uint32_t count = 0;
 1176              		.loc 1 371 5 view .LVU256
 1177              	.LVL107:
 372:Core/Src/ssd1306.c ****     uint32_t loc_sweep = 0;
 1178              		.loc 1 372 5 view .LVU257
 373:Core/Src/ssd1306.c ****     float rad;
 1179              		.loc 1 373 5 view .LVU258
 374:Core/Src/ssd1306.c ****     
 375:Core/Src/ssd1306.c ****     loc_sweep = ssd1306_NormalizeTo0_360(sweep);
 1180              		.loc 1 375 5 view .LVU259
 1181              		.loc 1 375 17 is_stmt 0 view .LVU260
 1182 0014 BDF85000 		ldrh	r0, [sp, #80]
 1183              	.LVL108:
 1184              		.loc 1 375 17 view .LVU261
 1185 0018 FFF7FEFF 		bl	ssd1306_NormalizeTo0_360
 1186              	.LVL109:
 1187              		.loc 1 375 17 view .LVU262
 1188 001c 0446     		mov	r4, r0
 1189              	.LVL110:
 376:Core/Src/ssd1306.c ****     
ARM GAS  /tmp/ccshOR3o.s 			page 32


 377:Core/Src/ssd1306.c ****     count = (ssd1306_NormalizeTo0_360(start_angle) * CIRCLE_APPROXIMATION_SEGMENTS) / 360;
 1190              		.loc 1 377 5 is_stmt 1 view .LVU263
 1191              		.loc 1 377 14 is_stmt 0 view .LVU264
 1192 001e 2846     		mov	r0, r5
 1193              	.LVL111:
 1194              		.loc 1 377 14 view .LVU265
 1195 0020 FFF7FEFF 		bl	ssd1306_NormalizeTo0_360
 1196              	.LVL112:
 1197              		.loc 1 377 85 view .LVU266
 1198 0024 444B     		ldr	r3, .L104
 1199 0026 83FB003A 		smull	r3, r10, r3, r0
 1200 002a C017     		asrs	r0, r0, #31
 1201 002c C0EBAA0A 		rsb	r10, r0, r10, asr #2
 1202              	.LVL113:
 378:Core/Src/ssd1306.c ****     approx_segments = (loc_sweep * CIRCLE_APPROXIMATION_SEGMENTS) / 360;
 1203              		.loc 1 378 5 is_stmt 1 view .LVU267
 1204              		.loc 1 378 34 is_stmt 0 view .LVU268
 1205 0030 04EBC403 		add	r3, r4, r4, lsl #3
 1206              		.loc 1 378 21 view .LVU269
 1207 0034 C3F35C03 		ubfx	r3, r3, #1, #29
 1208 0038 404A     		ldr	r2, .L104+4
 1209 003a A2FB0323 		umull	r2, r3, r2, r3
 1210 003e 9D08     		lsrs	r5, r3, #2
 1211              	.LVL114:
 379:Core/Src/ssd1306.c ****     approx_degree = loc_sweep / (float)approx_segments;
 1212              		.loc 1 379 5 is_stmt 1 view .LVU270
 1213              		.loc 1 379 31 is_stmt 0 view .LVU271
 1214 0040 2046     		mov	r0, r4
 1215 0042 FFF7FEFF 		bl	__aeabi_ui2f
 1216              	.LVL115:
 1217 0046 0446     		mov	r4, r0
 1218              	.LVL116:
 1219              		.loc 1 379 31 view .LVU272
 1220 0048 0990     		str	r0, [sp, #36]	@ float
 1221              		.loc 1 379 33 view .LVU273
 1222 004a 2846     		mov	r0, r5
 1223 004c FFF7FEFF 		bl	__aeabi_ui2f
 1224              	.LVL117:
 1225 0050 0146     		mov	r1, r0
 1226              		.loc 1 379 19 view .LVU274
 1227 0052 2046     		mov	r0, r4
 1228 0054 FFF7FEFF 		bl	__aeabi_fdiv
 1229              	.LVL118:
 1230 0058 0746     		mov	r7, r0
 1231              	.LVL119:
 380:Core/Src/ssd1306.c ****     while(count < approx_segments)
 1232              		.loc 1 380 5 is_stmt 1 view .LVU275
 1233 005a A846     		mov	r8, r5
 1234              		.loc 1 380 10 is_stmt 0 view .LVU276
 1235 005c 2BE0     		b	.L98
 1236              	.LVL120:
 1237              	.L99:
 381:Core/Src/ssd1306.c ****     {
 382:Core/Src/ssd1306.c ****         rad = ssd1306_DegToRad(count*approx_degree);
 383:Core/Src/ssd1306.c ****         xp1 = x + (int8_t)(sin(rad)*radius);
 384:Core/Src/ssd1306.c ****         yp1 = y + (int8_t)(cos(rad)*radius);    
 385:Core/Src/ssd1306.c ****         count++;
ARM GAS  /tmp/ccshOR3o.s 			page 33


 386:Core/Src/ssd1306.c ****         if(count != approx_segments)
 387:Core/Src/ssd1306.c ****         {
 388:Core/Src/ssd1306.c ****             rad = ssd1306_DegToRad(count*approx_degree);
 389:Core/Src/ssd1306.c ****         }
 390:Core/Src/ssd1306.c ****         else
 391:Core/Src/ssd1306.c ****         {            
 392:Core/Src/ssd1306.c ****             rad = ssd1306_DegToRad(loc_sweep);
 1238              		.loc 1 392 13 is_stmt 1 view .LVU277
 1239              		.loc 1 392 19 is_stmt 0 view .LVU278
 1240 005e 0998     		ldr	r0, [sp, #36]	@ float
 1241 0060 FFF7FEFF 		bl	ssd1306_DegToRad
 1242              	.LVL121:
 1243              	.L100:
 393:Core/Src/ssd1306.c ****         }
 394:Core/Src/ssd1306.c ****         xp2 = x + (int8_t)(sin(rad)*radius);
 1244              		.loc 1 394 9 is_stmt 1 view .LVU279
 1245              		.loc 1 394 28 is_stmt 0 view .LVU280
 1246 0064 FFF7FEFF 		bl	__aeabi_f2d
 1247              	.LVL122:
 1248              		.loc 1 394 28 view .LVU281
 1249 0068 0246     		mov	r2, r0
 1250 006a 0B46     		mov	r3, r1
 1251 006c CDE90423 		strd	r2, [sp, #16]
 1252 0070 FFF7FEFF 		bl	sin
 1253              	.LVL123:
 1254 0074 0246     		mov	r2, r0
 1255 0076 0B46     		mov	r3, r1
 1256              		.loc 1 394 36 view .LVU282
 1257 0078 DDE90201 		ldrd	r0, [sp, #8]
 1258 007c FFF7FEFF 		bl	__aeabi_dmul
 1259              	.LVL124:
 1260              		.loc 1 394 19 view .LVU283
 1261 0080 FFF7FEFF 		bl	__aeabi_d2iz
 1262              	.LVL125:
 1263 0084 C5B2     		uxtb	r5, r0
 1264              		.loc 1 394 13 view .LVU284
 1265 0086 4D44     		add	r5, r5, r9
 1266 0088 EDB2     		uxtb	r5, r5
 1267              	.LVL126:
 395:Core/Src/ssd1306.c ****         yp2 = y + (int8_t)(cos(rad)*radius);    
 1268              		.loc 1 395 9 is_stmt 1 view .LVU285
 1269              		.loc 1 395 28 is_stmt 0 view .LVU286
 1270 008a DDE90401 		ldrd	r0, [sp, #16]
 1271 008e FFF7FEFF 		bl	cos
 1272              	.LVL127:
 1273 0092 0246     		mov	r2, r0
 1274 0094 0B46     		mov	r3, r1
 1275              		.loc 1 395 36 view .LVU287
 1276 0096 DDE90201 		ldrd	r0, [sp, #8]
 1277 009a FFF7FEFF 		bl	__aeabi_dmul
 1278              	.LVL128:
 1279              		.loc 1 395 19 view .LVU288
 1280 009e FFF7FEFF 		bl	__aeabi_d2iz
 1281              	.LVL129:
 1282 00a2 C3B2     		uxtb	r3, r0
 1283              		.loc 1 395 13 view .LVU289
 1284 00a4 5B44     		add	r3, r3, fp
ARM GAS  /tmp/ccshOR3o.s 			page 34


 1285              	.LVL130:
 396:Core/Src/ssd1306.c ****         ssd1306_Line(xp1,yp1,xp2,yp2,color);
 1286              		.loc 1 396 9 is_stmt 1 view .LVU290
 1287 00a6 089A     		ldr	r2, [sp, #32]
 1288 00a8 0092     		str	r2, [sp]
 1289 00aa DBB2     		uxtb	r3, r3
 1290              		.loc 1 396 9 is_stmt 0 view .LVU291
 1291 00ac 2A46     		mov	r2, r5
 1292 00ae 2146     		mov	r1, r4
 1293 00b0 3046     		mov	r0, r6
 1294 00b2 FFF7FEFF 		bl	ssd1306_Line
 1295              	.LVL131:
 1296              	.L98:
 380:Core/Src/ssd1306.c ****     {
 1297              		.loc 1 380 10 is_stmt 1 view .LVU292
 1298 00b6 C245     		cmp	r10, r8
 1299 00b8 3BD2     		bcs	.L103
 382:Core/Src/ssd1306.c ****         xp1 = x + (int8_t)(sin(rad)*radius);
 1300              		.loc 1 382 9 view .LVU293
 382:Core/Src/ssd1306.c ****         xp1 = x + (int8_t)(sin(rad)*radius);
 1301              		.loc 1 382 15 is_stmt 0 view .LVU294
 1302 00ba 5046     		mov	r0, r10
 1303 00bc FFF7FEFF 		bl	__aeabi_ui2f
 1304              	.LVL132:
 1305 00c0 3946     		mov	r1, r7
 1306 00c2 FFF7FEFF 		bl	__aeabi_fmul
 1307              	.LVL133:
 1308 00c6 FFF7FEFF 		bl	ssd1306_DegToRad
 1309              	.LVL134:
 383:Core/Src/ssd1306.c ****         yp1 = y + (int8_t)(cos(rad)*radius);    
 1310              		.loc 1 383 9 is_stmt 1 view .LVU295
 383:Core/Src/ssd1306.c ****         yp1 = y + (int8_t)(cos(rad)*radius);    
 1311              		.loc 1 383 28 is_stmt 0 view .LVU296
 1312 00ca FFF7FEFF 		bl	__aeabi_f2d
 1313              	.LVL135:
 383:Core/Src/ssd1306.c ****         yp1 = y + (int8_t)(cos(rad)*radius);    
 1314              		.loc 1 383 28 view .LVU297
 1315 00ce 0446     		mov	r4, r0
 1316 00d0 0D46     		mov	r5, r1
 1317 00d2 FFF7FEFF 		bl	sin
 1318              	.LVL136:
 1319 00d6 CDE90401 		strd	r0, [sp, #16]
 383:Core/Src/ssd1306.c ****         yp1 = y + (int8_t)(cos(rad)*radius);    
 1320              		.loc 1 383 36 view .LVU298
 1321 00da 0798     		ldr	r0, [sp, #28]
 1322 00dc FFF7FEFF 		bl	__aeabi_i2d
 1323              	.LVL137:
 1324 00e0 0246     		mov	r2, r0
 1325 00e2 0B46     		mov	r3, r1
 1326 00e4 CDE90223 		strd	r2, [sp, #8]
 1327 00e8 DDE90401 		ldrd	r0, [sp, #16]
 1328 00ec FFF7FEFF 		bl	__aeabi_dmul
 1329              	.LVL138:
 383:Core/Src/ssd1306.c ****         yp1 = y + (int8_t)(cos(rad)*radius);    
 1330              		.loc 1 383 19 view .LVU299
 1331 00f0 FFF7FEFF 		bl	__aeabi_d2iz
 1332              	.LVL139:
ARM GAS  /tmp/ccshOR3o.s 			page 35


 1333 00f4 C6B2     		uxtb	r6, r0
 383:Core/Src/ssd1306.c ****         yp1 = y + (int8_t)(cos(rad)*radius);    
 1334              		.loc 1 383 13 view .LVU300
 1335 00f6 4E44     		add	r6, r6, r9
 1336 00f8 F6B2     		uxtb	r6, r6
 1337              	.LVL140:
 384:Core/Src/ssd1306.c ****         count++;
 1338              		.loc 1 384 9 is_stmt 1 view .LVU301
 384:Core/Src/ssd1306.c ****         count++;
 1339              		.loc 1 384 28 is_stmt 0 view .LVU302
 1340 00fa 2046     		mov	r0, r4
 1341 00fc 2946     		mov	r1, r5
 1342 00fe FFF7FEFF 		bl	cos
 1343              	.LVL141:
 1344 0102 0246     		mov	r2, r0
 1345 0104 0B46     		mov	r3, r1
 384:Core/Src/ssd1306.c ****         count++;
 1346              		.loc 1 384 36 view .LVU303
 1347 0106 DDE90201 		ldrd	r0, [sp, #8]
 1348 010a FFF7FEFF 		bl	__aeabi_dmul
 1349              	.LVL142:
 384:Core/Src/ssd1306.c ****         count++;
 1350              		.loc 1 384 19 view .LVU304
 1351 010e FFF7FEFF 		bl	__aeabi_d2iz
 1352              	.LVL143:
 1353 0112 C4B2     		uxtb	r4, r0
 384:Core/Src/ssd1306.c ****         count++;
 1354              		.loc 1 384 13 view .LVU305
 1355 0114 5C44     		add	r4, r4, fp
 1356 0116 E4B2     		uxtb	r4, r4
 1357              	.LVL144:
 385:Core/Src/ssd1306.c ****         if(count != approx_segments)
 1358              		.loc 1 385 9 is_stmt 1 view .LVU306
 385:Core/Src/ssd1306.c ****         if(count != approx_segments)
 1359              		.loc 1 385 14 is_stmt 0 view .LVU307
 1360 0118 0AF1010A 		add	r10, r10, #1
 1361              	.LVL145:
 386:Core/Src/ssd1306.c ****         {
 1362              		.loc 1 386 9 is_stmt 1 view .LVU308
 386:Core/Src/ssd1306.c ****         {
 1363              		.loc 1 386 11 is_stmt 0 view .LVU309
 1364 011c D045     		cmp	r8, r10
 1365 011e 9ED0     		beq	.L99
 388:Core/Src/ssd1306.c ****         }
 1366              		.loc 1 388 13 is_stmt 1 view .LVU310
 388:Core/Src/ssd1306.c ****         }
 1367              		.loc 1 388 19 is_stmt 0 view .LVU311
 1368 0120 5046     		mov	r0, r10
 1369 0122 FFF7FEFF 		bl	__aeabi_ui2f
 1370              	.LVL146:
 1371 0126 3946     		mov	r1, r7
 1372 0128 FFF7FEFF 		bl	__aeabi_fmul
 1373              	.LVL147:
 1374 012c FFF7FEFF 		bl	ssd1306_DegToRad
 1375              	.LVL148:
 388:Core/Src/ssd1306.c ****         }
 1376              		.loc 1 388 19 view .LVU312
ARM GAS  /tmp/ccshOR3o.s 			page 36


 1377 0130 98E7     		b	.L100
 1378              	.LVL149:
 1379              	.L103:
 397:Core/Src/ssd1306.c ****     }
 398:Core/Src/ssd1306.c ****     
 399:Core/Src/ssd1306.c ****     return;
 400:Core/Src/ssd1306.c **** }
 1380              		.loc 1 400 1 view .LVU313
 1381 0132 0BB0     		add	sp, sp, #44
 1382              	.LCFI26:
 1383              		.cfi_def_cfa_offset 36
 1384              		@ sp needed
 1385 0134 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1386              	.LVL150:
 1387              	.L105:
 1388              		.loc 1 400 1 view .LVU314
 1389              		.align	2
 1390              	.L104:
 1391 0138 67666666 		.word	1717986919
 1392 013c 176CC116 		.word	381774871
 1393              		.cfi_endproc
 1394              	.LFE81:
 1396              		.section	.text.ssd1306_DrawCircle,"ax",%progbits
 1397              		.align	1
 1398              		.global	ssd1306_DrawCircle
 1399              		.syntax unified
 1400              		.thumb
 1401              		.thumb_func
 1403              	ssd1306_DrawCircle:
 1404              	.LVL151:
 1405              	.LFB82:
 401:Core/Src/ssd1306.c **** //Draw circle by Bresenhem's algorithm
 402:Core/Src/ssd1306.c **** void ssd1306_DrawCircle(uint8_t par_x,uint8_t par_y,uint8_t par_r,SSD1306_COLOR par_color) {
 1406              		.loc 1 402 92 is_stmt 1 view -0
 1407              		.cfi_startproc
 1408              		@ args = 0, pretend = 0, frame = 8
 1409              		@ frame_needed = 0, uses_anonymous_args = 0
 1410              		.loc 1 402 92 is_stmt 0 view .LVU316
 1411 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1412              	.LCFI27:
 1413              		.cfi_def_cfa_offset 36
 1414              		.cfi_offset 4, -36
 1415              		.cfi_offset 5, -32
 1416              		.cfi_offset 6, -28
 1417              		.cfi_offset 7, -24
 1418              		.cfi_offset 8, -20
 1419              		.cfi_offset 9, -16
 1420              		.cfi_offset 10, -12
 1421              		.cfi_offset 11, -8
 1422              		.cfi_offset 14, -4
 1423 0004 83B0     		sub	sp, sp, #12
 1424              	.LCFI28:
 1425              		.cfi_def_cfa_offset 48
 1426 0006 0090     		str	r0, [sp]
 1427 0008 0191     		str	r1, [sp, #4]
 403:Core/Src/ssd1306.c ****   int32_t x = -par_r;
 1428              		.loc 1 403 3 is_stmt 1 view .LVU317
ARM GAS  /tmp/ccshOR3o.s 			page 37


 1429              	.LVL152:
 404:Core/Src/ssd1306.c ****   int32_t y = 0;
 1430              		.loc 1 404 3 view .LVU318
 405:Core/Src/ssd1306.c ****   int32_t err = 2 - 2 * par_r;
 1431              		.loc 1 405 3 view .LVU319
 406:Core/Src/ssd1306.c ****   int32_t e2;
 1432              		.loc 1 406 3 view .LVU320
 407:Core/Src/ssd1306.c **** 
 408:Core/Src/ssd1306.c ****   if (par_x >= SSD1306_WIDTH || par_y >= SSD1306_HEIGHT) {
 1433              		.loc 1 408 3 view .LVU321
 1434              		.loc 1 408 6 is_stmt 0 view .LVU322
 1435 000a 10F0800F 		tst	r0, #128
 1436 000e 4AD1     		bne	.L106
 1437 0010 9A46     		mov	r10, r3
 1438 0012 5742     		rsbs	r7, r2, #0
 1439              	.LVL153:
 1440              		.loc 1 408 6 view .LVU323
 1441 0014 C2F10102 		rsb	r2, r2, #1
 1442              	.LVL154:
 1443              		.loc 1 408 6 view .LVU324
 1444 0018 5400     		lsls	r4, r2, #1
 1445              		.loc 1 408 30 discriminator 1 view .LVU325
 1446 001a 3F29     		cmp	r1, #63
 1447 001c 43D8     		bhi	.L106
 404:Core/Src/ssd1306.c ****   int32_t err = 2 - 2 * par_r;
 1448              		.loc 1 404 11 view .LVU326
 1449 001e 4FF0000B 		mov	fp, #0
 1450 0022 08E0     		b	.L110
 1451              	.LVL155:
 1452              	.L111:
 404:Core/Src/ssd1306.c ****   int32_t err = 2 - 2 * par_r;
 1453              		.loc 1 404 11 view .LVU327
 1454 0024 2346     		mov	r3, r4
 1455              	.LVL156:
 1456              	.L108:
 409:Core/Src/ssd1306.c ****     return;
 410:Core/Src/ssd1306.c ****   }
 411:Core/Src/ssd1306.c **** 
 412:Core/Src/ssd1306.c ****     do {
 413:Core/Src/ssd1306.c ****       ssd1306_DrawPixel(par_x - x, par_y + y, par_color);
 414:Core/Src/ssd1306.c ****       ssd1306_DrawPixel(par_x + x, par_y + y, par_color);
 415:Core/Src/ssd1306.c ****       ssd1306_DrawPixel(par_x + x, par_y - y, par_color);
 416:Core/Src/ssd1306.c ****       ssd1306_DrawPixel(par_x - x, par_y - y, par_color);
 417:Core/Src/ssd1306.c ****         e2 = err;
 418:Core/Src/ssd1306.c ****         if (e2 <= y) {
 419:Core/Src/ssd1306.c ****             y++;
 420:Core/Src/ssd1306.c ****             err = err + (y * 2 + 1);
 421:Core/Src/ssd1306.c ****             if(-x == y && e2 <= x) {
 422:Core/Src/ssd1306.c ****               e2 = 0;
 423:Core/Src/ssd1306.c ****             }
 424:Core/Src/ssd1306.c ****             else
 425:Core/Src/ssd1306.c ****             {
 426:Core/Src/ssd1306.c ****               /*nothing to do*/
 427:Core/Src/ssd1306.c ****             }
 428:Core/Src/ssd1306.c ****         }
 429:Core/Src/ssd1306.c ****         else
 430:Core/Src/ssd1306.c ****         {
ARM GAS  /tmp/ccshOR3o.s 			page 38


 431:Core/Src/ssd1306.c ****           /*nothing to do*/
 432:Core/Src/ssd1306.c ****         }
 1457              		.loc 1 432 9 is_stmt 1 view .LVU328
 433:Core/Src/ssd1306.c ****         if(e2 > x) {
 1458              		.loc 1 433 9 view .LVU329
 1459              		.loc 1 433 11 is_stmt 0 view .LVU330
 1460 0026 A742     		cmp	r7, r4
 1461 0028 3BDA     		bge	.L113
 434:Core/Src/ssd1306.c ****           x++;
 1462              		.loc 1 434 11 is_stmt 1 view .LVU331
 1463              		.loc 1 434 12 is_stmt 0 view .LVU332
 1464 002a 0137     		adds	r7, r7, #1
 1465              	.LVL157:
 435:Core/Src/ssd1306.c ****           err = err + (x * 2 + 1);
 1466              		.loc 1 435 11 is_stmt 1 view .LVU333
 1467              		.loc 1 435 26 is_stmt 0 view .LVU334
 1468 002c 7C00     		lsls	r4, r7, #1
 1469              	.LVL158:
 1470              		.loc 1 435 30 view .LVU335
 1471 002e 0134     		adds	r4, r4, #1
 1472              		.loc 1 435 15 view .LVU336
 1473 0030 1C44     		add	r4, r4, r3
 1474              	.LVL159:
 1475              	.L109:
 436:Core/Src/ssd1306.c ****         }
 437:Core/Src/ssd1306.c ****         else
 438:Core/Src/ssd1306.c ****         {
 439:Core/Src/ssd1306.c ****           /*nothing to do*/
 440:Core/Src/ssd1306.c ****         }
 1476              		.loc 1 440 9 is_stmt 1 view .LVU337
 441:Core/Src/ssd1306.c ****     } while(x <= 0);
 1477              		.loc 1 441 12 view .LVU338
 1478              		.loc 1 441 5 is_stmt 0 view .LVU339
 1479 0032 002F     		cmp	r7, #0
 1480 0034 37DC     		bgt	.L106
 1481              	.LVL160:
 1482              	.L110:
 412:Core/Src/ssd1306.c ****       ssd1306_DrawPixel(par_x - x, par_y + y, par_color);
 1483              		.loc 1 412 5 is_stmt 1 view .LVU340
 413:Core/Src/ssd1306.c ****       ssd1306_DrawPixel(par_x + x, par_y + y, par_color);
 1484              		.loc 1 413 7 view .LVU341
 1485 0036 FEB2     		uxtb	r6, r7
 1486 0038 009B     		ldr	r3, [sp]
 1487 003a A3EB0608 		sub	r8, r3, r6
 1488 003e 5FFA88F8 		uxtb	r8, r8
 1489 0042 5FFA8BF5 		uxtb	r5, fp
 1490 0046 0199     		ldr	r1, [sp, #4]
 1491 0048 05EB0109 		add	r9, r5, r1
 1492 004c 5FFA89F9 		uxtb	r9, r9
 1493 0050 5246     		mov	r2, r10
 1494 0052 4946     		mov	r1, r9
 1495 0054 4046     		mov	r0, r8
 1496 0056 FFF7FEFF 		bl	ssd1306_DrawPixel
 1497              	.LVL161:
 414:Core/Src/ssd1306.c ****       ssd1306_DrawPixel(par_x + x, par_y - y, par_color);
 1498              		.loc 1 414 7 view .LVU342
 1499 005a 009A     		ldr	r2, [sp]
ARM GAS  /tmp/ccshOR3o.s 			page 39


 1500 005c 1644     		add	r6, r6, r2
 1501 005e F6B2     		uxtb	r6, r6
 1502 0060 5246     		mov	r2, r10
 1503 0062 4946     		mov	r1, r9
 1504 0064 3046     		mov	r0, r6
 1505 0066 FFF7FEFF 		bl	ssd1306_DrawPixel
 1506              	.LVL162:
 415:Core/Src/ssd1306.c ****       ssd1306_DrawPixel(par_x - x, par_y - y, par_color);
 1507              		.loc 1 415 7 view .LVU343
 1508 006a 019B     		ldr	r3, [sp, #4]
 1509 006c 5D1B     		subs	r5, r3, r5
 1510 006e EDB2     		uxtb	r5, r5
 1511 0070 5246     		mov	r2, r10
 1512 0072 2946     		mov	r1, r5
 1513 0074 3046     		mov	r0, r6
 1514 0076 FFF7FEFF 		bl	ssd1306_DrawPixel
 1515              	.LVL163:
 416:Core/Src/ssd1306.c ****         e2 = err;
 1516              		.loc 1 416 7 view .LVU344
 1517 007a 5246     		mov	r2, r10
 1518 007c 2946     		mov	r1, r5
 1519 007e 4046     		mov	r0, r8
 1520 0080 FFF7FEFF 		bl	ssd1306_DrawPixel
 1521              	.LVL164:
 417:Core/Src/ssd1306.c ****         if (e2 <= y) {
 1522              		.loc 1 417 9 view .LVU345
 418:Core/Src/ssd1306.c ****             y++;
 1523              		.loc 1 418 9 view .LVU346
 418:Core/Src/ssd1306.c ****             y++;
 1524              		.loc 1 418 12 is_stmt 0 view .LVU347
 1525 0084 A345     		cmp	fp, r4
 1526 0086 CDDB     		blt	.L111
 419:Core/Src/ssd1306.c ****             err = err + (y * 2 + 1);
 1527              		.loc 1 419 13 is_stmt 1 view .LVU348
 419:Core/Src/ssd1306.c ****             err = err + (y * 2 + 1);
 1528              		.loc 1 419 14 is_stmt 0 view .LVU349
 1529 0088 0BF1010B 		add	fp, fp, #1
 1530              	.LVL165:
 420:Core/Src/ssd1306.c ****             if(-x == y && e2 <= x) {
 1531              		.loc 1 420 13 is_stmt 1 view .LVU350
 420:Core/Src/ssd1306.c ****             if(-x == y && e2 <= x) {
 1532              		.loc 1 420 28 is_stmt 0 view .LVU351
 1533 008c 4FEA4B03 		lsl	r3, fp, #1
 420:Core/Src/ssd1306.c ****             if(-x == y && e2 <= x) {
 1534              		.loc 1 420 32 view .LVU352
 1535 0090 0133     		adds	r3, r3, #1
 420:Core/Src/ssd1306.c ****             if(-x == y && e2 <= x) {
 1536              		.loc 1 420 17 view .LVU353
 1537 0092 2344     		add	r3, r3, r4
 1538              	.LVL166:
 421:Core/Src/ssd1306.c ****               e2 = 0;
 1539              		.loc 1 421 13 is_stmt 1 view .LVU354
 421:Core/Src/ssd1306.c ****               e2 = 0;
 1540              		.loc 1 421 15 is_stmt 0 view .LVU355
 1541 0094 1BEB070F 		cmn	fp, r7
 1542 0098 C5D1     		bne	.L108
 421:Core/Src/ssd1306.c ****               e2 = 0;
ARM GAS  /tmp/ccshOR3o.s 			page 40


 1543              		.loc 1 421 24 discriminator 1 view .LVU356
 1544 009a A742     		cmp	r7, r4
 1545 009c C3DB     		blt	.L108
 422:Core/Src/ssd1306.c ****             }
 1546              		.loc 1 422 18 view .LVU357
 1547 009e 0024     		movs	r4, #0
 1548              	.LVL167:
 422:Core/Src/ssd1306.c ****             }
 1549              		.loc 1 422 18 view .LVU358
 1550 00a0 C1E7     		b	.L108
 1551              	.LVL168:
 1552              	.L113:
 422:Core/Src/ssd1306.c ****             }
 1553              		.loc 1 422 18 view .LVU359
 1554 00a2 1C46     		mov	r4, r3
 1555              	.LVL169:
 422:Core/Src/ssd1306.c ****             }
 1556              		.loc 1 422 18 view .LVU360
 1557 00a4 C5E7     		b	.L109
 1558              	.LVL170:
 1559              	.L106:
 442:Core/Src/ssd1306.c **** 
 443:Core/Src/ssd1306.c ****     return;
 444:Core/Src/ssd1306.c **** }
 1560              		.loc 1 444 1 view .LVU361
 1561 00a6 03B0     		add	sp, sp, #12
 1562              	.LCFI29:
 1563              		.cfi_def_cfa_offset 36
 1564              		@ sp needed
 1565 00a8 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1566              		.cfi_endproc
 1567              	.LFE82:
 1569              		.section	.text.ssd1306_DrawRectangle,"ax",%progbits
 1570              		.align	1
 1571              		.global	ssd1306_DrawRectangle
 1572              		.syntax unified
 1573              		.thumb
 1574              		.thumb_func
 1576              	ssd1306_DrawRectangle:
 1577              	.LVL171:
 1578              	.LFB83:
 445:Core/Src/ssd1306.c **** 
 446:Core/Src/ssd1306.c **** //Draw rectangle
 447:Core/Src/ssd1306.c **** void ssd1306_DrawRectangle(uint8_t x1, uint8_t y1, uint8_t x2, uint8_t y2, SSD1306_COLOR color) {
 1579              		.loc 1 447 97 is_stmt 1 view -0
 1580              		.cfi_startproc
 1581              		@ args = 4, pretend = 0, frame = 0
 1582              		@ frame_needed = 0, uses_anonymous_args = 0
 1583              		.loc 1 447 97 is_stmt 0 view .LVU363
 1584 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1585              	.LCFI30:
 1586              		.cfi_def_cfa_offset 24
 1587              		.cfi_offset 4, -24
 1588              		.cfi_offset 5, -20
 1589              		.cfi_offset 6, -16
 1590              		.cfi_offset 7, -12
 1591              		.cfi_offset 8, -8
ARM GAS  /tmp/ccshOR3o.s 			page 41


 1592              		.cfi_offset 14, -4
 1593 0004 82B0     		sub	sp, sp, #8
 1594              	.LCFI31:
 1595              		.cfi_def_cfa_offset 32
 1596 0006 0546     		mov	r5, r0
 1597 0008 0E46     		mov	r6, r1
 1598 000a 1746     		mov	r7, r2
 1599 000c 1C46     		mov	r4, r3
 1600 000e 9DF82080 		ldrb	r8, [sp, #32]	@ zero_extendqisi2
 448:Core/Src/ssd1306.c ****   ssd1306_Line(x1,y1,x2,y1,color);
 1601              		.loc 1 448 3 is_stmt 1 view .LVU364
 1602 0012 CDF80080 		str	r8, [sp]
 1603 0016 0B46     		mov	r3, r1
 1604              	.LVL172:
 1605              		.loc 1 448 3 is_stmt 0 view .LVU365
 1606 0018 FFF7FEFF 		bl	ssd1306_Line
 1607              	.LVL173:
 449:Core/Src/ssd1306.c ****   ssd1306_Line(x2,y1,x2,y2,color);
 1608              		.loc 1 449 3 is_stmt 1 view .LVU366
 1609 001c CDF80080 		str	r8, [sp]
 1610 0020 2346     		mov	r3, r4
 1611 0022 3A46     		mov	r2, r7
 1612 0024 3146     		mov	r1, r6
 1613 0026 3846     		mov	r0, r7
 1614 0028 FFF7FEFF 		bl	ssd1306_Line
 1615              	.LVL174:
 450:Core/Src/ssd1306.c ****   ssd1306_Line(x2,y2,x1,y2,color);
 1616              		.loc 1 450 3 view .LVU367
 1617 002c CDF80080 		str	r8, [sp]
 1618 0030 2346     		mov	r3, r4
 1619 0032 2A46     		mov	r2, r5
 1620 0034 2146     		mov	r1, r4
 1621 0036 3846     		mov	r0, r7
 1622 0038 FFF7FEFF 		bl	ssd1306_Line
 1623              	.LVL175:
 451:Core/Src/ssd1306.c ****   ssd1306_Line(x1,y2,x1,y1,color);
 1624              		.loc 1 451 3 view .LVU368
 1625 003c CDF80080 		str	r8, [sp]
 1626 0040 3346     		mov	r3, r6
 1627 0042 2A46     		mov	r2, r5
 1628 0044 2146     		mov	r1, r4
 1629 0046 2846     		mov	r0, r5
 1630 0048 FFF7FEFF 		bl	ssd1306_Line
 1631              	.LVL176:
 452:Core/Src/ssd1306.c **** 
 453:Core/Src/ssd1306.c ****   return;
 1632              		.loc 1 453 3 view .LVU369
 454:Core/Src/ssd1306.c **** }
 1633              		.loc 1 454 1 is_stmt 0 view .LVU370
 1634 004c 02B0     		add	sp, sp, #8
 1635              	.LCFI32:
 1636              		.cfi_def_cfa_offset 24
 1637              		@ sp needed
 1638 004e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1639              		.loc 1 454 1 view .LVU371
 1640              		.cfi_endproc
 1641              	.LFE83:
ARM GAS  /tmp/ccshOR3o.s 			page 42


 1643              		.section	.text.ssd1306_DrawBitmap,"ax",%progbits
 1644              		.align	1
 1645              		.global	ssd1306_DrawBitmap
 1646              		.syntax unified
 1647              		.thumb
 1648              		.thumb_func
 1650              	ssd1306_DrawBitmap:
 1651              	.LVL177:
 1652              	.LFB84:
 455:Core/Src/ssd1306.c **** 
 456:Core/Src/ssd1306.c **** //Draw bitmap - ported from the ADAFruit GFX library
 457:Core/Src/ssd1306.c **** 
 458:Core/Src/ssd1306.c **** void ssd1306_DrawBitmap(uint8_t x, uint8_t y, const unsigned char* bitmap, uint8_t w, uint8_t h, SS
 459:Core/Src/ssd1306.c **** {
 1653              		.loc 1 459 1 is_stmt 1 view -0
 1654              		.cfi_startproc
 1655              		@ args = 8, pretend = 0, frame = 8
 1656              		@ frame_needed = 0, uses_anonymous_args = 0
 1657              		.loc 1 459 1 is_stmt 0 view .LVU373
 1658 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1659              	.LCFI33:
 1660              		.cfi_def_cfa_offset 36
 1661              		.cfi_offset 4, -36
 1662              		.cfi_offset 5, -32
 1663              		.cfi_offset 6, -28
 1664              		.cfi_offset 7, -24
 1665              		.cfi_offset 8, -20
 1666              		.cfi_offset 9, -16
 1667              		.cfi_offset 10, -12
 1668              		.cfi_offset 11, -8
 1669              		.cfi_offset 14, -4
 1670 0004 83B0     		sub	sp, sp, #12
 1671              	.LCFI34:
 1672              		.cfi_def_cfa_offset 48
 1673 0006 1E46     		mov	r6, r3
 1674 0008 9DF83030 		ldrb	r3, [sp, #48]	@ zero_extendqisi2
 1675              	.LVL178:
 1676              		.loc 1 459 1 view .LVU374
 1677 000c 0193     		str	r3, [sp, #4]
 1678 000e 9DF83430 		ldrb	r3, [sp, #52]	@ zero_extendqisi2
 1679 0012 0093     		str	r3, [sp]
 460:Core/Src/ssd1306.c ****     int16_t byteWidth = (w + 7) / 8; // Bitmap scanline pad = whole byte
 1680              		.loc 1 460 5 is_stmt 1 view .LVU375
 1681              	.LVL179:
 461:Core/Src/ssd1306.c ****     uint8_t byte = 0;
 1682              		.loc 1 461 5 view .LVU376
 462:Core/Src/ssd1306.c **** 
 463:Core/Src/ssd1306.c ****     if (x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 1683              		.loc 1 463 5 view .LVU377
 1684              		.loc 1 463 8 is_stmt 0 view .LVU378
 1685 0014 10F0800F 		tst	r0, #128
 1686 0018 30D1     		bne	.L117
 1687 001a 8346     		mov	fp, r0
 1688 001c 8846     		mov	r8, r1
 1689 001e 9246     		mov	r10, r2
 1690 0020 06F10709 		add	r9, r6, #7
 1691              	.LVL180:
ARM GAS  /tmp/ccshOR3o.s 			page 43


 1692              		.loc 1 463 8 view .LVU379
 1693 0024 4FEAD909 		lsr	r9, r9, #3
 1694              	.LVL181:
 1695              		.loc 1 463 28 discriminator 1 view .LVU380
 1696 0028 3F29     		cmp	r1, #63
 1697 002a 27D8     		bhi	.L117
 1698              	.LBB2:
 464:Core/Src/ssd1306.c ****         return;
 465:Core/Src/ssd1306.c ****     }
 466:Core/Src/ssd1306.c **** 
 467:Core/Src/ssd1306.c ****     for (uint8_t j = 0; j < h; j++, y++) {
 1699              		.loc 1 467 18 view .LVU381
 1700 002c 0027     		movs	r7, #0
 1701              	.LBE2:
 461:Core/Src/ssd1306.c **** 
 1702              		.loc 1 461 13 view .LVU382
 1703 002e 3D46     		mov	r5, r7
 1704 0030 1FE0     		b	.L120
 1705              	.LVL182:
 1706              	.L121:
 1707              	.LBB5:
 1708              	.LBB3:
 468:Core/Src/ssd1306.c ****         for (uint8_t i = 0; i < w; i++) {
 469:Core/Src/ssd1306.c ****             if (i & 7)
 470:Core/Src/ssd1306.c ****                 byte <<= 1;
 471:Core/Src/ssd1306.c ****             else
 472:Core/Src/ssd1306.c ****                 byte = (*(const unsigned char *)(&bitmap[j * byteWidth + i / 8]));
 1709              		.loc 1 472 17 is_stmt 1 view .LVU383
 1710              		.loc 1 472 76 is_stmt 0 view .LVU384
 1711 0032 E308     		lsrs	r3, r4, #3
 1712              		.loc 1 472 72 view .LVU385
 1713 0034 09FB0733 		mla	r3, r9, r7, r3
 1714              		.loc 1 472 22 view .LVU386
 1715 0038 1AF80350 		ldrb	r5, [r10, r3]	@ zero_extendqisi2
 1716              	.LVL183:
 1717              	.L122:
 473:Core/Src/ssd1306.c ****             if (byte & 0x80)
 1718              		.loc 1 473 13 is_stmt 1 view .LVU387
 1719              		.loc 1 473 16 is_stmt 0 view .LVU388
 1720 003c 15F0800F 		tst	r5, #128
 1721 0040 09D1     		bne	.L128
 1722              	.L123:
 468:Core/Src/ssd1306.c ****         for (uint8_t i = 0; i < w; i++) {
 1723              		.loc 1 468 36 is_stmt 1 discriminator 2 view .LVU389
 468:Core/Src/ssd1306.c ****         for (uint8_t i = 0; i < w; i++) {
 1724              		.loc 1 468 37 is_stmt 0 discriminator 2 view .LVU390
 1725 0042 0134     		adds	r4, r4, #1
 1726              	.LVL184:
 468:Core/Src/ssd1306.c ****         for (uint8_t i = 0; i < w; i++) {
 1727              		.loc 1 468 37 discriminator 2 view .LVU391
 1728 0044 E4B2     		uxtb	r4, r4
 1729              	.LVL185:
 1730              	.L125:
 468:Core/Src/ssd1306.c ****         for (uint8_t i = 0; i < w; i++) {
 1731              		.loc 1 468 29 is_stmt 1 discriminator 1 view .LVU392
 468:Core/Src/ssd1306.c ****         for (uint8_t i = 0; i < w; i++) {
 1732              		.loc 1 468 9 is_stmt 0 discriminator 1 view .LVU393
ARM GAS  /tmp/ccshOR3o.s 			page 44


 1733 0046 B442     		cmp	r4, r6
 1734 0048 0DD2     		bcs	.L129
 469:Core/Src/ssd1306.c ****                 byte <<= 1;
 1735              		.loc 1 469 13 is_stmt 1 view .LVU394
 469:Core/Src/ssd1306.c ****                 byte <<= 1;
 1736              		.loc 1 469 16 is_stmt 0 view .LVU395
 1737 004a 14F0070F 		tst	r4, #7
 1738 004e F0D0     		beq	.L121
 470:Core/Src/ssd1306.c ****             else
 1739              		.loc 1 470 17 is_stmt 1 view .LVU396
 470:Core/Src/ssd1306.c ****             else
 1740              		.loc 1 470 22 is_stmt 0 view .LVU397
 1741 0050 6D00     		lsls	r5, r5, #1
 1742              	.LVL186:
 470:Core/Src/ssd1306.c ****             else
 1743              		.loc 1 470 22 view .LVU398
 1744 0052 EDB2     		uxtb	r5, r5
 1745              	.LVL187:
 470:Core/Src/ssd1306.c ****             else
 1746              		.loc 1 470 22 view .LVU399
 1747 0054 F2E7     		b	.L122
 1748              	.L128:
 474:Core/Src/ssd1306.c ****                 ssd1306_DrawPixel(x + i, y, color);
 1749              		.loc 1 474 17 is_stmt 1 view .LVU400
 1750 0056 04EB0B00 		add	r0, r4, fp
 1751 005a 009A     		ldr	r2, [sp]
 1752 005c 4146     		mov	r1, r8
 1753 005e C0B2     		uxtb	r0, r0
 1754 0060 FFF7FEFF 		bl	ssd1306_DrawPixel
 1755              	.LVL188:
 1756 0064 EDE7     		b	.L123
 1757              	.L129:
 1758              		.loc 1 474 17 is_stmt 0 view .LVU401
 1759              	.LBE3:
 467:Core/Src/ssd1306.c ****         for (uint8_t i = 0; i < w; i++) {
 1760              		.loc 1 467 32 is_stmt 1 discriminator 2 view .LVU402
 467:Core/Src/ssd1306.c ****         for (uint8_t i = 0; i < w; i++) {
 1761              		.loc 1 467 33 is_stmt 0 discriminator 2 view .LVU403
 1762 0066 0137     		adds	r7, r7, #1
 1763              	.LVL189:
 467:Core/Src/ssd1306.c ****         for (uint8_t i = 0; i < w; i++) {
 1764              		.loc 1 467 33 discriminator 2 view .LVU404
 1765 0068 FFB2     		uxtb	r7, r7
 1766              	.LVL190:
 467:Core/Src/ssd1306.c ****         for (uint8_t i = 0; i < w; i++) {
 1767              		.loc 1 467 38 discriminator 2 view .LVU405
 1768 006a 08F10108 		add	r8, r8, #1
 1769              	.LVL191:
 467:Core/Src/ssd1306.c ****         for (uint8_t i = 0; i < w; i++) {
 1770              		.loc 1 467 38 discriminator 2 view .LVU406
 1771 006e 5FFA88F8 		uxtb	r8, r8
 1772              	.LVL192:
 1773              	.L120:
 467:Core/Src/ssd1306.c ****         for (uint8_t i = 0; i < w; i++) {
 1774              		.loc 1 467 25 is_stmt 1 discriminator 1 view .LVU407
 467:Core/Src/ssd1306.c ****         for (uint8_t i = 0; i < w; i++) {
 1775              		.loc 1 467 5 is_stmt 0 discriminator 1 view .LVU408
ARM GAS  /tmp/ccshOR3o.s 			page 45


 1776 0072 019B     		ldr	r3, [sp, #4]
 1777 0074 9F42     		cmp	r7, r3
 1778 0076 01D2     		bcs	.L117
 1779              	.LBB4:
 468:Core/Src/ssd1306.c ****             if (i & 7)
 1780              		.loc 1 468 22 view .LVU409
 1781 0078 0024     		movs	r4, #0
 1782 007a E4E7     		b	.L125
 1783              	.LVL193:
 1784              	.L117:
 468:Core/Src/ssd1306.c ****             if (i & 7)
 1785              		.loc 1 468 22 view .LVU410
 1786              	.LBE4:
 1787              	.LBE5:
 475:Core/Src/ssd1306.c ****         }
 476:Core/Src/ssd1306.c ****     }
 477:Core/Src/ssd1306.c ****     return;
 478:Core/Src/ssd1306.c **** }
 1788              		.loc 1 478 1 view .LVU411
 1789 007c 03B0     		add	sp, sp, #12
 1790              	.LCFI35:
 1791              		.cfi_def_cfa_offset 36
 1792              		@ sp needed
 1793 007e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1794              		.loc 1 478 1 view .LVU412
 1795              		.cfi_endproc
 1796              	.LFE84:
 1798              		.section	.text.ssd1306_SetContrast,"ax",%progbits
 1799              		.align	1
 1800              		.global	ssd1306_SetContrast
 1801              		.syntax unified
 1802              		.thumb
 1803              		.thumb_func
 1805              	ssd1306_SetContrast:
 1806              	.LVL194:
 1807              	.LFB85:
 479:Core/Src/ssd1306.c **** 
 480:Core/Src/ssd1306.c **** void ssd1306_SetContrast(const uint8_t value) {
 1808              		.loc 1 480 47 is_stmt 1 view -0
 1809              		.cfi_startproc
 1810              		@ args = 0, pretend = 0, frame = 0
 1811              		@ frame_needed = 0, uses_anonymous_args = 0
 1812              		.loc 1 480 47 is_stmt 0 view .LVU414
 1813 0000 10B5     		push	{r4, lr}
 1814              	.LCFI36:
 1815              		.cfi_def_cfa_offset 8
 1816              		.cfi_offset 4, -8
 1817              		.cfi_offset 14, -4
 1818 0002 0446     		mov	r4, r0
 481:Core/Src/ssd1306.c ****     const uint8_t kSetContrastControlRegister = 0x81;
 1819              		.loc 1 481 5 is_stmt 1 view .LVU415
 1820              	.LVL195:
 482:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(kSetContrastControlRegister);
 1821              		.loc 1 482 5 view .LVU416
 1822 0004 8120     		movs	r0, #129
 1823              	.LVL196:
 1824              		.loc 1 482 5 is_stmt 0 view .LVU417
ARM GAS  /tmp/ccshOR3o.s 			page 46


 1825 0006 FFF7FEFF 		bl	ssd1306_WriteCommand
 1826              	.LVL197:
 483:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(value);
 1827              		.loc 1 483 5 is_stmt 1 view .LVU418
 1828 000a 2046     		mov	r0, r4
 1829 000c FFF7FEFF 		bl	ssd1306_WriteCommand
 1830              	.LVL198:
 484:Core/Src/ssd1306.c **** }
 1831              		.loc 1 484 1 is_stmt 0 view .LVU419
 1832 0010 10BD     		pop	{r4, pc}
 1833              		.cfi_endproc
 1834              	.LFE85:
 1836              		.section	.text.ssd1306_SetDisplayOn,"ax",%progbits
 1837              		.align	1
 1838              		.global	ssd1306_SetDisplayOn
 1839              		.syntax unified
 1840              		.thumb
 1841              		.thumb_func
 1843              	ssd1306_SetDisplayOn:
 1844              	.LVL199:
 1845              	.LFB86:
 485:Core/Src/ssd1306.c **** 
 486:Core/Src/ssd1306.c **** void ssd1306_SetDisplayOn(const uint8_t on) {
 1846              		.loc 1 486 45 is_stmt 1 view -0
 1847              		.cfi_startproc
 1848              		@ args = 0, pretend = 0, frame = 0
 1849              		@ frame_needed = 0, uses_anonymous_args = 0
 1850              		.loc 1 486 45 is_stmt 0 view .LVU421
 1851 0000 08B5     		push	{r3, lr}
 1852              	.LCFI37:
 1853              		.cfi_def_cfa_offset 8
 1854              		.cfi_offset 3, -8
 1855              		.cfi_offset 14, -4
 487:Core/Src/ssd1306.c ****     uint8_t value;
 1856              		.loc 1 487 5 is_stmt 1 view .LVU422
 488:Core/Src/ssd1306.c ****     if (on) {
 1857              		.loc 1 488 5 view .LVU423
 1858              		.loc 1 488 8 is_stmt 0 view .LVU424
 1859 0002 30B1     		cbz	r0, .L133
 489:Core/Src/ssd1306.c ****         value = 0xAF;   // Display on
 1860              		.loc 1 489 9 is_stmt 1 view .LVU425
 1861              	.LVL200:
 490:Core/Src/ssd1306.c ****         SSD1306.DisplayOn = 1;
 1862              		.loc 1 490 9 view .LVU426
 1863              		.loc 1 490 27 is_stmt 0 view .LVU427
 1864 0004 054B     		ldr	r3, .L136
 1865 0006 0122     		movs	r2, #1
 1866 0008 5A71     		strb	r2, [r3, #5]
 489:Core/Src/ssd1306.c ****         value = 0xAF;   // Display on
 1867              		.loc 1 489 15 view .LVU428
 1868 000a AF20     		movs	r0, #175
 1869              	.LVL201:
 1870              	.L134:
 491:Core/Src/ssd1306.c ****     } else {
 492:Core/Src/ssd1306.c ****         value = 0xAE;   // Display off
 493:Core/Src/ssd1306.c ****         SSD1306.DisplayOn = 0;
 494:Core/Src/ssd1306.c ****     }
ARM GAS  /tmp/ccshOR3o.s 			page 47


 495:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(value);
 1871              		.loc 1 495 5 is_stmt 1 view .LVU429
 1872 000c FFF7FEFF 		bl	ssd1306_WriteCommand
 1873              	.LVL202:
 496:Core/Src/ssd1306.c **** }
 1874              		.loc 1 496 1 is_stmt 0 view .LVU430
 1875 0010 08BD     		pop	{r3, pc}
 1876              	.LVL203:
 1877              	.L133:
 492:Core/Src/ssd1306.c ****         SSD1306.DisplayOn = 0;
 1878              		.loc 1 492 9 is_stmt 1 view .LVU431
 493:Core/Src/ssd1306.c ****     }
 1879              		.loc 1 493 9 view .LVU432
 493:Core/Src/ssd1306.c ****     }
 1880              		.loc 1 493 27 is_stmt 0 view .LVU433
 1881 0012 024B     		ldr	r3, .L136
 1882 0014 0022     		movs	r2, #0
 1883 0016 5A71     		strb	r2, [r3, #5]
 492:Core/Src/ssd1306.c ****         SSD1306.DisplayOn = 0;
 1884              		.loc 1 492 15 view .LVU434
 1885 0018 AE20     		movs	r0, #174
 1886              	.LVL204:
 492:Core/Src/ssd1306.c ****         SSD1306.DisplayOn = 0;
 1887              		.loc 1 492 15 view .LVU435
 1888 001a F7E7     		b	.L134
 1889              	.L137:
 1890              		.align	2
 1891              	.L136:
 1892 001c 00000000 		.word	.LANCHOR1
 1893              		.cfi_endproc
 1894              	.LFE86:
 1896              		.section	.text.ssd1306_Init,"ax",%progbits
 1897              		.align	1
 1898              		.global	ssd1306_Init
 1899              		.syntax unified
 1900              		.thumb
 1901              		.thumb_func
 1903              	ssd1306_Init:
 1904              	.LFB70:
  83:Core/Src/ssd1306.c ****     // Reset OLED
 1905              		.loc 1 83 25 is_stmt 1 view -0
 1906              		.cfi_startproc
 1907              		@ args = 0, pretend = 0, frame = 0
 1908              		@ frame_needed = 0, uses_anonymous_args = 0
 1909 0000 08B5     		push	{r3, lr}
 1910              	.LCFI38:
 1911              		.cfi_def_cfa_offset 8
 1912              		.cfi_offset 3, -8
 1913              		.cfi_offset 14, -4
  85:Core/Src/ssd1306.c **** 
 1914              		.loc 1 85 5 view .LVU437
 1915 0002 FFF7FEFF 		bl	ssd1306_Reset
 1916              	.LVL205:
  88:Core/Src/ssd1306.c **** 
 1917              		.loc 1 88 5 view .LVU438
 1918 0006 6420     		movs	r0, #100
 1919 0008 FFF7FEFF 		bl	HAL_Delay
ARM GAS  /tmp/ccshOR3o.s 			page 48


 1920              	.LVL206:
  91:Core/Src/ssd1306.c **** 
 1921              		.loc 1 91 5 view .LVU439
 1922 000c 0020     		movs	r0, #0
 1923 000e FFF7FEFF 		bl	ssd1306_SetDisplayOn
 1924              	.LVL207:
  93:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0x00); // 00b,Horizontal Addressing Mode; 01b,Vertical Addressing Mode;
 1925              		.loc 1 93 5 view .LVU440
 1926 0012 2020     		movs	r0, #32
 1927 0014 FFF7FEFF 		bl	ssd1306_WriteCommand
 1928              	.LVL208:
  94:Core/Src/ssd1306.c ****                                 // 10b,Page Addressing Mode (RESET); 11b,Invalid
 1929              		.loc 1 94 5 view .LVU441
 1930 0018 0020     		movs	r0, #0
 1931 001a FFF7FEFF 		bl	ssd1306_WriteCommand
 1932              	.LVL209:
  97:Core/Src/ssd1306.c **** 
 1933              		.loc 1 97 5 view .LVU442
 1934 001e B020     		movs	r0, #176
 1935 0020 FFF7FEFF 		bl	ssd1306_WriteCommand
 1936              	.LVL210:
 102:Core/Src/ssd1306.c **** #endif
 1937              		.loc 1 102 5 view .LVU443
 1938 0024 C820     		movs	r0, #200
 1939 0026 FFF7FEFF 		bl	ssd1306_WriteCommand
 1940              	.LVL211:
 105:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0x10); //---set high column address
 1941              		.loc 1 105 5 view .LVU444
 1942 002a 0020     		movs	r0, #0
 1943 002c FFF7FEFF 		bl	ssd1306_WriteCommand
 1944              	.LVL212:
 106:Core/Src/ssd1306.c **** 
 1945              		.loc 1 106 5 view .LVU445
 1946 0030 1020     		movs	r0, #16
 1947 0032 FFF7FEFF 		bl	ssd1306_WriteCommand
 1948              	.LVL213:
 108:Core/Src/ssd1306.c **** 
 1949              		.loc 1 108 5 view .LVU446
 1950 0036 4020     		movs	r0, #64
 1951 0038 FFF7FEFF 		bl	ssd1306_WriteCommand
 1952              	.LVL214:
 110:Core/Src/ssd1306.c **** 
 1953              		.loc 1 110 5 view .LVU447
 1954 003c FF20     		movs	r0, #255
 1955 003e FFF7FEFF 		bl	ssd1306_SetContrast
 1956              	.LVL215:
 115:Core/Src/ssd1306.c **** #endif
 1957              		.loc 1 115 5 view .LVU448
 1958 0042 A120     		movs	r0, #161
 1959 0044 FFF7FEFF 		bl	ssd1306_WriteCommand
 1960              	.LVL216:
 121:Core/Src/ssd1306.c **** #endif
 1961              		.loc 1 121 5 view .LVU449
 1962 0048 A620     		movs	r0, #166
 1963 004a FFF7FEFF 		bl	ssd1306_WriteCommand
 1964              	.LVL217:
 129:Core/Src/ssd1306.c **** #endif
ARM GAS  /tmp/ccshOR3o.s 			page 49


 1965              		.loc 1 129 5 view .LVU450
 1966 004e A820     		movs	r0, #168
 1967 0050 FFF7FEFF 		bl	ssd1306_WriteCommand
 1968              	.LVL218:
 135:Core/Src/ssd1306.c **** #elif (SSD1306_HEIGHT == 128)
 1969              		.loc 1 135 5 view .LVU451
 1970 0054 3F20     		movs	r0, #63
 1971 0056 FFF7FEFF 		bl	ssd1306_WriteCommand
 1972              	.LVL219:
 142:Core/Src/ssd1306.c **** 
 1973              		.loc 1 142 5 view .LVU452
 1974 005a A420     		movs	r0, #164
 1975 005c FFF7FEFF 		bl	ssd1306_WriteCommand
 1976              	.LVL220:
 144:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0x00); //-not offset
 1977              		.loc 1 144 5 view .LVU453
 1978 0060 D320     		movs	r0, #211
 1979 0062 FFF7FEFF 		bl	ssd1306_WriteCommand
 1980              	.LVL221:
 145:Core/Src/ssd1306.c **** 
 1981              		.loc 1 145 5 view .LVU454
 1982 0066 0020     		movs	r0, #0
 1983 0068 FFF7FEFF 		bl	ssd1306_WriteCommand
 1984              	.LVL222:
 147:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0xF0); //--set divide ratio
 1985              		.loc 1 147 5 view .LVU455
 1986 006c D520     		movs	r0, #213
 1987 006e FFF7FEFF 		bl	ssd1306_WriteCommand
 1988              	.LVL223:
 148:Core/Src/ssd1306.c **** 
 1989              		.loc 1 148 5 view .LVU456
 1990 0072 F020     		movs	r0, #240
 1991 0074 FFF7FEFF 		bl	ssd1306_WriteCommand
 1992              	.LVL224:
 150:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0x22); //
 1993              		.loc 1 150 5 view .LVU457
 1994 0078 D920     		movs	r0, #217
 1995 007a FFF7FEFF 		bl	ssd1306_WriteCommand
 1996              	.LVL225:
 151:Core/Src/ssd1306.c **** 
 1997              		.loc 1 151 5 view .LVU458
 1998 007e 2220     		movs	r0, #34
 1999 0080 FFF7FEFF 		bl	ssd1306_WriteCommand
 2000              	.LVL226:
 153:Core/Src/ssd1306.c **** #if (SSD1306_HEIGHT == 32)
 2001              		.loc 1 153 5 view .LVU459
 2002 0084 DA20     		movs	r0, #218
 2003 0086 FFF7FEFF 		bl	ssd1306_WriteCommand
 2004              	.LVL227:
 157:Core/Src/ssd1306.c **** #elif (SSD1306_HEIGHT == 128)
 2005              		.loc 1 157 5 view .LVU460
 2006 008a 1220     		movs	r0, #18
 2007 008c FFF7FEFF 		bl	ssd1306_WriteCommand
 2008              	.LVL228:
 164:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0x20); //0x20,0.77xVcc
 2009              		.loc 1 164 5 view .LVU461
 2010 0090 DB20     		movs	r0, #219
ARM GAS  /tmp/ccshOR3o.s 			page 50


 2011 0092 FFF7FEFF 		bl	ssd1306_WriteCommand
 2012              	.LVL229:
 165:Core/Src/ssd1306.c **** 
 2013              		.loc 1 165 5 view .LVU462
 2014 0096 2020     		movs	r0, #32
 2015 0098 FFF7FEFF 		bl	ssd1306_WriteCommand
 2016              	.LVL230:
 167:Core/Src/ssd1306.c ****     ssd1306_WriteCommand(0x14); //
 2017              		.loc 1 167 5 view .LVU463
 2018 009c 8D20     		movs	r0, #141
 2019 009e FFF7FEFF 		bl	ssd1306_WriteCommand
 2020              	.LVL231:
 168:Core/Src/ssd1306.c ****     ssd1306_SetDisplayOn(1); //--turn on SSD1306 panel
 2021              		.loc 1 168 5 view .LVU464
 2022 00a2 1420     		movs	r0, #20
 2023 00a4 FFF7FEFF 		bl	ssd1306_WriteCommand
 2024              	.LVL232:
 169:Core/Src/ssd1306.c **** 
 2025              		.loc 1 169 5 view .LVU465
 2026 00a8 0120     		movs	r0, #1
 2027 00aa FFF7FEFF 		bl	ssd1306_SetDisplayOn
 2028              	.LVL233:
 172:Core/Src/ssd1306.c ****     
 2029              		.loc 1 172 5 view .LVU466
 2030 00ae 0020     		movs	r0, #0
 2031 00b0 FFF7FEFF 		bl	ssd1306_Fill
 2032              	.LVL234:
 175:Core/Src/ssd1306.c ****     
 2033              		.loc 1 175 5 view .LVU467
 2034 00b4 FFF7FEFF 		bl	ssd1306_UpdateScreen
 2035              	.LVL235:
 178:Core/Src/ssd1306.c ****     SSD1306.CurrentY = 0;
 2036              		.loc 1 178 5 view .LVU468
 178:Core/Src/ssd1306.c ****     SSD1306.CurrentY = 0;
 2037              		.loc 1 178 22 is_stmt 0 view .LVU469
 2038 00b8 034B     		ldr	r3, .L140
 2039 00ba 0022     		movs	r2, #0
 2040 00bc 1A80     		strh	r2, [r3]	@ movhi
 179:Core/Src/ssd1306.c ****     
 2041              		.loc 1 179 5 is_stmt 1 view .LVU470
 179:Core/Src/ssd1306.c ****     
 2042              		.loc 1 179 22 is_stmt 0 view .LVU471
 2043 00be 5A80     		strh	r2, [r3, #2]	@ movhi
 181:Core/Src/ssd1306.c **** }
 2044              		.loc 1 181 5 is_stmt 1 view .LVU472
 181:Core/Src/ssd1306.c **** }
 2045              		.loc 1 181 25 is_stmt 0 view .LVU473
 2046 00c0 0122     		movs	r2, #1
 2047 00c2 1A71     		strb	r2, [r3, #4]
 182:Core/Src/ssd1306.c **** 
 2048              		.loc 1 182 1 view .LVU474
 2049 00c4 08BD     		pop	{r3, pc}
 2050              	.L141:
 2051 00c6 00BF     		.align	2
 2052              	.L140:
 2053 00c8 00000000 		.word	.LANCHOR1
 2054              		.cfi_endproc
ARM GAS  /tmp/ccshOR3o.s 			page 51


 2055              	.LFE70:
 2057              		.section	.text.ssd1306_GetDisplayOn,"ax",%progbits
 2058              		.align	1
 2059              		.global	ssd1306_GetDisplayOn
 2060              		.syntax unified
 2061              		.thumb
 2062              		.thumb_func
 2064              	ssd1306_GetDisplayOn:
 2065              	.LFB87:
 497:Core/Src/ssd1306.c **** 
 498:Core/Src/ssd1306.c **** uint8_t ssd1306_GetDisplayOn() {
 2066              		.loc 1 498 32 is_stmt 1 view -0
 2067              		.cfi_startproc
 2068              		@ args = 0, pretend = 0, frame = 0
 2069              		@ frame_needed = 0, uses_anonymous_args = 0
 2070              		@ link register save eliminated.
 499:Core/Src/ssd1306.c ****     return SSD1306.DisplayOn;
 2071              		.loc 1 499 5 view .LVU476
 500:Core/Src/ssd1306.c **** }
 2072              		.loc 1 500 1 is_stmt 0 view .LVU477
 2073 0000 014B     		ldr	r3, .L143
 2074 0002 5879     		ldrb	r0, [r3, #5]	@ zero_extendqisi2
 2075 0004 7047     		bx	lr
 2076              	.L144:
 2077 0006 00BF     		.align	2
 2078              	.L143:
 2079 0008 00000000 		.word	.LANCHOR1
 2080              		.cfi_endproc
 2081              	.LFE87:
 2083              		.section	.bss.SSD1306,"aw",%nobits
 2084              		.align	2
 2085              		.set	.LANCHOR1,. + 0
 2088              	SSD1306:
 2089 0000 00000000 		.space	6
 2089      0000
 2090              		.section	.bss.SSD1306_Buffer,"aw",%nobits
 2091              		.align	2
 2092              		.set	.LANCHOR0,. + 0
 2095              	SSD1306_Buffer:
 2096 0000 00000000 		.space	1024
 2096      00000000 
 2096      00000000 
 2096      00000000 
 2096      00000000 
 2097              		.text
 2098              	.Letext0:
 2099              		.file 2 "/home/seradya/toolchains/gcc-arm-none-eabi-10.3-2021.10/lib/gcc/arm-none-eabi/10.3.1/incl
 2100              		.file 3 "/home/seradya/toolchains/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_de
 2101              		.file 4 "/home/seradya/toolchains/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint
 2102              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 2103              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 2104              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 2105              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 2106              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_spi.h"
 2107              		.file 10 "Core/Inc/ssd1306_fonts.h"
 2108              		.file 11 "Core/Inc/ssd1306.h"
 2109              		.file 12 "/home/seradya/toolchains/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/math.h"
ARM GAS  /tmp/ccshOR3o.s 			page 52


 2110              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 2111              		.file 14 "<built-in>"
ARM GAS  /tmp/ccshOR3o.s 			page 53


DEFINED SYMBOLS
                            *ABS*:0000000000000000 ssd1306.c
     /tmp/ccshOR3o.s:22     .text.ssd1306_DegToRad:0000000000000000 $t
     /tmp/ccshOR3o.s:27     .text.ssd1306_DegToRad:0000000000000000 ssd1306_DegToRad
     /tmp/ccshOR3o.s:62     .text.ssd1306_DegToRad:0000000000000020 $d
     /tmp/ccshOR3o.s:69     .text.ssd1306_NormalizeTo0_360:0000000000000000 $t
     /tmp/ccshOR3o.s:74     .text.ssd1306_NormalizeTo0_360:0000000000000000 ssd1306_NormalizeTo0_360
     /tmp/ccshOR3o.s:108    .text.ssd1306_Reset:0000000000000000 $t
     /tmp/ccshOR3o.s:114    .text.ssd1306_Reset:0000000000000000 ssd1306_Reset
     /tmp/ccshOR3o.s:157    .text.ssd1306_Reset:0000000000000038 $d
     /tmp/ccshOR3o.s:162    .text.ssd1306_WriteCommand:0000000000000000 $t
     /tmp/ccshOR3o.s:168    .text.ssd1306_WriteCommand:0000000000000000 ssd1306_WriteCommand
     /tmp/ccshOR3o.s:222    .text.ssd1306_WriteCommand:0000000000000044 $d
     /tmp/ccshOR3o.s:228    .text.ssd1306_WriteData:0000000000000000 $t
     /tmp/ccshOR3o.s:234    .text.ssd1306_WriteData:0000000000000000 ssd1306_WriteData
     /tmp/ccshOR3o.s:288    .text.ssd1306_WriteData:000000000000003c $d
     /tmp/ccshOR3o.s:294    .text.ssd1306_WriteData_DMA:0000000000000000 $t
     /tmp/ccshOR3o.s:300    .text.ssd1306_WriteData_DMA:0000000000000000 ssd1306_WriteData_DMA
     /tmp/ccshOR3o.s:347    .text.ssd1306_WriteData_DMA:000000000000002c $d
     /tmp/ccshOR3o.s:353    .text.ssd1306_FillBuffer:0000000000000000 $t
     /tmp/ccshOR3o.s:359    .text.ssd1306_FillBuffer:0000000000000000 ssd1306_FillBuffer
     /tmp/ccshOR3o.s:405    .text.ssd1306_FillBuffer:000000000000001c $d
     /tmp/ccshOR3o.s:410    .text.ssd1306_Fill:0000000000000000 $t
     /tmp/ccshOR3o.s:416    .text.ssd1306_Fill:0000000000000000 ssd1306_Fill
     /tmp/ccshOR3o.s:459    .text.ssd1306_Fill:000000000000001c $d
     /tmp/ccshOR3o.s:464    .text.ssd1306_UpdateScreen:0000000000000000 $t
     /tmp/ccshOR3o.s:470    .text.ssd1306_UpdateScreen:0000000000000000 ssd1306_UpdateScreen
     /tmp/ccshOR3o.s:503    .text.ssd1306_UpdateScreen:0000000000000020 $d
     /tmp/ccshOR3o.s:508    .text.ssd1306_DrawPixel:0000000000000000 $t
     /tmp/ccshOR3o.s:514    .text.ssd1306_DrawPixel:0000000000000000 ssd1306_DrawPixel
     /tmp/ccshOR3o.s:578    .text.ssd1306_DrawPixel:0000000000000040 $d
     /tmp/ccshOR3o.s:583    .text.ssd1306_WriteChar:0000000000000000 $t
     /tmp/ccshOR3o.s:589    .text.ssd1306_WriteChar:0000000000000000 ssd1306_WriteChar
     /tmp/ccshOR3o.s:759    .text.ssd1306_WriteChar:00000000000000ac $d
     /tmp/ccshOR3o.s:764    .text.ssd1306_WriteString:0000000000000000 $t
     /tmp/ccshOR3o.s:770    .text.ssd1306_WriteString:0000000000000000 ssd1306_WriteString
     /tmp/ccshOR3o.s:833    .text.ssd1306_SetCursor:0000000000000000 $t
     /tmp/ccshOR3o.s:839    .text.ssd1306_SetCursor:0000000000000000 ssd1306_SetCursor
     /tmp/ccshOR3o.s:859    .text.ssd1306_SetCursor:0000000000000008 $d
     /tmp/ccshOR3o.s:864    .text.ssd1306_Line:0000000000000000 $t
     /tmp/ccshOR3o.s:870    .text.ssd1306_Line:0000000000000000 ssd1306_Line
     /tmp/ccshOR3o.s:1038   .text.ssd1306_Polyline:0000000000000000 $t
     /tmp/ccshOR3o.s:1044   .text.ssd1306_Polyline:0000000000000000 ssd1306_Polyline
     /tmp/ccshOR3o.s:1135   .text.ssd1306_DrawArc:0000000000000000 $t
     /tmp/ccshOR3o.s:1141   .text.ssd1306_DrawArc:0000000000000000 ssd1306_DrawArc
     /tmp/ccshOR3o.s:1391   .text.ssd1306_DrawArc:0000000000000138 $d
     /tmp/ccshOR3o.s:1397   .text.ssd1306_DrawCircle:0000000000000000 $t
     /tmp/ccshOR3o.s:1403   .text.ssd1306_DrawCircle:0000000000000000 ssd1306_DrawCircle
     /tmp/ccshOR3o.s:1570   .text.ssd1306_DrawRectangle:0000000000000000 $t
     /tmp/ccshOR3o.s:1576   .text.ssd1306_DrawRectangle:0000000000000000 ssd1306_DrawRectangle
     /tmp/ccshOR3o.s:1644   .text.ssd1306_DrawBitmap:0000000000000000 $t
     /tmp/ccshOR3o.s:1650   .text.ssd1306_DrawBitmap:0000000000000000 ssd1306_DrawBitmap
     /tmp/ccshOR3o.s:1799   .text.ssd1306_SetContrast:0000000000000000 $t
     /tmp/ccshOR3o.s:1805   .text.ssd1306_SetContrast:0000000000000000 ssd1306_SetContrast
     /tmp/ccshOR3o.s:1837   .text.ssd1306_SetDisplayOn:0000000000000000 $t
     /tmp/ccshOR3o.s:1843   .text.ssd1306_SetDisplayOn:0000000000000000 ssd1306_SetDisplayOn
     /tmp/ccshOR3o.s:1892   .text.ssd1306_SetDisplayOn:000000000000001c $d
ARM GAS  /tmp/ccshOR3o.s 			page 54


     /tmp/ccshOR3o.s:1897   .text.ssd1306_Init:0000000000000000 $t
     /tmp/ccshOR3o.s:1903   .text.ssd1306_Init:0000000000000000 ssd1306_Init
     /tmp/ccshOR3o.s:2053   .text.ssd1306_Init:00000000000000c8 $d
     /tmp/ccshOR3o.s:2058   .text.ssd1306_GetDisplayOn:0000000000000000 $t
     /tmp/ccshOR3o.s:2064   .text.ssd1306_GetDisplayOn:0000000000000000 ssd1306_GetDisplayOn
     /tmp/ccshOR3o.s:2079   .text.ssd1306_GetDisplayOn:0000000000000008 $d
     /tmp/ccshOR3o.s:2084   .bss.SSD1306:0000000000000000 $d
     /tmp/ccshOR3o.s:2088   .bss.SSD1306:0000000000000000 SSD1306
     /tmp/ccshOR3o.s:2091   .bss.SSD1306_Buffer:0000000000000000 $d
     /tmp/ccshOR3o.s:2095   .bss.SSD1306_Buffer:0000000000000000 SSD1306_Buffer

UNDEFINED SYMBOLS
__aeabi_f2d
__aeabi_dmul
__aeabi_ddiv
__aeabi_d2f
HAL_GPIO_WritePin
HAL_Delay
HAL_SPI_Transmit
hspi2
HAL_SPI_Transmit_DMA
memcpy
__aeabi_ui2f
__aeabi_fdiv
__aeabi_fmul
__aeabi_i2d
__aeabi_d2iz
sin
cos
