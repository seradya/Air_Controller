ARM GAS  /tmp/ccvWmsA9.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SystemClock_Config,"ax",%progbits
  18              		.align	1
  19              		.global	SystemClock_Config
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	SystemClock_Config:
  25              	.LFB69:
  26              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   test
  19:Core/Src/main.c ****   */
  20:Core/Src/main.c **** /* USER CODE END Header */
  21:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/main.c **** #include "main.h"
  23:Core/Src/main.c **** #include "dma.h"
  24:Core/Src/main.c **** #include "spi.h"
  25:Core/Src/main.c **** #include "tim.h"
  26:Core/Src/main.c **** #include "gpio.h"
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  30:Core/Src/main.c **** #include "encoder.h"
  31:Core/Src/main.c **** #include "ssd1306.h"
  32:Core/Src/main.c **** /* USER CODE END Includes */
ARM GAS  /tmp/ccvWmsA9.s 			page 2


  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* USER CODE END PTD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PD */
  41:Core/Src/main.c **** /* USER CODE END PD */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  44:Core/Src/main.c **** /* USER CODE BEGIN PM */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE END PM */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE BEGIN PV */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** uint8_t buf1[5] = {0};
  53:Core/Src/main.c **** uint32_t pressure[4] = {0};
  54:Core/Src/main.c **** uint8_t sound_time = 0;
  55:Core/Src/main.c **** uint8_t short_press = 0;
  56:Core/Src/main.c **** uint8_t long_press = 0;
  57:Core/Src/main.c **** /* USER CODE END PV */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  60:Core/Src/main.c **** void SystemClock_Config(void);
  61:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* USER CODE END PFP */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  66:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /* USER CODE END 0 */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /**
  71:Core/Src/main.c ****   * @brief  The application entry point.
  72:Core/Src/main.c ****   * @retval int
  73:Core/Src/main.c ****   */
  74:Core/Src/main.c **** int main(void)
  75:Core/Src/main.c **** {
  76:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  77:Core/Src/main.c ****   uint8_t retr_cnt = 0, dt;
  78:Core/Src/main.c ****   extern uint16_t i, retr_cnt_full;
  79:Core/Src/main.c ****   /* USER CODE END 1 */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  84:Core/Src/main.c ****   HAL_Init();
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* USER CODE END Init */
  89:Core/Src/main.c **** 
ARM GAS  /tmp/ccvWmsA9.s 			page 3


  90:Core/Src/main.c ****   /* Configure the system clock */
  91:Core/Src/main.c ****   SystemClock_Config();
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* USER CODE END SysInit */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* Initialize all configured peripherals */
  98:Core/Src/main.c ****   MX_GPIO_Init();
  99:Core/Src/main.c ****   MX_DMA_Init();
 100:Core/Src/main.c ****   MX_SPI2_Init();
 101:Core/Src/main.c ****   MX_SPI1_Init();
 102:Core/Src/main.c ****   MX_TIM1_Init();
 103:Core/Src/main.c ****   MX_TIM3_Init();
 104:Core/Src/main.c ****   MX_TIM2_Init();
 105:Core/Src/main.c ****   MX_TIM4_Init();
 106:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   Display_Init();
 109:Core/Src/main.c ****   Encoder_Init();
 110:Core/Src/main.c ****   NRF24_ini();
 111:Core/Src/main.c **** 
 112:Core/Src/main.c **** 
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****   /* USER CODE END 2 */
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   /* Infinite loop */
 117:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   while (1)
 120:Core/Src/main.c ****   {
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****     Main_Screen();
 123:Core/Src/main.c ****     HAL_Delay(1000);
 124:Core/Src/main.c ****     NRF24L01_Send(buf1);
 125:Core/Src/main.c ****     retr_cnt = dt & 0xF;
 126:Core/Src/main.c ****     i++;
 127:Core/Src/main.c ****     retr_cnt_full += pressure[2];
 128:Core/Src/main.c ****     if (i >= 999)
 129:Core/Src/main.c ****       i = 1;
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****     /* USER CODE END WHILE */
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 134:Core/Src/main.c ****   }
 135:Core/Src/main.c ****   /* USER CODE END 3 */
 136:Core/Src/main.c **** }
 137:Core/Src/main.c **** 
 138:Core/Src/main.c **** /**
 139:Core/Src/main.c ****   * @brief System Clock Configuration
 140:Core/Src/main.c ****   * @retval None
 141:Core/Src/main.c ****   */
 142:Core/Src/main.c **** void SystemClock_Config(void)
 143:Core/Src/main.c **** {
  27              		.loc 1 143 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 64
ARM GAS  /tmp/ccvWmsA9.s 			page 4


  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 30B5     		push	{r4, r5, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 12
  34              		.cfi_offset 4, -12
  35              		.cfi_offset 5, -8
  36              		.cfi_offset 14, -4
  37 0002 91B0     		sub	sp, sp, #68
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 80
 144:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  40              		.loc 1 144 3 view .LVU1
  41              		.loc 1 144 22 is_stmt 0 view .LVU2
  42 0004 2822     		movs	r2, #40
  43 0006 0021     		movs	r1, #0
  44 0008 06A8     		add	r0, sp, #24
  45 000a FFF7FEFF 		bl	memset
  46              	.LVL0:
 145:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  47              		.loc 1 145 3 is_stmt 1 view .LVU3
  48              		.loc 1 145 22 is_stmt 0 view .LVU4
  49 000e 0024     		movs	r4, #0
  50 0010 0194     		str	r4, [sp, #4]
  51 0012 0294     		str	r4, [sp, #8]
  52 0014 0394     		str	r4, [sp, #12]
  53 0016 0494     		str	r4, [sp, #16]
  54 0018 0594     		str	r4, [sp, #20]
 146:Core/Src/main.c **** 
 147:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 148:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 149:Core/Src/main.c ****   */
 150:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
  55              		.loc 1 150 3 is_stmt 1 view .LVU5
  56              		.loc 1 150 36 is_stmt 0 view .LVU6
  57 001a 0122     		movs	r2, #1
  58 001c 0692     		str	r2, [sp, #24]
 151:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  59              		.loc 1 151 3 is_stmt 1 view .LVU7
  60              		.loc 1 151 30 is_stmt 0 view .LVU8
  61 001e 4FF48033 		mov	r3, #65536
  62 0022 0793     		str	r3, [sp, #28]
 152:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
  63              		.loc 1 152 3 is_stmt 1 view .LVU9
 153:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  64              		.loc 1 153 3 view .LVU10
  65              		.loc 1 153 30 is_stmt 0 view .LVU11
  66 0024 0A92     		str	r2, [sp, #40]
 154:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  67              		.loc 1 154 3 is_stmt 1 view .LVU12
  68              		.loc 1 154 34 is_stmt 0 view .LVU13
  69 0026 0225     		movs	r5, #2
  70 0028 0D95     		str	r5, [sp, #52]
 155:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  71              		.loc 1 155 3 is_stmt 1 view .LVU14
  72              		.loc 1 155 35 is_stmt 0 view .LVU15
  73 002a 0E93     		str	r3, [sp, #56]
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL4;
ARM GAS  /tmp/ccvWmsA9.s 			page 5


  74              		.loc 1 156 3 is_stmt 1 view .LVU16
  75              		.loc 1 156 32 is_stmt 0 view .LVU17
  76 002c 4FF40023 		mov	r3, #524288
  77 0030 0F93     		str	r3, [sp, #60]
 157:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  78              		.loc 1 157 3 is_stmt 1 view .LVU18
  79              		.loc 1 157 7 is_stmt 0 view .LVU19
  80 0032 06A8     		add	r0, sp, #24
  81 0034 FFF7FEFF 		bl	HAL_RCC_OscConfig
  82              	.LVL1:
 158:Core/Src/main.c ****   {
 159:Core/Src/main.c ****     Error_Handler();
 160:Core/Src/main.c ****   }
 161:Core/Src/main.c **** 
 162:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 163:Core/Src/main.c ****   */
 164:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
  83              		.loc 1 164 3 is_stmt 1 view .LVU20
  84              		.loc 1 164 31 is_stmt 0 view .LVU21
  85 0038 0F23     		movs	r3, #15
  86 003a 0193     		str	r3, [sp, #4]
 165:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 166:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
  87              		.loc 1 166 3 is_stmt 1 view .LVU22
  88              		.loc 1 166 34 is_stmt 0 view .LVU23
  89 003c 0295     		str	r5, [sp, #8]
 167:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  90              		.loc 1 167 3 is_stmt 1 view .LVU24
  91              		.loc 1 167 35 is_stmt 0 view .LVU25
  92 003e 0394     		str	r4, [sp, #12]
 168:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
  93              		.loc 1 168 3 is_stmt 1 view .LVU26
  94              		.loc 1 168 36 is_stmt 0 view .LVU27
  95 0040 4FF48063 		mov	r3, #1024
  96 0044 0493     		str	r3, [sp, #16]
 169:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
  97              		.loc 1 169 3 is_stmt 1 view .LVU28
  98              		.loc 1 169 36 is_stmt 0 view .LVU29
  99 0046 0594     		str	r4, [sp, #20]
 170:Core/Src/main.c **** 
 171:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 100              		.loc 1 171 3 is_stmt 1 view .LVU30
 101              		.loc 1 171 7 is_stmt 0 view .LVU31
 102 0048 2946     		mov	r1, r5
 103 004a 01A8     		add	r0, sp, #4
 104 004c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 105              	.LVL2:
 172:Core/Src/main.c ****   {
 173:Core/Src/main.c ****     Error_Handler();
 174:Core/Src/main.c ****   }
 175:Core/Src/main.c **** }
 106              		.loc 1 175 1 view .LVU32
 107 0050 11B0     		add	sp, sp, #68
 108              	.LCFI2:
 109              		.cfi_def_cfa_offset 12
 110              		@ sp needed
 111 0052 30BD     		pop	{r4, r5, pc}
ARM GAS  /tmp/ccvWmsA9.s 			page 6


 112              		.cfi_endproc
 113              	.LFE69:
 115              		.section	.text.main,"ax",%progbits
 116              		.align	1
 117              		.global	main
 118              		.syntax unified
 119              		.thumb
 120              		.thumb_func
 122              	main:
 123              	.LFB68:
  75:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 124              		.loc 1 75 1 is_stmt 1 view -0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 0
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128 0000 08B5     		push	{r3, lr}
 129              	.LCFI3:
 130              		.cfi_def_cfa_offset 8
 131              		.cfi_offset 3, -8
 132              		.cfi_offset 14, -4
  77:Core/Src/main.c ****   extern uint16_t i, retr_cnt_full;
 133              		.loc 1 77 3 view .LVU34
 134              	.LVL3:
  78:Core/Src/main.c ****   /* USER CODE END 1 */
 135              		.loc 1 78 3 view .LVU35
  84:Core/Src/main.c **** 
 136              		.loc 1 84 3 view .LVU36
 137 0002 FFF7FEFF 		bl	HAL_Init
 138              	.LVL4:
  91:Core/Src/main.c **** 
 139              		.loc 1 91 3 view .LVU37
 140 0006 FFF7FEFF 		bl	SystemClock_Config
 141              	.LVL5:
  98:Core/Src/main.c ****   MX_DMA_Init();
 142              		.loc 1 98 3 view .LVU38
 143 000a FFF7FEFF 		bl	MX_GPIO_Init
 144              	.LVL6:
  99:Core/Src/main.c ****   MX_SPI2_Init();
 145              		.loc 1 99 3 view .LVU39
 146 000e FFF7FEFF 		bl	MX_DMA_Init
 147              	.LVL7:
 100:Core/Src/main.c ****   MX_SPI1_Init();
 148              		.loc 1 100 3 view .LVU40
 149 0012 FFF7FEFF 		bl	MX_SPI2_Init
 150              	.LVL8:
 101:Core/Src/main.c ****   MX_TIM1_Init();
 151              		.loc 1 101 3 view .LVU41
 152 0016 FFF7FEFF 		bl	MX_SPI1_Init
 153              	.LVL9:
 102:Core/Src/main.c ****   MX_TIM3_Init();
 154              		.loc 1 102 3 view .LVU42
 155 001a FFF7FEFF 		bl	MX_TIM1_Init
 156              	.LVL10:
 103:Core/Src/main.c ****   MX_TIM2_Init();
 157              		.loc 1 103 3 view .LVU43
 158 001e FFF7FEFF 		bl	MX_TIM3_Init
 159              	.LVL11:
ARM GAS  /tmp/ccvWmsA9.s 			page 7


 104:Core/Src/main.c ****   MX_TIM4_Init();
 160              		.loc 1 104 3 view .LVU44
 161 0022 FFF7FEFF 		bl	MX_TIM2_Init
 162              	.LVL12:
 105:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 163              		.loc 1 105 3 view .LVU45
 164 0026 FFF7FEFF 		bl	MX_TIM4_Init
 165              	.LVL13:
 108:Core/Src/main.c ****   Encoder_Init();
 166              		.loc 1 108 3 view .LVU46
 167 002a FFF7FEFF 		bl	Display_Init
 168              	.LVL14:
 109:Core/Src/main.c ****   NRF24_ini();
 169              		.loc 1 109 3 view .LVU47
 170 002e FFF7FEFF 		bl	Encoder_Init
 171              	.LVL15:
 110:Core/Src/main.c **** 
 172              		.loc 1 110 3 view .LVU48
 173 0032 FFF7FEFF 		bl	NRF24_ini
 174              	.LVL16:
 175 0036 02E0     		b	.L4
 176              	.LVL17:
 177              	.L7:
 129:Core/Src/main.c **** 
 178              		.loc 1 129 7 view .LVU49
 129:Core/Src/main.c **** 
 179              		.loc 1 129 9 is_stmt 0 view .LVU50
 180 0038 0D4B     		ldr	r3, .L8
 181 003a 0122     		movs	r2, #1
 182 003c 1A80     		strh	r2, [r3]	@ movhi
 183              	.L4:
 119:Core/Src/main.c ****   {
 184              		.loc 1 119 3 is_stmt 1 view .LVU51
 122:Core/Src/main.c ****     HAL_Delay(1000);
 185              		.loc 1 122 5 view .LVU52
 186 003e FFF7FEFF 		bl	Main_Screen
 187              	.LVL18:
 123:Core/Src/main.c ****     NRF24L01_Send(buf1);
 188              		.loc 1 123 5 view .LVU53
 189 0042 4FF47A70 		mov	r0, #1000
 190 0046 FFF7FEFF 		bl	HAL_Delay
 191              	.LVL19:
 124:Core/Src/main.c ****     retr_cnt = dt & 0xF;
 192              		.loc 1 124 5 view .LVU54
 193 004a 0A48     		ldr	r0, .L8+4
 194 004c FFF7FEFF 		bl	NRF24L01_Send
 195              	.LVL20:
 125:Core/Src/main.c ****     i++;
 196              		.loc 1 125 5 view .LVU55
 126:Core/Src/main.c ****     retr_cnt_full += pressure[2];
 197              		.loc 1 126 5 view .LVU56
 126:Core/Src/main.c ****     retr_cnt_full += pressure[2];
 198              		.loc 1 126 6 is_stmt 0 view .LVU57
 199 0050 074A     		ldr	r2, .L8
 200 0052 1388     		ldrh	r3, [r2]
 201 0054 0133     		adds	r3, r3, #1
 202 0056 9BB2     		uxth	r3, r3
ARM GAS  /tmp/ccvWmsA9.s 			page 8


 203 0058 1380     		strh	r3, [r2]	@ movhi
 127:Core/Src/main.c ****     if (i >= 999)
 204              		.loc 1 127 5 is_stmt 1 view .LVU58
 127:Core/Src/main.c ****     if (i >= 999)
 205              		.loc 1 127 30 is_stmt 0 view .LVU59
 206 005a 074A     		ldr	r2, .L8+8
 207 005c 9268     		ldr	r2, [r2, #8]
 127:Core/Src/main.c ****     if (i >= 999)
 208              		.loc 1 127 19 view .LVU60
 209 005e 0749     		ldr	r1, .L8+12
 210 0060 0888     		ldrh	r0, [r1]
 211 0062 0244     		add	r2, r2, r0
 212 0064 0A80     		strh	r2, [r1]	@ movhi
 128:Core/Src/main.c ****       i = 1;
 213              		.loc 1 128 5 is_stmt 1 view .LVU61
 128:Core/Src/main.c ****       i = 1;
 214              		.loc 1 128 8 is_stmt 0 view .LVU62
 215 0066 40F2E632 		movw	r2, #998
 216 006a 9342     		cmp	r3, r2
 217 006c E7D9     		bls	.L4
 218 006e E3E7     		b	.L7
 219              	.L9:
 220              		.align	2
 221              	.L8:
 222 0070 00000000 		.word	i
 223 0074 00000000 		.word	.LANCHOR0
 224 0078 00000000 		.word	.LANCHOR1
 225 007c 00000000 		.word	retr_cnt_full
 226              		.cfi_endproc
 227              	.LFE68:
 229              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 230              		.align	1
 231              		.global	HAL_GPIO_EXTI_Callback
 232              		.syntax unified
 233              		.thumb
 234              		.thumb_func
 236              	HAL_GPIO_EXTI_Callback:
 237              	.LVL21:
 238              	.LFB70:
 176:Core/Src/main.c **** 
 177:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 178:Core/Src/main.c **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
 179:Core/Src/main.c **** {
 239              		.loc 1 179 1 is_stmt 1 view -0
 240              		.cfi_startproc
 241              		@ args = 0, pretend = 0, frame = 0
 242              		@ frame_needed = 0, uses_anonymous_args = 0
 243              		.loc 1 179 1 is_stmt 0 view .LVU64
 244 0000 08B5     		push	{r3, lr}
 245              	.LCFI4:
 246              		.cfi_def_cfa_offset 8
 247              		.cfi_offset 3, -8
 248              		.cfi_offset 14, -4
 180:Core/Src/main.c **** 
 181:Core/Src/main.c ****   if (GPIO_Pin == GPIO_PIN_2)
 249              		.loc 1 181 3 is_stmt 1 view .LVU65
 250              		.loc 1 181 6 is_stmt 0 view .LVU66
ARM GAS  /tmp/ccvWmsA9.s 			page 9


 251 0002 0428     		cmp	r0, #4
 252 0004 02D0     		beq	.L15
 182:Core/Src/main.c ****   {
 183:Core/Src/main.c ****     NRF24L01_IT();
 184:Core/Src/main.c ****   }
 185:Core/Src/main.c **** 
 186:Core/Src/main.c ****   else if (GPIO_Pin == GPIO_PIN_6)
 253              		.loc 1 186 8 is_stmt 1 view .LVU67
 254              		.loc 1 186 11 is_stmt 0 view .LVU68
 255 0006 4028     		cmp	r0, #64
 256 0008 03D0     		beq	.L16
 257              	.LVL22:
 258              	.L10:
 187:Core/Src/main.c ****   {
 188:Core/Src/main.c ****     
 189:Core/Src/main.c ****     
 190:Core/Src/main.c ****     if(!(GPIOB -> IDR & GPIO_PIN_6))
 191:Core/Src/main.c ****     {
 192:Core/Src/main.c ****       HAL_TIM_Base_Start_IT(&htim4);
 193:Core/Src/main.c ****       HAL_TIM_Base_Start_IT(&htim2);
 194:Core/Src/main.c **** 
 195:Core/Src/main.c ****       HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_3);
 196:Core/Src/main.c ****       TIM1->CCER |= 0x400;
 197:Core/Src/main.c ****       sound_time = 1;
 198:Core/Src/main.c ****     }
 199:Core/Src/main.c **** 
 200:Core/Src/main.c ****     else 
 201:Core/Src/main.c ****     {
 202:Core/Src/main.c ****       HAL_TIM_Base_Stop_IT(&htim4);
 203:Core/Src/main.c ****       TIM4->CNT = 0;
 204:Core/Src/main.c ****       short_press = 1;
 205:Core/Src/main.c ****     }
 206:Core/Src/main.c ****   }
 207:Core/Src/main.c **** }
 259              		.loc 1 207 1 view .LVU69
 260 000a 08BD     		pop	{r3, pc}
 261              	.LVL23:
 262              	.L15:
 183:Core/Src/main.c ****   }
 263              		.loc 1 183 5 is_stmt 1 view .LVU70
 264 000c FFF7FEFF 		bl	NRF24L01_IT
 265              	.LVL24:
 183:Core/Src/main.c ****   }
 266              		.loc 1 183 5 is_stmt 0 view .LVU71
 267 0010 FBE7     		b	.L10
 268              	.LVL25:
 269              	.L16:
 190:Core/Src/main.c ****     {
 270              		.loc 1 190 5 is_stmt 1 view .LVU72
 190:Core/Src/main.c ****     {
 271              		.loc 1 190 16 is_stmt 0 view .LVU73
 272 0012 114B     		ldr	r3, .L17
 273 0014 9B68     		ldr	r3, [r3, #8]
 190:Core/Src/main.c ****     {
 274              		.loc 1 190 7 view .LVU74
 275 0016 13F0400F 		tst	r3, #64
 276 001a 12D1     		bne	.L13
ARM GAS  /tmp/ccvWmsA9.s 			page 10


 192:Core/Src/main.c ****       HAL_TIM_Base_Start_IT(&htim2);
 277              		.loc 1 192 7 is_stmt 1 view .LVU75
 278 001c 0F48     		ldr	r0, .L17+4
 279              	.LVL26:
 192:Core/Src/main.c ****       HAL_TIM_Base_Start_IT(&htim2);
 280              		.loc 1 192 7 is_stmt 0 view .LVU76
 281 001e FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 282              	.LVL27:
 193:Core/Src/main.c **** 
 283              		.loc 1 193 7 is_stmt 1 view .LVU77
 284 0022 0F48     		ldr	r0, .L17+8
 285 0024 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 286              	.LVL28:
 195:Core/Src/main.c ****       TIM1->CCER |= 0x400;
 287              		.loc 1 195 7 view .LVU78
 288 0028 0821     		movs	r1, #8
 289 002a 0E48     		ldr	r0, .L17+12
 290 002c FFF7FEFF 		bl	HAL_TIM_PWM_Start
 291              	.LVL29:
 196:Core/Src/main.c ****       sound_time = 1;
 292              		.loc 1 196 7 view .LVU79
 196:Core/Src/main.c ****       sound_time = 1;
 293              		.loc 1 196 18 is_stmt 0 view .LVU80
 294 0030 0D4A     		ldr	r2, .L17+16
 295 0032 136A     		ldr	r3, [r2, #32]
 296 0034 43F48063 		orr	r3, r3, #1024
 297 0038 1362     		str	r3, [r2, #32]
 197:Core/Src/main.c ****     }
 298              		.loc 1 197 7 is_stmt 1 view .LVU81
 197:Core/Src/main.c ****     }
 299              		.loc 1 197 18 is_stmt 0 view .LVU82
 300 003a 0C4B     		ldr	r3, .L17+20
 301 003c 0122     		movs	r2, #1
 302 003e 1A70     		strb	r2, [r3]
 303 0040 E3E7     		b	.L10
 304              	.LVL30:
 305              	.L13:
 202:Core/Src/main.c ****       TIM4->CNT = 0;
 306              		.loc 1 202 7 is_stmt 1 view .LVU83
 307 0042 0648     		ldr	r0, .L17+4
 308              	.LVL31:
 202:Core/Src/main.c ****       TIM4->CNT = 0;
 309              		.loc 1 202 7 is_stmt 0 view .LVU84
 310 0044 FFF7FEFF 		bl	HAL_TIM_Base_Stop_IT
 311              	.LVL32:
 203:Core/Src/main.c ****       short_press = 1;
 312              		.loc 1 203 7 is_stmt 1 view .LVU85
 203:Core/Src/main.c ****       short_press = 1;
 313              		.loc 1 203 17 is_stmt 0 view .LVU86
 314 0048 094B     		ldr	r3, .L17+24
 315 004a 0022     		movs	r2, #0
 316 004c 5A62     		str	r2, [r3, #36]
 204:Core/Src/main.c ****     }
 317              		.loc 1 204 7 is_stmt 1 view .LVU87
 204:Core/Src/main.c ****     }
 318              		.loc 1 204 19 is_stmt 0 view .LVU88
 319 004e 094B     		ldr	r3, .L17+28
ARM GAS  /tmp/ccvWmsA9.s 			page 11


 320 0050 0122     		movs	r2, #1
 321 0052 1A70     		strb	r2, [r3]
 322              		.loc 1 207 1 view .LVU89
 323 0054 D9E7     		b	.L10
 324              	.L18:
 325 0056 00BF     		.align	2
 326              	.L17:
 327 0058 000C0140 		.word	1073810432
 328 005c 00000000 		.word	htim4
 329 0060 00000000 		.word	htim2
 330 0064 00000000 		.word	htim1
 331 0068 002C0140 		.word	1073818624
 332 006c 00000000 		.word	.LANCHOR2
 333 0070 00080040 		.word	1073743872
 334 0074 00000000 		.word	.LANCHOR3
 335              		.cfi_endproc
 336              	.LFE70:
 338              		.section	.text.HAL_SPI_TxCpltCallback,"ax",%progbits
 339              		.align	1
 340              		.global	HAL_SPI_TxCpltCallback
 341              		.syntax unified
 342              		.thumb
 343              		.thumb_func
 345              	HAL_SPI_TxCpltCallback:
 346              	.LVL33:
 347              	.LFB71:
 208:Core/Src/main.c **** 
 209:Core/Src/main.c **** void HAL_SPI_TxCpltCallback(SPI_HandleTypeDef *hspi)
 210:Core/Src/main.c **** {
 348              		.loc 1 210 1 is_stmt 1 view -0
 349              		.cfi_startproc
 350              		@ args = 0, pretend = 0, frame = 0
 351              		@ frame_needed = 0, uses_anonymous_args = 0
 352              		.loc 1 210 1 is_stmt 0 view .LVU91
 353 0000 08B5     		push	{r3, lr}
 354              	.LCFI5:
 355              		.cfi_def_cfa_offset 8
 356              		.cfi_offset 3, -8
 357              		.cfi_offset 14, -4
 211:Core/Src/main.c ****   if (hspi->Instance == SPI2)
 358              		.loc 1 211 3 is_stmt 1 view .LVU92
 359              		.loc 1 211 11 is_stmt 0 view .LVU93
 360 0002 0268     		ldr	r2, [r0]
 361              		.loc 1 211 6 view .LVU94
 362 0004 054B     		ldr	r3, .L23
 363 0006 9A42     		cmp	r2, r3
 364 0008 00D0     		beq	.L22
 365              	.LVL34:
 366              	.L19:
 212:Core/Src/main.c ****     HAL_GPIO_WritePin(SSD1306_CS_Port, SSD1306_CS_Pin, GPIO_PIN_SET);
 213:Core/Src/main.c **** }
 367              		.loc 1 213 1 view .LVU95
 368 000a 08BD     		pop	{r3, pc}
 369              	.LVL35:
 370              	.L22:
 212:Core/Src/main.c ****     HAL_GPIO_WritePin(SSD1306_CS_Port, SSD1306_CS_Pin, GPIO_PIN_SET);
 371              		.loc 1 212 5 is_stmt 1 view .LVU96
ARM GAS  /tmp/ccvWmsA9.s 			page 12


 372 000c 0122     		movs	r2, #1
 373 000e 4FF48071 		mov	r1, #256
 374 0012 0348     		ldr	r0, .L23+4
 375              	.LVL36:
 212:Core/Src/main.c ****     HAL_GPIO_WritePin(SSD1306_CS_Port, SSD1306_CS_Pin, GPIO_PIN_SET);
 376              		.loc 1 212 5 is_stmt 0 view .LVU97
 377 0014 FFF7FEFF 		bl	HAL_GPIO_WritePin
 378              	.LVL37:
 379              		.loc 1 213 1 view .LVU98
 380 0018 F7E7     		b	.L19
 381              	.L24:
 382 001a 00BF     		.align	2
 383              	.L23:
 384 001c 00380040 		.word	1073756160
 385 0020 000C0140 		.word	1073810432
 386              		.cfi_endproc
 387              	.LFE71:
 389              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 390              		.align	1
 391              		.global	HAL_TIM_PeriodElapsedCallback
 392              		.syntax unified
 393              		.thumb
 394              		.thumb_func
 396              	HAL_TIM_PeriodElapsedCallback:
 397              	.LVL38:
 398              	.LFB72:
 214:Core/Src/main.c **** 
 215:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 216:Core/Src/main.c **** {
 399              		.loc 1 216 1 is_stmt 1 view -0
 400              		.cfi_startproc
 401              		@ args = 0, pretend = 0, frame = 0
 402              		@ frame_needed = 0, uses_anonymous_args = 0
 403              		.loc 1 216 1 is_stmt 0 view .LVU100
 404 0000 08B5     		push	{r3, lr}
 405              	.LCFI6:
 406              		.cfi_def_cfa_offset 8
 407              		.cfi_offset 3, -8
 408              		.cfi_offset 14, -4
 217:Core/Src/main.c ****         if(htim->Instance == TIM2) //check if the interrupt comes from TIM2
 409              		.loc 1 217 9 is_stmt 1 view .LVU101
 410              		.loc 1 217 16 is_stmt 0 view .LVU102
 411 0002 0368     		ldr	r3, [r0]
 412              		.loc 1 217 11 view .LVU103
 413 0004 B3F1804F 		cmp	r3, #1073741824
 414 0008 03D0     		beq	.L30
 218:Core/Src/main.c ****         {
 219:Core/Src/main.c ****           //HAL_TIM_PWM_Stop(&htim1, TIM_CHANNEL_3);
 220:Core/Src/main.c ****           HAL_TIM_Base_Start_IT(&htim2);
 221:Core/Src/main.c ****           if(sound_time > 0)
 222:Core/Src/main.c ****           {
 223:Core/Src/main.c ****             sound_time--;
 224:Core/Src/main.c ****           }
 225:Core/Src/main.c ****           else
 226:Core/Src/main.c ****           {
 227:Core/Src/main.c ****             TIM1->CCER &= ~0x400;
 228:Core/Src/main.c ****             HAL_TIM_Base_Stop_IT(&htim2);
ARM GAS  /tmp/ccvWmsA9.s 			page 13


 229:Core/Src/main.c ****           }
 230:Core/Src/main.c ****         }
 231:Core/Src/main.c **** 
 232:Core/Src/main.c ****         else if(htim->Instance == TIM4) //check if the interrupt comes from TIM2
 415              		.loc 1 232 14 is_stmt 1 view .LVU104
 416              		.loc 1 232 16 is_stmt 0 view .LVU105
 417 000a 174A     		ldr	r2, .L32
 418 000c 9342     		cmp	r3, r2
 419 000e 13D0     		beq	.L31
 420              	.LVL39:
 421              	.L25:
 233:Core/Src/main.c ****         {
 234:Core/Src/main.c ****           //HAL_TIM_PWM_Stop(&htim1, TIM_CHANNEL_3);
 235:Core/Src/main.c ****           if(!(GPIOB -> IDR & GPIO_PIN_6))
 236:Core/Src/main.c ****           {
 237:Core/Src/main.c ****             long_press = 1;
 238:Core/Src/main.c ****             HAL_TIM_Base_Start_IT(&htim2);
 239:Core/Src/main.c ****             HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_3);
 240:Core/Src/main.c ****             TIM1->CCER |= 0x400;
 241:Core/Src/main.c ****             sound_time = 5;
 242:Core/Src/main.c ****           }
 243:Core/Src/main.c ****           
 244:Core/Src/main.c ****         }
 245:Core/Src/main.c **** }
 422              		.loc 1 245 1 view .LVU106
 423 0010 08BD     		pop	{r3, pc}
 424              	.LVL40:
 425              	.L30:
 220:Core/Src/main.c ****           if(sound_time > 0)
 426              		.loc 1 220 11 is_stmt 1 view .LVU107
 427 0012 1648     		ldr	r0, .L32+4
 428              	.LVL41:
 220:Core/Src/main.c ****           if(sound_time > 0)
 429              		.loc 1 220 11 is_stmt 0 view .LVU108
 430 0014 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 431              	.LVL42:
 221:Core/Src/main.c ****           {
 432              		.loc 1 221 11 is_stmt 1 view .LVU109
 221:Core/Src/main.c ****           {
 433              		.loc 1 221 25 is_stmt 0 view .LVU110
 434 0018 154B     		ldr	r3, .L32+8
 435 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 221:Core/Src/main.c ****           {
 436              		.loc 1 221 13 view .LVU111
 437 001c 1BB1     		cbz	r3, .L27
 223:Core/Src/main.c ****           }
 438              		.loc 1 223 13 is_stmt 1 view .LVU112
 223:Core/Src/main.c ****           }
 439              		.loc 1 223 23 is_stmt 0 view .LVU113
 440 001e 013B     		subs	r3, r3, #1
 441 0020 134A     		ldr	r2, .L32+8
 442 0022 1370     		strb	r3, [r2]
 443 0024 F4E7     		b	.L25
 444              	.L27:
 227:Core/Src/main.c ****             HAL_TIM_Base_Stop_IT(&htim2);
 445              		.loc 1 227 13 is_stmt 1 view .LVU114
 227:Core/Src/main.c ****             HAL_TIM_Base_Stop_IT(&htim2);
ARM GAS  /tmp/ccvWmsA9.s 			page 14


 446              		.loc 1 227 24 is_stmt 0 view .LVU115
 447 0026 134A     		ldr	r2, .L32+12
 448 0028 136A     		ldr	r3, [r2, #32]
 449 002a 23F48063 		bic	r3, r3, #1024
 450 002e 1362     		str	r3, [r2, #32]
 228:Core/Src/main.c ****           }
 451              		.loc 1 228 13 is_stmt 1 view .LVU116
 452 0030 0E48     		ldr	r0, .L32+4
 453 0032 FFF7FEFF 		bl	HAL_TIM_Base_Stop_IT
 454              	.LVL43:
 455 0036 EBE7     		b	.L25
 456              	.LVL44:
 457              	.L31:
 235:Core/Src/main.c ****           {
 458              		.loc 1 235 11 view .LVU117
 235:Core/Src/main.c ****           {
 459              		.loc 1 235 22 is_stmt 0 view .LVU118
 460 0038 0F4B     		ldr	r3, .L32+16
 461 003a 9B68     		ldr	r3, [r3, #8]
 235:Core/Src/main.c ****           {
 462              		.loc 1 235 13 view .LVU119
 463 003c 13F0400F 		tst	r3, #64
 464 0040 E6D1     		bne	.L25
 237:Core/Src/main.c ****             HAL_TIM_Base_Start_IT(&htim2);
 465              		.loc 1 237 13 is_stmt 1 view .LVU120
 237:Core/Src/main.c ****             HAL_TIM_Base_Start_IT(&htim2);
 466              		.loc 1 237 24 is_stmt 0 view .LVU121
 467 0042 0E4B     		ldr	r3, .L32+20
 468 0044 0122     		movs	r2, #1
 469 0046 1A70     		strb	r2, [r3]
 238:Core/Src/main.c ****             HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_3);
 470              		.loc 1 238 13 is_stmt 1 view .LVU122
 471 0048 0848     		ldr	r0, .L32+4
 472              	.LVL45:
 238:Core/Src/main.c ****             HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_3);
 473              		.loc 1 238 13 is_stmt 0 view .LVU123
 474 004a FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 475              	.LVL46:
 239:Core/Src/main.c ****             TIM1->CCER |= 0x400;
 476              		.loc 1 239 13 is_stmt 1 view .LVU124
 477 004e 0821     		movs	r1, #8
 478 0050 0B48     		ldr	r0, .L32+24
 479 0052 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 480              	.LVL47:
 240:Core/Src/main.c ****             sound_time = 5;
 481              		.loc 1 240 13 view .LVU125
 240:Core/Src/main.c ****             sound_time = 5;
 482              		.loc 1 240 24 is_stmt 0 view .LVU126
 483 0056 074A     		ldr	r2, .L32+12
 484 0058 136A     		ldr	r3, [r2, #32]
 485 005a 43F48063 		orr	r3, r3, #1024
 486 005e 1362     		str	r3, [r2, #32]
 241:Core/Src/main.c ****           }
 487              		.loc 1 241 13 is_stmt 1 view .LVU127
 241:Core/Src/main.c ****           }
 488              		.loc 1 241 24 is_stmt 0 view .LVU128
 489 0060 034B     		ldr	r3, .L32+8
ARM GAS  /tmp/ccvWmsA9.s 			page 15


 490 0062 0522     		movs	r2, #5
 491 0064 1A70     		strb	r2, [r3]
 492              		.loc 1 245 1 view .LVU129
 493 0066 D3E7     		b	.L25
 494              	.L33:
 495              		.align	2
 496              	.L32:
 497 0068 00080040 		.word	1073743872
 498 006c 00000000 		.word	htim2
 499 0070 00000000 		.word	.LANCHOR2
 500 0074 002C0140 		.word	1073818624
 501 0078 000C0140 		.word	1073810432
 502 007c 00000000 		.word	.LANCHOR4
 503 0080 00000000 		.word	htim1
 504              		.cfi_endproc
 505              	.LFE72:
 507              		.section	.text.Error_Handler,"ax",%progbits
 508              		.align	1
 509              		.global	Error_Handler
 510              		.syntax unified
 511              		.thumb
 512              		.thumb_func
 514              	Error_Handler:
 515              	.LFB73:
 246:Core/Src/main.c **** 
 247:Core/Src/main.c **** /* USER CODE END 4 */
 248:Core/Src/main.c **** 
 249:Core/Src/main.c **** /**
 250:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 251:Core/Src/main.c ****   * @retval None
 252:Core/Src/main.c ****   */
 253:Core/Src/main.c **** void Error_Handler(void)
 254:Core/Src/main.c **** {
 516              		.loc 1 254 1 is_stmt 1 view -0
 517              		.cfi_startproc
 518              		@ args = 0, pretend = 0, frame = 0
 519              		@ frame_needed = 0, uses_anonymous_args = 0
 520              		@ link register save eliminated.
 255:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 256:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 257:Core/Src/main.c **** 
 258:Core/Src/main.c ****   /* USER CODE END Error_Handler_Debug */
 259:Core/Src/main.c **** }
 521              		.loc 1 259 1 view .LVU131
 522 0000 7047     		bx	lr
 523              		.cfi_endproc
 524              	.LFE73:
 526              		.global	long_press
 527              		.global	short_press
 528              		.global	sound_time
 529              		.global	pressure
 530              		.global	buf1
 531              		.section	.bss.buf1,"aw",%nobits
 532              		.align	2
 533              		.set	.LANCHOR0,. + 0
 536              	buf1:
 537 0000 00000000 		.space	5
ARM GAS  /tmp/ccvWmsA9.s 			page 16


 537      00
 538              		.section	.bss.long_press,"aw",%nobits
 539              		.set	.LANCHOR4,. + 0
 542              	long_press:
 543 0000 00       		.space	1
 544              		.section	.bss.pressure,"aw",%nobits
 545              		.align	2
 546              		.set	.LANCHOR1,. + 0
 549              	pressure:
 550 0000 00000000 		.space	16
 550      00000000 
 550      00000000 
 550      00000000 
 551              		.section	.bss.short_press,"aw",%nobits
 552              		.set	.LANCHOR3,. + 0
 555              	short_press:
 556 0000 00       		.space	1
 557              		.section	.bss.sound_time,"aw",%nobits
 558              		.set	.LANCHOR2,. + 0
 561              	sound_time:
 562 0000 00       		.space	1
 563              		.text
 564              	.Letext0:
 565              		.file 2 "/home/seradya/toolchains/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_de
 566              		.file 3 "/home/seradya/toolchains/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint
 567              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 568              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 569              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 570              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 571              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 572              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 573              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_spi.h"
 574              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 575              		.file 12 "Core/Inc/tim.h"
 576              		.file 13 "Core/Inc/encoder.h"
 577              		.file 14 "Core/Inc/NRF24.h"
 578              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 579              		.file 16 "Core/Inc/gpio.h"
 580              		.file 17 "Core/Inc/dma.h"
 581              		.file 18 "Core/Inc/spi.h"
 582              		.file 19 "Core/Inc/display.h"
 583              		.file 20 "<built-in>"
ARM GAS  /tmp/ccvWmsA9.s 			page 17


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccvWmsA9.s:18     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccvWmsA9.s:24     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccvWmsA9.s:116    .text.main:0000000000000000 $t
     /tmp/ccvWmsA9.s:122    .text.main:0000000000000000 main
     /tmp/ccvWmsA9.s:222    .text.main:0000000000000070 $d
     /tmp/ccvWmsA9.s:230    .text.HAL_GPIO_EXTI_Callback:0000000000000000 $t
     /tmp/ccvWmsA9.s:236    .text.HAL_GPIO_EXTI_Callback:0000000000000000 HAL_GPIO_EXTI_Callback
     /tmp/ccvWmsA9.s:327    .text.HAL_GPIO_EXTI_Callback:0000000000000058 $d
     /tmp/ccvWmsA9.s:339    .text.HAL_SPI_TxCpltCallback:0000000000000000 $t
     /tmp/ccvWmsA9.s:345    .text.HAL_SPI_TxCpltCallback:0000000000000000 HAL_SPI_TxCpltCallback
     /tmp/ccvWmsA9.s:384    .text.HAL_SPI_TxCpltCallback:000000000000001c $d
     /tmp/ccvWmsA9.s:390    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccvWmsA9.s:396    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccvWmsA9.s:497    .text.HAL_TIM_PeriodElapsedCallback:0000000000000068 $d
     /tmp/ccvWmsA9.s:508    .text.Error_Handler:0000000000000000 $t
     /tmp/ccvWmsA9.s:514    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccvWmsA9.s:542    .bss.long_press:0000000000000000 long_press
     /tmp/ccvWmsA9.s:555    .bss.short_press:0000000000000000 short_press
     /tmp/ccvWmsA9.s:561    .bss.sound_time:0000000000000000 sound_time
     /tmp/ccvWmsA9.s:549    .bss.pressure:0000000000000000 pressure
     /tmp/ccvWmsA9.s:536    .bss.buf1:0000000000000000 buf1
     /tmp/ccvWmsA9.s:532    .bss.buf1:0000000000000000 $d
     /tmp/ccvWmsA9.s:543    .bss.long_press:0000000000000000 $d
     /tmp/ccvWmsA9.s:545    .bss.pressure:0000000000000000 $d
     /tmp/ccvWmsA9.s:556    .bss.short_press:0000000000000000 $d
     /tmp/ccvWmsA9.s:562    .bss.sound_time:0000000000000000 $d

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_SPI2_Init
MX_SPI1_Init
MX_TIM1_Init
MX_TIM3_Init
MX_TIM2_Init
MX_TIM4_Init
Display_Init
Encoder_Init
NRF24_ini
Main_Screen
HAL_Delay
NRF24L01_Send
i
retr_cnt_full
NRF24L01_IT
HAL_TIM_Base_Start_IT
HAL_TIM_PWM_Start
HAL_TIM_Base_Stop_IT
htim4
htim2
htim1
ARM GAS  /tmp/ccvWmsA9.s 			page 18


HAL_GPIO_WritePin
