ARM GAS  /tmp/cc88AKhp.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f1xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	NMI_Handler:
  25              	.LFB68:
  26              		.file 1 "Core/Src/stm32f1xx_it.c"
   1:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f1xx_it.c **** /**
   3:Core/Src/stm32f1xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f1xx_it.c ****   * @file    stm32f1xx_it.c
   5:Core/Src/stm32f1xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f1xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f1xx_it.c ****   * @attention
   8:Core/Src/stm32f1xx_it.c ****   *
   9:Core/Src/stm32f1xx_it.c ****   * <h2><center>&copy; Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/stm32f1xx_it.c ****   * All rights reserved.</center></h2>
  11:Core/Src/stm32f1xx_it.c ****   *
  12:Core/Src/stm32f1xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/stm32f1xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/stm32f1xx_it.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/stm32f1xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/stm32f1xx_it.c ****   *
  17:Core/Src/stm32f1xx_it.c ****   ******************************************************************************
  18:Core/Src/stm32f1xx_it.c ****   */
  19:Core/Src/stm32f1xx_it.c **** /* USER CODE END Header */
  20:Core/Src/stm32f1xx_it.c **** 
  21:Core/Src/stm32f1xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/stm32f1xx_it.c **** #include "main.h"
  23:Core/Src/stm32f1xx_it.c **** #include "stm32f1xx_it.h"
  24:Core/Src/stm32f1xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/stm32f1xx_it.c **** /* USER CODE END Includes */
  27:Core/Src/stm32f1xx_it.c **** 
  28:Core/Src/stm32f1xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN TD */
  30:Core/Src/stm32f1xx_it.c **** 
  31:Core/Src/stm32f1xx_it.c **** /* USER CODE END TD */
  32:Core/Src/stm32f1xx_it.c **** 
ARM GAS  /tmp/cc88AKhp.s 			page 2


  33:Core/Src/stm32f1xx_it.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PD */
  35:Core/Src/stm32f1xx_it.c **** 
  36:Core/Src/stm32f1xx_it.c **** /* USER CODE END PD */
  37:Core/Src/stm32f1xx_it.c **** 
  38:Core/Src/stm32f1xx_it.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PM */
  40:Core/Src/stm32f1xx_it.c **** 
  41:Core/Src/stm32f1xx_it.c **** /* USER CODE END PM */
  42:Core/Src/stm32f1xx_it.c **** 
  43:Core/Src/stm32f1xx_it.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PV */
  45:Core/Src/stm32f1xx_it.c **** 
  46:Core/Src/stm32f1xx_it.c **** /* USER CODE END PV */
  47:Core/Src/stm32f1xx_it.c **** 
  48:Core/Src/stm32f1xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  49:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PFP */
  50:Core/Src/stm32f1xx_it.c **** 
  51:Core/Src/stm32f1xx_it.c **** /* USER CODE END PFP */
  52:Core/Src/stm32f1xx_it.c **** 
  53:Core/Src/stm32f1xx_it.c **** /* Private user code ---------------------------------------------------------*/
  54:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN 0 */
  55:Core/Src/stm32f1xx_it.c **** 
  56:Core/Src/stm32f1xx_it.c **** /* USER CODE END 0 */
  57:Core/Src/stm32f1xx_it.c **** 
  58:Core/Src/stm32f1xx_it.c **** /* External variables --------------------------------------------------------*/
  59:Core/Src/stm32f1xx_it.c **** extern DMA_HandleTypeDef hdma_spi2_tx;
  60:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN EV */
  61:Core/Src/stm32f1xx_it.c **** 
  62:Core/Src/stm32f1xx_it.c **** /* USER CODE END EV */
  63:Core/Src/stm32f1xx_it.c **** 
  64:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
  65:Core/Src/stm32f1xx_it.c **** /*           Cortex-M3 Processor Interruption and Exception Handlers          */
  66:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
  67:Core/Src/stm32f1xx_it.c **** /**
  68:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Non maskable interrupt.
  69:Core/Src/stm32f1xx_it.c ****   */
  70:Core/Src/stm32f1xx_it.c **** void NMI_Handler(void)
  71:Core/Src/stm32f1xx_it.c **** {
  27              		.loc 1 71 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  72:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  73:Core/Src/stm32f1xx_it.c **** 
  74:Core/Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  75:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  76:Core/Src/stm32f1xx_it.c **** 
  77:Core/Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  78:Core/Src/stm32f1xx_it.c **** }
  32              		.loc 1 78 1 view .LVU1
  33 0000 7047     		bx	lr
  34              		.cfi_endproc
  35              	.LFE68:
  37              		.section	.text.HardFault_Handler,"ax",%progbits
  38              		.align	1
ARM GAS  /tmp/cc88AKhp.s 			page 3


  39              		.global	HardFault_Handler
  40              		.syntax unified
  41              		.thumb
  42              		.thumb_func
  44              	HardFault_Handler:
  45              	.LFB69:
  79:Core/Src/stm32f1xx_it.c **** 
  80:Core/Src/stm32f1xx_it.c **** /**
  81:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Hard fault interrupt.
  82:Core/Src/stm32f1xx_it.c ****   */
  83:Core/Src/stm32f1xx_it.c **** void HardFault_Handler(void)
  84:Core/Src/stm32f1xx_it.c **** {
  46              		.loc 1 84 1 view -0
  47              		.cfi_startproc
  48              		@ Volatile: function does not return.
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51              		@ link register save eliminated.
  52              	.L3:
  85:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  86:Core/Src/stm32f1xx_it.c **** 
  87:Core/Src/stm32f1xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  88:Core/Src/stm32f1xx_it.c ****   while (1)
  53              		.loc 1 88 3 discriminator 1 view .LVU3
  89:Core/Src/stm32f1xx_it.c ****   {
  90:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  91:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  92:Core/Src/stm32f1xx_it.c ****   }
  54              		.loc 1 92 3 discriminator 1 view .LVU4
  88:Core/Src/stm32f1xx_it.c ****   {
  55              		.loc 1 88 9 discriminator 1 view .LVU5
  56 0000 FEE7     		b	.L3
  57              		.cfi_endproc
  58              	.LFE69:
  60              		.section	.text.MemManage_Handler,"ax",%progbits
  61              		.align	1
  62              		.global	MemManage_Handler
  63              		.syntax unified
  64              		.thumb
  65              		.thumb_func
  67              	MemManage_Handler:
  68              	.LFB70:
  93:Core/Src/stm32f1xx_it.c **** }
  94:Core/Src/stm32f1xx_it.c **** 
  95:Core/Src/stm32f1xx_it.c **** /**
  96:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Memory management fault.
  97:Core/Src/stm32f1xx_it.c ****   */
  98:Core/Src/stm32f1xx_it.c **** void MemManage_Handler(void)
  99:Core/Src/stm32f1xx_it.c **** {
  69              		.loc 1 99 1 view -0
  70              		.cfi_startproc
  71              		@ Volatile: function does not return.
  72              		@ args = 0, pretend = 0, frame = 0
  73              		@ frame_needed = 0, uses_anonymous_args = 0
  74              		@ link register save eliminated.
  75              	.L5:
 100:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
ARM GAS  /tmp/cc88AKhp.s 			page 4


 101:Core/Src/stm32f1xx_it.c **** 
 102:Core/Src/stm32f1xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 103:Core/Src/stm32f1xx_it.c ****   while (1)
  76              		.loc 1 103 3 discriminator 1 view .LVU7
 104:Core/Src/stm32f1xx_it.c ****   {
 105:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 106:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 107:Core/Src/stm32f1xx_it.c ****   }
  77              		.loc 1 107 3 discriminator 1 view .LVU8
 103:Core/Src/stm32f1xx_it.c ****   {
  78              		.loc 1 103 9 discriminator 1 view .LVU9
  79 0000 FEE7     		b	.L5
  80              		.cfi_endproc
  81              	.LFE70:
  83              		.section	.text.BusFault_Handler,"ax",%progbits
  84              		.align	1
  85              		.global	BusFault_Handler
  86              		.syntax unified
  87              		.thumb
  88              		.thumb_func
  90              	BusFault_Handler:
  91              	.LFB71:
 108:Core/Src/stm32f1xx_it.c **** }
 109:Core/Src/stm32f1xx_it.c **** 
 110:Core/Src/stm32f1xx_it.c **** /**
 111:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Prefetch fault, memory access fault.
 112:Core/Src/stm32f1xx_it.c ****   */
 113:Core/Src/stm32f1xx_it.c **** void BusFault_Handler(void)
 114:Core/Src/stm32f1xx_it.c **** {
  92              		.loc 1 114 1 view -0
  93              		.cfi_startproc
  94              		@ Volatile: function does not return.
  95              		@ args = 0, pretend = 0, frame = 0
  96              		@ frame_needed = 0, uses_anonymous_args = 0
  97              		@ link register save eliminated.
  98              	.L7:
 115:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 116:Core/Src/stm32f1xx_it.c **** 
 117:Core/Src/stm32f1xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 118:Core/Src/stm32f1xx_it.c ****   while (1)
  99              		.loc 1 118 3 discriminator 1 view .LVU11
 119:Core/Src/stm32f1xx_it.c ****   {
 120:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 121:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 122:Core/Src/stm32f1xx_it.c ****   }
 100              		.loc 1 122 3 discriminator 1 view .LVU12
 118:Core/Src/stm32f1xx_it.c ****   {
 101              		.loc 1 118 9 discriminator 1 view .LVU13
 102 0000 FEE7     		b	.L7
 103              		.cfi_endproc
 104              	.LFE71:
 106              		.section	.text.UsageFault_Handler,"ax",%progbits
 107              		.align	1
 108              		.global	UsageFault_Handler
 109              		.syntax unified
 110              		.thumb
 111              		.thumb_func
ARM GAS  /tmp/cc88AKhp.s 			page 5


 113              	UsageFault_Handler:
 114              	.LFB72:
 123:Core/Src/stm32f1xx_it.c **** }
 124:Core/Src/stm32f1xx_it.c **** 
 125:Core/Src/stm32f1xx_it.c **** /**
 126:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 127:Core/Src/stm32f1xx_it.c ****   */
 128:Core/Src/stm32f1xx_it.c **** void UsageFault_Handler(void)
 129:Core/Src/stm32f1xx_it.c **** {
 115              		.loc 1 129 1 view -0
 116              		.cfi_startproc
 117              		@ Volatile: function does not return.
 118              		@ args = 0, pretend = 0, frame = 0
 119              		@ frame_needed = 0, uses_anonymous_args = 0
 120              		@ link register save eliminated.
 121              	.L9:
 130:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 131:Core/Src/stm32f1xx_it.c **** 
 132:Core/Src/stm32f1xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 133:Core/Src/stm32f1xx_it.c ****   while (1)
 122              		.loc 1 133 3 discriminator 1 view .LVU15
 134:Core/Src/stm32f1xx_it.c ****   {
 135:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 136:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 137:Core/Src/stm32f1xx_it.c ****   }
 123              		.loc 1 137 3 discriminator 1 view .LVU16
 133:Core/Src/stm32f1xx_it.c ****   {
 124              		.loc 1 133 9 discriminator 1 view .LVU17
 125 0000 FEE7     		b	.L9
 126              		.cfi_endproc
 127              	.LFE72:
 129              		.section	.text.SVC_Handler,"ax",%progbits
 130              		.align	1
 131              		.global	SVC_Handler
 132              		.syntax unified
 133              		.thumb
 134              		.thumb_func
 136              	SVC_Handler:
 137              	.LFB73:
 138:Core/Src/stm32f1xx_it.c **** }
 139:Core/Src/stm32f1xx_it.c **** 
 140:Core/Src/stm32f1xx_it.c **** /**
 141:Core/Src/stm32f1xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 142:Core/Src/stm32f1xx_it.c ****   */
 143:Core/Src/stm32f1xx_it.c **** void SVC_Handler(void)
 144:Core/Src/stm32f1xx_it.c **** {
 138              		.loc 1 144 1 view -0
 139              		.cfi_startproc
 140              		@ args = 0, pretend = 0, frame = 0
 141              		@ frame_needed = 0, uses_anonymous_args = 0
 142              		@ link register save eliminated.
 145:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 146:Core/Src/stm32f1xx_it.c **** 
 147:Core/Src/stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 148:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 149:Core/Src/stm32f1xx_it.c **** 
 150:Core/Src/stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
ARM GAS  /tmp/cc88AKhp.s 			page 6


 151:Core/Src/stm32f1xx_it.c **** }
 143              		.loc 1 151 1 view .LVU19
 144 0000 7047     		bx	lr
 145              		.cfi_endproc
 146              	.LFE73:
 148              		.section	.text.DebugMon_Handler,"ax",%progbits
 149              		.align	1
 150              		.global	DebugMon_Handler
 151              		.syntax unified
 152              		.thumb
 153              		.thumb_func
 155              	DebugMon_Handler:
 156              	.LFB74:
 152:Core/Src/stm32f1xx_it.c **** 
 153:Core/Src/stm32f1xx_it.c **** /**
 154:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Debug monitor.
 155:Core/Src/stm32f1xx_it.c ****   */
 156:Core/Src/stm32f1xx_it.c **** void DebugMon_Handler(void)
 157:Core/Src/stm32f1xx_it.c **** {
 157              		.loc 1 157 1 view -0
 158              		.cfi_startproc
 159              		@ args = 0, pretend = 0, frame = 0
 160              		@ frame_needed = 0, uses_anonymous_args = 0
 161              		@ link register save eliminated.
 158:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 159:Core/Src/stm32f1xx_it.c **** 
 160:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 161:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 162:Core/Src/stm32f1xx_it.c **** 
 163:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 164:Core/Src/stm32f1xx_it.c **** }
 162              		.loc 1 164 1 view .LVU21
 163 0000 7047     		bx	lr
 164              		.cfi_endproc
 165              	.LFE74:
 167              		.section	.text.PendSV_Handler,"ax",%progbits
 168              		.align	1
 169              		.global	PendSV_Handler
 170              		.syntax unified
 171              		.thumb
 172              		.thumb_func
 174              	PendSV_Handler:
 175              	.LFB75:
 165:Core/Src/stm32f1xx_it.c **** 
 166:Core/Src/stm32f1xx_it.c **** /**
 167:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Pendable request for system service.
 168:Core/Src/stm32f1xx_it.c ****   */
 169:Core/Src/stm32f1xx_it.c **** void PendSV_Handler(void)
 170:Core/Src/stm32f1xx_it.c **** {
 176              		.loc 1 170 1 view -0
 177              		.cfi_startproc
 178              		@ args = 0, pretend = 0, frame = 0
 179              		@ frame_needed = 0, uses_anonymous_args = 0
 180              		@ link register save eliminated.
 171:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 172:Core/Src/stm32f1xx_it.c **** 
 173:Core/Src/stm32f1xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
ARM GAS  /tmp/cc88AKhp.s 			page 7


 174:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 175:Core/Src/stm32f1xx_it.c **** 
 176:Core/Src/stm32f1xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 177:Core/Src/stm32f1xx_it.c **** }
 181              		.loc 1 177 1 view .LVU23
 182 0000 7047     		bx	lr
 183              		.cfi_endproc
 184              	.LFE75:
 186              		.section	.text.SysTick_Handler,"ax",%progbits
 187              		.align	1
 188              		.global	SysTick_Handler
 189              		.syntax unified
 190              		.thumb
 191              		.thumb_func
 193              	SysTick_Handler:
 194              	.LFB76:
 178:Core/Src/stm32f1xx_it.c **** 
 179:Core/Src/stm32f1xx_it.c **** /**
 180:Core/Src/stm32f1xx_it.c ****   * @brief This function handles System tick timer.
 181:Core/Src/stm32f1xx_it.c ****   */
 182:Core/Src/stm32f1xx_it.c **** void SysTick_Handler(void)
 183:Core/Src/stm32f1xx_it.c **** {
 195              		.loc 1 183 1 view -0
 196              		.cfi_startproc
 197              		@ args = 0, pretend = 0, frame = 0
 198              		@ frame_needed = 0, uses_anonymous_args = 0
 199 0000 08B5     		push	{r3, lr}
 200              	.LCFI0:
 201              		.cfi_def_cfa_offset 8
 202              		.cfi_offset 3, -8
 203              		.cfi_offset 14, -4
 184:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 185:Core/Src/stm32f1xx_it.c **** 
 186:Core/Src/stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 187:Core/Src/stm32f1xx_it.c ****   HAL_IncTick();
 204              		.loc 1 187 3 view .LVU25
 205 0002 FFF7FEFF 		bl	HAL_IncTick
 206              	.LVL0:
 188:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 189:Core/Src/stm32f1xx_it.c **** 
 190:Core/Src/stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 191:Core/Src/stm32f1xx_it.c **** }
 207              		.loc 1 191 1 is_stmt 0 view .LVU26
 208 0006 08BD     		pop	{r3, pc}
 209              		.cfi_endproc
 210              	.LFE76:
 212              		.section	.text.EXTI2_IRQHandler,"ax",%progbits
 213              		.align	1
 214              		.global	EXTI2_IRQHandler
 215              		.syntax unified
 216              		.thumb
 217              		.thumb_func
 219              	EXTI2_IRQHandler:
 220              	.LFB77:
 192:Core/Src/stm32f1xx_it.c **** 
 193:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
 194:Core/Src/stm32f1xx_it.c **** /* STM32F1xx Peripheral Interrupt Handlers                                    */
ARM GAS  /tmp/cc88AKhp.s 			page 8


 195:Core/Src/stm32f1xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 196:Core/Src/stm32f1xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 197:Core/Src/stm32f1xx_it.c **** /* please refer to the startup file (startup_stm32f1xx.s).                    */
 198:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
 199:Core/Src/stm32f1xx_it.c **** 
 200:Core/Src/stm32f1xx_it.c **** /**
 201:Core/Src/stm32f1xx_it.c ****   * @brief This function handles EXTI line2 interrupt.
 202:Core/Src/stm32f1xx_it.c ****   */
 203:Core/Src/stm32f1xx_it.c **** void EXTI2_IRQHandler(void)
 204:Core/Src/stm32f1xx_it.c **** {
 221              		.loc 1 204 1 is_stmt 1 view -0
 222              		.cfi_startproc
 223              		@ args = 0, pretend = 0, frame = 0
 224              		@ frame_needed = 0, uses_anonymous_args = 0
 225 0000 08B5     		push	{r3, lr}
 226              	.LCFI1:
 227              		.cfi_def_cfa_offset 8
 228              		.cfi_offset 3, -8
 229              		.cfi_offset 14, -4
 205:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN EXTI2_IRQn 0 */
 206:Core/Src/stm32f1xx_it.c **** 
 207:Core/Src/stm32f1xx_it.c ****   /* USER CODE END EXTI2_IRQn 0 */
 208:Core/Src/stm32f1xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_2);
 230              		.loc 1 208 3 view .LVU28
 231 0002 0420     		movs	r0, #4
 232 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 233              	.LVL1:
 209:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN EXTI2_IRQn 1 */
 210:Core/Src/stm32f1xx_it.c **** 
 211:Core/Src/stm32f1xx_it.c ****   /* USER CODE END EXTI2_IRQn 1 */
 212:Core/Src/stm32f1xx_it.c **** }
 234              		.loc 1 212 1 is_stmt 0 view .LVU29
 235 0008 08BD     		pop	{r3, pc}
 236              		.cfi_endproc
 237              	.LFE77:
 239              		.section	.text.DMA1_Channel5_IRQHandler,"ax",%progbits
 240              		.align	1
 241              		.global	DMA1_Channel5_IRQHandler
 242              		.syntax unified
 243              		.thumb
 244              		.thumb_func
 246              	DMA1_Channel5_IRQHandler:
 247              	.LFB78:
 213:Core/Src/stm32f1xx_it.c **** 
 214:Core/Src/stm32f1xx_it.c **** /**
 215:Core/Src/stm32f1xx_it.c ****   * @brief This function handles DMA1 channel5 global interrupt.
 216:Core/Src/stm32f1xx_it.c ****   */
 217:Core/Src/stm32f1xx_it.c **** void DMA1_Channel5_IRQHandler(void)
 218:Core/Src/stm32f1xx_it.c **** {
 248              		.loc 1 218 1 is_stmt 1 view -0
 249              		.cfi_startproc
 250              		@ args = 0, pretend = 0, frame = 0
 251              		@ frame_needed = 0, uses_anonymous_args = 0
 252 0000 08B5     		push	{r3, lr}
 253              	.LCFI2:
 254              		.cfi_def_cfa_offset 8
 255              		.cfi_offset 3, -8
ARM GAS  /tmp/cc88AKhp.s 			page 9


 256              		.cfi_offset 14, -4
 219:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel5_IRQn 0 */
 220:Core/Src/stm32f1xx_it.c **** 
 221:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel5_IRQn 0 */
 222:Core/Src/stm32f1xx_it.c ****   HAL_DMA_IRQHandler(&hdma_spi2_tx);
 257              		.loc 1 222 3 view .LVU31
 258 0002 0248     		ldr	r0, .L19
 259 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 260              	.LVL2:
 223:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel5_IRQn 1 */
 224:Core/Src/stm32f1xx_it.c **** 
 225:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel5_IRQn 1 */
 226:Core/Src/stm32f1xx_it.c **** }
 261              		.loc 1 226 1 is_stmt 0 view .LVU32
 262 0008 08BD     		pop	{r3, pc}
 263              	.L20:
 264 000a 00BF     		.align	2
 265              	.L19:
 266 000c 00000000 		.word	hdma_spi2_tx
 267              		.cfi_endproc
 268              	.LFE78:
 270              		.text
 271              	.Letext0:
 272              		.file 2 "/home/seradya/toolchains/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_de
 273              		.file 3 "/home/seradya/toolchains/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint
 274              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 275              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 276              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 277              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 278              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  /tmp/cc88AKhp.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_it.c
     /tmp/cc88AKhp.s:18     .text.NMI_Handler:0000000000000000 $t
     /tmp/cc88AKhp.s:24     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/cc88AKhp.s:38     .text.HardFault_Handler:0000000000000000 $t
     /tmp/cc88AKhp.s:44     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/cc88AKhp.s:61     .text.MemManage_Handler:0000000000000000 $t
     /tmp/cc88AKhp.s:67     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/cc88AKhp.s:84     .text.BusFault_Handler:0000000000000000 $t
     /tmp/cc88AKhp.s:90     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/cc88AKhp.s:107    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/cc88AKhp.s:113    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/cc88AKhp.s:130    .text.SVC_Handler:0000000000000000 $t
     /tmp/cc88AKhp.s:136    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/cc88AKhp.s:149    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/cc88AKhp.s:155    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/cc88AKhp.s:168    .text.PendSV_Handler:0000000000000000 $t
     /tmp/cc88AKhp.s:174    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/cc88AKhp.s:187    .text.SysTick_Handler:0000000000000000 $t
     /tmp/cc88AKhp.s:193    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/cc88AKhp.s:213    .text.EXTI2_IRQHandler:0000000000000000 $t
     /tmp/cc88AKhp.s:219    .text.EXTI2_IRQHandler:0000000000000000 EXTI2_IRQHandler
     /tmp/cc88AKhp.s:240    .text.DMA1_Channel5_IRQHandler:0000000000000000 $t
     /tmp/cc88AKhp.s:246    .text.DMA1_Channel5_IRQHandler:0000000000000000 DMA1_Channel5_IRQHandler
     /tmp/cc88AKhp.s:266    .text.DMA1_Channel5_IRQHandler:000000000000000c $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_GPIO_EXTI_IRQHandler
HAL_DMA_IRQHandler
hdma_spi2_tx
